<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Independentsoft.Sip</name>
    </assembly>
    <members>
        <member name="T:Independentsoft.Sip.AuthenticationException">
            <summary>
            The exception that is thrown when authentication fails. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.AuthenticationException.#ctor">
            <summary>
            Initializes a new instance of the AuthenticationException class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.AuthenticationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AuthenticationException class with the specified error message. 
            </summary>
            <param name="message">The message that describes the error</param>
        </member>
        <member name="M:Independentsoft.Sip.AuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the AuthenticationException class with the specified error message and inner exception. 
            </summary>
            <param name="message">The message that describes the error</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:Independentsoft.Sip.ConnectionException">
            <summary>
            The exception that is raised when an error occurs on the connection to the SIP server. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.ConnectionException.#ctor">
            <summary>
            Initializes a new instance of the ConnectionException class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.ConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ConnectionException class with the specified error message. 
            </summary>
            <param name="message">The message that describes the error</param>
        </member>
        <member name="M:Independentsoft.Sip.ConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ConnectionException class with the specified error message and inner exception. 
            </summary>
            <param name="message">The message that describes the error</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:Independentsoft.Sip.Contact">
            <summary>
            The Contact class contains the URI at which the client would like to receive requests. 
            The Contact can contain a display name, a URI with URI parameters, and parameters.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Contact.#ctor">
            <summary>
            Initializes a new instance of the Contact class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Contact.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Contact class from the specified string. 
            </summary>
            <param name="contact">A string contains user's address and name.</param>
        </member>
        <member name="M:Independentsoft.Sip.Contact.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Contact class with the specified name and address. 
            </summary>
            <param name="name">A string contains user's name.</param>
            <param name="address">A string contains user's address. Usually it contains IP address and port number where user would like to receive requests/responses.</param>
        </member>
        <member name="M:Independentsoft.Sip.Contact.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Contact class with the specified name, address and expires value. 
            </summary>
            <param name="name">A string contains user's name.</param>
            <param name="address">A string contains user's address. Usually it contains IP address and port number where user would like to receive requests/responses.</param>
            <param name="expires">A number of seconds indicates duration of the registration. This parameter is only used when the Contact is present in a REGISTER request or response.</param>
        </member>
        <member name="M:Independentsoft.Sip.Contact.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the Contact class with the specified name, address and expires value.
            </summary>
            <param name="name">A string contains user's name.</param>
            <param name="address">A string contains user's address. Usually it contains IP address and port number where user would like to receive requests/responses.</param>
            <param name="expires">A string contains date when registration will expire. This parameter is only used when the Contact is present in a REGISTER request or response.</param>
        </member>
        <member name="M:Independentsoft.Sip.Contact.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Contact.Name">
            <summary>
            Gets or sets display name.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Contact.Address">
            <summary>
            Gets or sets the URI. Usually it contains IP address and port number where user would like to receive requests/responses.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Contact.Priority">
            <summary>
            Gets or sets "q" property.  This parameter is only used when the Contact is present in a REGISTER request or response.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Contact.Expires">
            <summary>
            Gets or sets "expires" parameter.  This parameter is only used when the Contact is present in a REGISTER request or response.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Contact.Parameters">
            <summary>
            Gets collection of parameters.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.ContactInfo">
            <summary>
            The ContactInfo class contains display name and address of sender or recipient of request or response.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.ContactInfo.#ctor">
            <summary>
            Initializes a new instance of the ContactInfo class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.ContactInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ContactInfo class from the specified string.
            </summary>
            <param name="contactInfo">A string contains address and display name.</param>
        </member>
        <member name="M:Independentsoft.Sip.ContactInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ContactInfo class with the specified display name and address.
            </summary>
            <param name="name">A string contains display name.</param>
            <param name="address">A string contains address.</param>
        </member>
        <member name="M:Independentsoft.Sip.ContactInfo.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.ContactInfo.Name">
            <summary>
            Gets or sets display name.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.ContactInfo.Address">
            <summary>
            Gets or sets URI.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.ContactInfo.Tag">
            <summary>
            Gets or sets "tag" parameter.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.ContactInfo.Parameters">
            <summary>
            Gets collection of parameters.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Date">
            <summary>
            Represents date in RFC 822 format. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Date.#ctor">
            <summary>
            Initializes a new instance of the Date.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Date.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Date specified with date as a string.
            </summary>
            <param name="date">A date in format "ddd, d MMM yyyy HH:mm:ss zzz"</param>
        </member>
        <member name="M:Independentsoft.Sip.Date.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the Date specified with DateTime.
            </summary>
            <param name="dateTime">A date and time as DateTime object.</param>
        </member>
        <member name="M:Independentsoft.Sip.Date.#ctor(System.DateTime,System.String)">
            <summary>
            Initializes a new instance of the Date specified with DateTime and time zone.
            </summary>
            <param name="dateTime">A date and time as DateTime object.</param>
            <param name="timeZone">A time zone.</param>
        </member>
        <member name="M:Independentsoft.Sip.Date.ToString">
            <summary>
            Converts the value of this instance to its equivalent string.
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Date.DateTime">
            <summary>
            Gets or sets date and time.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Date.TimeZone">
            <summary>
            Gets or sets time zone.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Dialog">
            <summary>
            The Dialog class represents a peer-to-peer SIP relationship between two clients that persists for some time. 
            The Dialog facilitates sequencing of messages between the clients and proper routing of requests between 
            both of them.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Dialog.#ctor">
            <summary>
            Initializes a new instance of the Dialog class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Dialog.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Dialog.State">
            <summary>
            Gets state of the dialog.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Dialog.Requested">
            <summary>
            Returns true if you are sent request
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Dialog.From">
            <summary>
            Gets the originator of the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Dialog.To">
            <summary>
            Gets <c>To</c> header field of the dialog.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Dialog.CallID">
            <summary>
            Gets <c>Call-ID</c> header field of the dialog.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Dialog.Contact">
            <summary>
            Gets <c>Contact</c> header field of the dialog.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Dialog.LocalTag">
            <summary>
            Gets the local tag of the dialog.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Dialog.RemoteTag">
            <summary>
            Gets the remote tag of the dialog.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Dialog.LocalUri">
            <summary>
            Gets the local URI of the dialog.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Dialog.RemoteUri">
            <summary>
            Gets the remote URI of the dialog.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Dialog.RecordRoute">
            <summary>
            Gets <c>Record-Route</c> header field of the dialog.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Dialog.RSeq">
            <summary>
            Gets <c>RSeq</c> header field of the dialog.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Dialog.CSeq">
            <summary>
            Gets <c>CSeq</c> header field of the dialog.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Dialog.EventName">
            <summary>
            Gets <c>Event</c> header field of the dialog.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Dialog.Route">
            <summary>
            Gets <c>Route</c> header field of the dialog.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.DialogState">
            <summary>
            Specifies state of a dialog. 
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.DialogState.Early">
            <summary>
            Represents dialog created with a provisional response.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.DialogState.Confirmed">
            <summary>
            Represents dialog created with a final response.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Header">
            <summary>
            This class contains header fields for <see cref="T:Independentsoft.Sip.Request" /> and <see cref="T:Independentsoft.Sip.Response" />. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Header.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Header" /> class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Header.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Header" /> class from the specified string.
            </summary>
            <param name="header">A string represents header field.</param>
        </member>
        <member name="M:Independentsoft.Sip.Header.Add(Independentsoft.Sip.StandardHeader,System.String)">
            <summary>
            Adds new header field with specified header name and value.
            </summary>
            <param name="headerKey">A <see cref="T:Independentsoft.Sip.StandardHeader" /> represents header key.</param>
            <param name="headerValue">A string represents header value.</param>
        </member>
        <member name="M:Independentsoft.Sip.Header.Add(System.String,System.String)">
            <summary>
            Adds new header field with specified header name and value.
            </summary>
            <param name="headerKey">A string represents header key.</param>
            <param name="headerValue">A string represents header value.</param>
        </member>
        <member name="M:Independentsoft.Sip.Header.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Header.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies an <see cref="T:Independentsoft.Sip.Header" /> array to the collection, starting at a specified target index.
            </summary>
            <param name="array">The array of <see cref="T:Independentsoft.Sip.Header" /> objects to copy to the collection.</param>
            <param name="index">The index at which the copied notes begin.</param>
        </member>
        <member name="M:Independentsoft.Sip.Header.GetEnumerator">
            <summary>
            Returns an IEnumerator that can iterate through the <see cref="T:Independentsoft.Sip.Header" />.
            </summary>
            <returns>An IEnumerator for the <see cref="T:Independentsoft.Sip.Header" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Header.Remove(Independentsoft.Sip.StandardHeader)">
            <summary>
            Removes the element with the specified header key from the <see cref="T:Independentsoft.Sip.Header" />.
            </summary>
            <param name="headerKey">A <see cref="T:Independentsoft.Sip.StandardHeader" /> represents header key.</param>
        </member>
        <member name="M:Independentsoft.Sip.Header.Remove(System.String)">
            <summary>
            Removes the element with the specified header key from the <see cref="T:Independentsoft.Sip.Header" />.
            </summary>
            <param name="headerKey">A string represents header key.</param>
        </member>
        <member name="M:Independentsoft.Sip.Header.Set(Independentsoft.Sip.StandardHeader,System.String)">
            <summary>
            Sets value of the specified header field.
            </summary>
            <param name="headerKey">A <see cref="T:Independentsoft.Sip.StandardHeader" /> represents header key.</param>
            <param name="value">A string represents header value.</param>
        </member>
        <member name="M:Independentsoft.Sip.Header.Set(System.String,System.String)">
            <summary>
            Sets value of the specified header field.
            </summary>
            <param name="headerKey">A string represents header key.</param>
            <param name="value">A string represents header value.</param>
        </member>
        <member name="M:Independentsoft.Sip.Header.Contains(Independentsoft.Sip.StandardHeader)">
            <summary>
            Determines whether the <see cref="T:Independentsoft.Sip.Header" /> contains a specific header key.
            </summary>
            <param name="headerKey">A <see cref="T:Independentsoft.Sip.StandardHeader" /> represents header key.</param>
            <returns>True if the <see cref="T:Independentsoft.Sip.Header" /> contains an element with the specified key; otherwise, false.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Header.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:Independentsoft.Sip.Header" /> contains a specific header key.
            </summary>
            <param name="headerKey">A string represents header key.</param>
            <returns>True if the <see cref="T:Independentsoft.Sip.Header" /> contains an element with the specified key; otherwise, false.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Header.ContainsKey(Independentsoft.Sip.StandardHeader)">
            <summary>
            Determines whether the <see cref="T:Independentsoft.Sip.Header" /> contains a specific header key.
            </summary>
            <param name="headerKey">A <see cref="T:Independentsoft.Sip.StandardHeader" /> represents header key.</param>
            <returns>True if the <see cref="T:Independentsoft.Sip.Header" /> contains an element with the specified key; otherwise, false.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Header.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:Independentsoft.Sip.Header" /> contains a specific header key.
            </summary>
            <param name="headerKey">A string represents header key.</param>
            <returns>True if the <see cref="T:Independentsoft.Sip.Header" /> contains an element with the specified key; otherwise, false.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Header.ContainsValue(System.String)">
            <summary>
            Determines whether the <see cref="T:Independentsoft.Sip.Header" /> contains a specific header value.
            </summary>
            <param name="headerValue">A string represents header value.</param>
            <returns>True if the <see cref="T:Independentsoft.Sip.Header" /> contains an element with the specified value; otherwise, false.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Header.Clear">
            <summary>
            Removes all elements from the <see cref="T:Independentsoft.Sip.Header" />.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Header.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Independentsoft.Sip.Header" /> is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Header.Count">
            <summary>
            Gets the number of elements in the <see cref="T:Independentsoft.Sip.Header" />.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Header.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:Independentsoft.Sip.Header" />.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Header.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Independentsoft.Sip.Header" /> is read-only.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Header.Item(Independentsoft.Sip.StandardHeader)">
            <summary>
            Gets or sets the value associated with the specified header key. In C#, this property is the indexer for the <see cref="T:Independentsoft.Sip.Header" /> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Header.Item(System.String)">
            <summary>
            Gets or sets the value associated with the specified header key. In C#, this property is the indexer for the <see cref="T:Independentsoft.Sip.Header" /> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Header.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.WriteLogEventHandler">
            <summary>
            Represents the method that will handle the WriteLog event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Independentsoft.Sip.WriteLogEventArgs" /> that contains the event data.</param>
        </member>
        <member name="T:Independentsoft.Sip.Logger">
            <summary>
            Writes all log data to a stream or a file.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Logger.#ctor">
            <summary>
            Initializes a new instance of the Logger class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Logger.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Logger class with the specified log file path.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Independentsoft.Sip.Logger.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the Logger with the specified log file path.
            </summary>
            <param name="path"></param>
            <param name="append"></param>
        </member>
        <member name="M:Independentsoft.Sip.Logger.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the Logger class with the specified log file path.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Independentsoft.Sip.Logger.Write(System.String)">
            <summary>
            Writes log data to a log file or a stream.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Independentsoft.Sip.Logger.WriteLine(System.String)">
            <summary>
            Writes single line to log file or stream.
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:Independentsoft.Sip.Logger.Open">
            <summary>
            Opens log file or log stream.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Logger.Close">
            <summary>
            Closes the log file.
            </summary>
        </member>
        <member name="E:Independentsoft.Sip.Logger.WriteLog">
            <summary>
            Occurs to indicate the write to the log.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Logger.Stream">
            <summary>
            Gets or sets log stream.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Logger.Path">
            <summary>
            Gets or sets log file path.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Logger.Append">
            <summary>
            Gets or sets append
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Methods.Ack">
            <summary>
            The Ack class represents ACK method. The ACK method is used to acknowledge final responses to INVITE requests. 
            An ACK may contain an "application/sdp" message body. This is permitted if the initial INVITE did not 
            contain a SDP message body. If the INVITE contained a message body, the ACK may not contain a message body.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Request">
            <summary>
            The Request class represents SIP requests or methods in the protocol, since they request a specific action
            to be taken by another client or server.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Request.#ctor">
            <summary>
            Initializes a new instance of the Request class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Request.#ctor(Independentsoft.Sip.Response)">
            <summary>
            Initializes a new instance of the Request class from the specified response.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="M:Independentsoft.Sip.Request.#ctor(Independentsoft.Sip.Response,Independentsoft.Sip.SipMethod)">
            <summary>
            Initializes a new instance of the Request class from the specified response.
            </summary>
            <param name="response">The response.</param>
            <param name="method">The method.</param>
        </member>
        <member name="M:Independentsoft.Sip.Request.#ctor(Independentsoft.Sip.Dialog)">
            <summary>
            Initializes a new instance of the Request class from the specified dialog.
            </summary>
            <param name="dialog">The dialog.</param>
        </member>
        <member name="M:Independentsoft.Sip.Request.#ctor(Independentsoft.Sip.Dialog,Independentsoft.Sip.SipMethod)">
            <summary>
            Initializes a new instance of the Request class from the specified dialog.
            </summary>
            <param name="dialog">The dialog.</param>
            <param name="method">The method.</param>
            <exception cref="T:System.ArgumentNullException">Cannot create request. Dialog is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.Request.Parse(System.String)">
            <summary>
            Converts the specified string representation of a request to its <see cref="T:Independentsoft.Sip.Request" /> equivalent.
            </summary>
            <param name="request">A string containing a request to convert.</param>
            <returns>A <see cref="T:Independentsoft.Sip.Request" /> equivalent contained in the request parameter.</returns>
            <exception cref="T:System.ArgumentNullException">request;Request is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.Request.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Request.Method">
            <summary>
            Gets the request method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:Independentsoft.Sip.Request.Uri">
            <summary>
            Gets or sets request URI. It indicates the user or service to which this request is being addressed.
            </summary>
            <value>The URI.</value>
        </member>
        <member name="P:Independentsoft.Sip.Request.Header">
            <summary>
            Gets the request header.
            </summary>
            <value>The header.</value>
        </member>
        <member name="P:Independentsoft.Sip.Request.Body">
            <summary>
            Gets or sets the request body.
            </summary>
            <value>The body.</value>
        </member>
        <member name="P:Independentsoft.Sip.Request.CallID">
            <summary>
            Gets or sets <c>Call-ID</c> header field. The <c>Call-ID</c> header field is mandatory in all
            requests. It is used to uniquely identify a call between two clients. If is not set then the
            SipClient will set this header.
            </summary>
            <value>The call identifier.</value>
        </member>
        <member name="P:Independentsoft.Sip.Request.CSeq">
            <summary>
            Gets <c>CSeq</c> header field. The <c>CSeq</c> header field is a required header field in
            every request. The <c>CSeq</c> header field contains a number that increases for each request.
            Usually, it increases by 1 for each new request, with the exception	of CANCEL and ACK requests,
            which use the <c>CSeq</c> number of the INVITE request to which it refers.
            </summary>
            <value>The c seq.</value>
        </member>
        <member name="P:Independentsoft.Sip.Request.MaxForwards">
            <summary>
            Gets or sets <c>Max-Forwards</c> header field. The <c>Max-Forwards</c> header field is used to
            indicate the maximum number of hops that a the request may take. The value of the header field is
            decremented by each proxy that forwards the request. If is not set then the SipClient will set this header.
            </summary>
            <value>The maximum forwards.</value>
        </member>
        <member name="P:Independentsoft.Sip.Request.Date">
            <summary>
            Gets or sets <c>Date</c> header field. The <c>Date</c> header field is used to convey the date
            when the request is sent.
            </summary>
            <value>The date.</value>
        </member>
        <member name="P:Independentsoft.Sip.Request.From">
            <summary>
            Gets or sets <c>From</c> header field. The <c>From</c> header field is a required header field
            that indicates the originator of the request.
            </summary>
            <value>From.</value>
        </member>
        <member name="P:Independentsoft.Sip.Request.To">
            <summary>
            Gets or sets <c>To</c> header field. The <c>To</c> header field is a required header field
            in every request used to indicate the recipient of the request.
            </summary>
            <value>To.</value>
        </member>
        <member name="P:Independentsoft.Sip.Request.Via">
            <summary>
            Gets or sets <c>Via</c> header field. The <c>Via</c> header field indicates the path taken by
            the request so far and indicates the path that should be followed in routing responses. The "branch"
            parameter in the <c>Via</c> header field values serves as a transaction identifier, and is used by proxies
            to detect loops. The <c>Via</c> header field value contains the transport protocol used to send the message,
            the client's host name or network address, and possibly	the port number at which it wishes to receive
            responses. The <c>Via</c> header field value can also contain parameters such as "maddr", "ttl", "received" and "branch".
            </summary>
            <value>The via.</value>
        </member>
        <member name="P:Independentsoft.Sip.Request.SessionDescription">
            <summary>
            Returns the request body as <see cref="P:Independentsoft.Sip.Request.SessionDescription" /> if <c>Content-Type</c> is "application/sdp", otherwise returns null. Sets request body and sets <c>Content-Type</c> as "application/sdp".
            </summary>
            <value>The session description.</value>
        </member>
        <member name="P:Independentsoft.Sip.Request.ContentLength">
            <summary>
            Gets o sets <c>Content-Length</c> header field. The <c>Content-Length</c> header field indicates the size
            of the request body. If no body is present in a request, then the <c>Content-Length</c> header field value must be zero.
            </summary>
            <value>The length of the content.</value>
        </member>
        <member name="P:Independentsoft.Sip.Request.ContentType">
            <summary>
            Gets or sets <c>Content-Type</c> header field. The <c>Content-Type</c> header field is used to specify
            the Internet media type in the request body. Media types have the familiar form	type/sub-type. If this
            header field is not present, application/sdp is assumed.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:Independentsoft.Sip.Request.Branch">
            <summary>
            Sets or gets branch parameter in Via header.
            </summary>
            <value>The branch.</value>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Ack.#ctor">
            <summary>
            Initializes a new instance of the Ack class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Ack.#ctor(Independentsoft.Sip.Dialog)">
            <summary>
            Initializes a new instance of the Ack class from the specified dialog. 
            </summary>
            <param name="dialog">A dialog created with appropriate INVITE request.</param>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Ack.#ctor(Independentsoft.Sip.Response)">
            <summary>
            Initializes a new instance of the Ack class from the specified response. 
            </summary>
            <param name="response">A response from appropriate INVITE request.</param>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Ack.ContentDisposition">
            <summary>
            Gets or sets <c>Content-Disposition</c> header field. The <c>Content-Disposition</c> header field 
            is used to describe the function of a request body. 
             </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Ack.ContentEncoding">
            <summary>
            Gets or sets <c>Content-Encoding</c> header field. The <c>Content-Encoding</c> header field is used as a modifier to the "media-type".
            When present, its value indicates what additional content codings have been applied 
            to the request body, and thus what decoding mechanisms must be applied in order to 
            obtain the media-type referenced by the <c>Content-Type</c> header field.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Ack.ContentLanguage">
            <summary>
            Gets or sets <c>Content-Language</c> header field. The <c>Content-Language</c> header field is used to indicate the language of
            a request body. It contains a language tag, which identifies the language.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Ack.AllowEvents">
            <summary>
            Gets or sets <c>Allow-Events</c> header field. The <c>Allow-Events</c> header field,
            includes a list of tokens which indicates the event packages supported by the client. In other words, 
            a client sending an <c>Allow-Events</c> header is advertising that it can process and generate requests
            for all of the event packages listed in that header.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Ack.Contact">
            <summary>
            Gets or sets <c>Contact</c> header field. The <c>Contact</c> header field is used to convey a URI 
            that identifies the request originator.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Ack.Route">
            <summary>
            Gets <c>Route</c> header field. The <c>Route</c> header field is used to provide routing information for requests.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Ack.Timestamp">
            <summary>
             Gets or sets <c>Timestamp</c> header field. The <c>Timestamp</c> header field describes 
             when the client sent the request to the server. The time format is not specified.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Methods.Bye">
            <summary>
            The Bye class represents BYE method. The BYE method is used to terminate an established media session.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Bye.#ctor">
            <summary>
            Initializes a new instance of the Bye class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Bye.#ctor(Independentsoft.Sip.Dialog)">
            <summary>
            Initializes a new instance of the Bye class from the specified dialog. 
            </summary>
            <param name="dialog">A dialog represents session to terminate.</param>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Bye.#ctor(Independentsoft.Sip.Response)">
            <summary>
            Initializes a new instance of the Bye class from the specified response.
            </summary>
            <param name="response">A response represents session to terminate.</param>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.ContentDisposition">
            <summary>
            Gets or sets <c>Content-Disposition</c> header field. The <c>Content-Disposition</c> header field 
            is used to describe the function of a request body. 
             </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.ContentEncoding">
            <summary>
            Gets or sets <c>Content-Encoding</c> header field. The <c>Content-Encoding</c> header field is used as a modifier to the "media-type".
            When present, its value indicates what additional content codings have been applied 
            to the request body, and thus what decoding mechanisms must be applied in order to 
            obtain the media-type referenced by the <c>Content-Type</c> header field.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.ContentLanguage">
            <summary>
            Gets or sets <c>Content-Language</c> header field. The <c>Content-Language</c> header field is used to indicate the language of
            a request body. It contains a language tag, which identifies the language.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.AllowEvents">
            <summary>
            Gets or sets <c>Allow-Events</c> header field. The <c>Allow-Events</c> header field,
            includes a list of tokens which indicates the event packages supported by the client. In other words, 
            a client sending an <c>Allow-Events</c> header is advertising that it can process and generate requests
            for all of the event packages listed in that header.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.Accept">
            <summary>
            Gets or sets <c>Accept</c> header field. The <c>Accept</c> header field is used to indicate acceptable message Internet media types in the request body. 
            The header field describes media types using the format <c>type/sub-type</c> commonly used in the Internet. 
            If not present, the assumed acceptable request body format is application/sdp. The wildcard "*" can be used to specify all subtypes.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.AcceptEncoding">
            <summary>
            Gets or sets <c>Accept-Encoding</c> header field. The <c>Accept-Encoding</c> header field, 
            is used to specify acceptable request body encoding schemes. If not included, the assumed 
            encoding will be <c>text/plain</c>.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.AcceptLanguage">
            <summary>
            Gets or sets <c>Accept-Language</c> header field. The <c>Accept-Language</c> header field, is used 
            in requests to indicate the	preferred languages for reason phrases or session descriptions in the 
            request body. The rules for ordering the languages is based on the "q" parameter.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.Allow">
            <summary>
            Gets or sets <c>Allow</c> header field. The <c>Allow</c> header field lists the set of methods 
            supported by the client.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.CallInfo">
            <summary>
            Gets or sets <c>Call-Info</c> header field. The <c>Call-Info</c> header field provides additional 
            information about the caller.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.ErrorInfo">
            <summary>
            Gets or sets <c>Error-Info</c> header field. The <c>Error-Info</c> header field provides a pointer 
            to additional information about the error status response.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.Expires">
            <summary>
            Gets or sets <c>Expires</c> header field. The <c>Expires</c> header field indicates the time interval 
            in which the request is valid. The value of this header field is number of seconds between 0 and 4294967295.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.ProxyRequire">
            <summary>
            Gets or sets <c>Proxy-Require</c> header field. The <c>Proxy-Require</c> header field is used to list 
            features and extensions that a client requires a proxy to support in order to process the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.ReferredBy">
            <summary>
            Gets or sets <c>Referred-By</c> header field. The <c>Referred-By</c> header field provides the 
            recipient of a triggered request information that the request was generated as a result of a REFER
            and the originator of the REFER.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.Require">
            <summary>
            Gets <c>Require</c> header field. The <c>Require</c> header field is used to tell the client about 
            options that the sender expects the client to support in order to process the request. The <c>Require</c> 
            header field contains a list of option tags. Each option tag defines a SIP extension that 
            must be understood to process the request. Frequently, this is used to indicate that a specific set 
            of extension header fields need to be understood. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.Route">
            <summary>
            Gets <c>Route</c> header field. The <c>Route</c> header field is used to provide routing information for requests.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.RecordRoute">
            <summary>
            Gets or sets <c>Record-Route</c> header field. The <c>Record-Route</c> header field is used to force 
            routing through a proxy for all subsequent requests in a session between two clients.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.Server">
            <summary>
            Gets <c>Server</c> header field. The <c>Server</c> header field contains information about the 
            software used by the server to handle the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.Supported">
            <summary>
             Gets or sets <c>Supported</c> header field. The <c>Supported</c> header field enumerates all the 
             extensions supported by the client or server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.Timestamp">
            <summary>
             Gets or sets <c>Timestamp</c> header field. The <c>Timestamp</c> header field describes 
             when the client sent the request to the server. The time format is not specified.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.Unsupported">
            <summary>
            Gets <c>Unsupported</c> header field. The <c>Unsupported</c> header field lists the features not supported by the server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Bye.Warning">
            <summary>
            Gets <c>Warning</c> header field. The <c>Warning</c> header field is used to carry additional 
            information about the status of a request or response. The warning text should be in a natural 
            language that is most likely to be intelligible to the human user receiving the response. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Methods.Cancel">
            <summary>
            The Cancel class represents CANCEL method. The CANCEL method is used to terminate pending INVITE attempts.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Cancel.#ctor">
            <summary>
            Initializes a new instance of the Cancel class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Cancel.#ctor(Independentsoft.Sip.Dialog)">
            <summary>
            Initializes a new instance of the Cancel class from the specified early dialog.
            </summary>
            <param name="dialog">An early dialog created with appropriate INVITE request.</param>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Cancel.#ctor(Independentsoft.Sip.Response)">
            <summary>
            Initializes a new instance of the Cancel class from the specified response.
            </summary>
            <param name="response">A response from appropriate INVITE request.</param>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Cancel.ErrorInfo">
            <summary>
            Gets or sets <c>Error-Info</c> header field. The <c>Error-Info</c> header field provides a pointer 
            to additional information about the error status response.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Cancel.RecordRoute">
            <summary>
            Gets or sets <c>Record-Route</c> header field. The <c>Record-Route</c> header field is used to force 
            routing through a proxy for all subsequent requests in a session between two clients.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Cancel.Route">
            <summary>
            Gets <c>Route</c> header field. The <c>Route</c> header field is used to provide routing information for requests.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Cancel.Server">
            <summary>
            Gets <c>Server</c> header field. The <c>Server</c> header field contains information about the 
            software used by the server to handle the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Cancel.Supported">
            <summary>
             Gets or sets <c>Supported</c> header field. The <c>Supported</c> header field enumerates all the 
             extensions supported by the client or server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Cancel.Timestamp">
            <summary>
             Gets or sets <c>Timestamp</c> header field. The <c>Timestamp</c> header field describes 
             when the client sent the request to the server. The time format is not specified.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Methods.Info">
            <summary>
            The Info class represents INFO method. The INFO method is used by a client to send call signaling 
            information to antoher client with which it has an established media session. This is different from 
            a re-INVITE since it does not change the media characteristics of the call. An INFO method typically 
            contains a body. The contents may be signaling information, a midcall event, or some sort of stimulus.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Info.#ctor">
            <summary>
            Initializes a new instance of the Info class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Info.#ctor(Independentsoft.Sip.Dialog)">
            <summary>
            Initializes a new instance of the Info class from the specified dialog. 
            </summary>
            <param name="dialog">A dialog created with appropriate INVITE request.</param>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Info.#ctor(Independentsoft.Sip.Response)">
            <summary>
            Initializes a new instance of the Info class from the specified response. 
            </summary>
            <param name="response">A response from appropriate INVITE request.</param>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.ContentEncoding">
            <summary>
            Gets or sets <c>Content-Encoding</c> header field. The <c>Content-Encoding</c> header field is used as a modifier to the "media-type".
            When present, its value indicates what additional content codings have been applied 
            to the request body, and thus what decoding mechanisms must be applied in order to 
            obtain the media-type referenced by the <c>Content-Type</c> header field.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.Contact">
            <summary>
            Gets or sets <c>Contact</c> header field. The <c>Contact</c> header field is used to convey a URI 
            that identifies the request originator.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.Accept">
            <summary>
            Gets or sets <c>Accept</c> header field. The <c>Accept</c> header field is used to indicate acceptable message Internet media types in the request body. 
            The header field describes media types using the format <c>type/sub-type</c> commonly used in the Internet. 
            If not present, the assumed acceptable request body format is application/sdp. The wildcard "*" can be used to specify all subtypes.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.AcceptEncoding">
            <summary>
            Gets or sets <c>Accept-Encoding</c> header field. The <c>Accept-Encoding</c> header field, 
            is used to specify acceptable request body encoding schemes. If not included, the assumed 
            encoding will be <c>text/plain</c>.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.AcceptLanguage">
            <summary>
            Gets or sets <c>Accept-Language</c> header field. The <c>Accept-Language</c> header field, is used 
            in requests to indicate the	preferred languages for reason phrases or session descriptions in the 
            request body. The rules for ordering the languages is based on the "q" parameter.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.CallInfo">
            <summary>
            Gets or sets <c>Call-Info</c> header field. The <c>Call-Info</c> header field provides additional 
            information about the caller.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.Expires">
            <summary>
            Gets or sets <c>Expires</c> header field. The <c>Expires</c> header field indicates the time interval 
            in which the request is valid. The value of this header field is number of seconds between 0 and 4294967295.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.Subject">
            <summary>
            Gets or sets <c>Subject</c> header field. The <c>Subject</c> header field provides a 
            summary or indicates the nature of the call, allowing call filtering without having to parse the session description.  
            The session description does not have to use the same subject indication as the invitation.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.Organization">
            <summary>
            Gets or sets <c>Organization</c> header field. The <c>Organization</c> header field is used to 
            indicate the organization to which the originator of the request belongs.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.ProxyRequire">
            <summary>
            Gets or sets <c>Proxy-Require</c> header field. The <c>Proxy-Require</c> header field is used to list 
            features and extensions that a client requires a proxy to support in order to process the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.Require">
            <summary>
            Gets <c>Require</c> header field. The <c>Require</c> header field is used to tell the client about 
            options that the sender expects the client to support in order to process the request. The <c>Require</c> 
            header field contains a list of option tags. Each option tag defines a SIP extension that 
            must be understood to process the request. Frequently, this is used to indicate that a specific set 
            of extension header fields need to be understood. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.Route">
            <summary>
            Gets <c>Route</c> header field. The <c>Route</c> header field is used to provide routing information for requests.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.Server">
            <summary>
            Gets <c>Server</c> header field. The <c>Server</c> header field contains information about the 
            software used by the server to handle the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.Supported">
            <summary>
             Gets or sets <c>Supported</c> header field. The <c>Supported</c> header field enumerates all the 
             extensions supported by the client or server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.Timestamp">
            <summary>
             Gets or sets <c>Timestamp</c> header field. The <c>Timestamp</c> header field describes 
             when the client sent the request to the server. The time format is not specified.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.Unsupported">
            <summary>
            Gets <c>Unsupported</c> header field. The <c>Unsupported</c> header field lists the features not supported by the server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Info.Warning">
            <summary>
            Gets <c>Warning</c> header field. The <c>Warning</c> header field is used to carry additional 
            information about the status of a request or response. The warning text should be in a natural 
            language that is most likely to be intelligible to the human user receiving the response. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Methods.Invite">
            <summary>
            The Invite class represents INVITE method. The INVITE method is used to establish media sessions between clients. 
            Responses to INVITEs are always acknowledged with the ACK method. An INVITE usually has a body containing 
            the media information of the caller. If an INVITE does not contain media information, the ACK contains 
            the media information of the client. A successful INVITE request establishes a dialog between the two 
            clients, which continues until a BYE is sent by either party to end	the session.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Invite.#ctor">
            <summary>
            Initializes a new instance of the Invite class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Invite.#ctor(Independentsoft.Sip.Dialog)">
            <summary>
             Initializes a new instance of the Invite class from the specified dialog. 
            </summary>
            <param name="dialog">An existing dialog between the two clients.</param>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Invite.#ctor(Independentsoft.Sip.Response)">
            <summary>
            Initializes a new instance of the Invite class from the specified response.
            </summary>
            <param name="response">A response from appropriate INVITE request.</param>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.ContentDisposition">
            <summary>
            Gets or sets <c>Content-Disposition</c> header field. The <c>Content-Disposition</c> header field 
            is used to describe the function of a request body. 
             </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.ContentEncoding">
            <summary>
            Gets or sets <c>Content-Encoding</c> header field. The <c>Content-Encoding</c> header field is used as a modifier to the "media-type".
            When present, its value indicates what additional content codings have been applied 
            to the request body, and thus what decoding mechanisms must be applied in order to 
            obtain the media-type referenced by the <c>Content-Type</c> header field.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.ContentLanguage">
            <summary>
            Gets or sets <c>Content-Language</c> header field. The <c>Content-Language</c> header field is used to indicate the language of
            a request body. It contains a language tag, which identifies the language.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.AllowEvents">
            <summary>
            Gets or sets <c>Allow-Events</c> header field. The <c>Allow-Events</c> header field,
            includes a list of tokens which indicates the event packages supported by the client. In other words, 
            a client sending an <c>Allow-Events</c> header is advertising that it can process and generate requests
            for all of the event packages listed in that header.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.Contact">
            <summary>
            Gets or sets <c>Contact</c> header field. The <c>Contact</c> header field is used to convey a URI 
            that identifies the request originator.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.Accept">
            <summary>
            Gets or sets <c>Accept</c> header field. The <c>Accept</c> header field is used to indicate acceptable message Internet media types in the request body. 
            The header field describes media types using the format <c>type/sub-type</c> commonly used in the Internet. 
            If not present, the assumed acceptable request body format is application/sdp. The wildcard "*" can be used to specify all subtypes.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.AcceptEncoding">
            <summary>
            Gets or sets <c>Accept-Encoding</c> header field. The <c>Accept-Encoding</c> header field, 
            is used to specify acceptable request body encoding schemes. If not included, the assumed 
            encoding will be <c>text/plain</c>.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.AcceptLanguage">
            <summary>
            Gets or sets <c>Accept-Language</c> header field. The <c>Accept-Language</c> header field, is used 
            in requests to indicate the	preferred languages for reason phrases or session descriptions in the 
            request body. The rules for ordering the languages is based on the "q" parameter.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.AlertInfo">
            <summary>
            Gets or sets <c>Alert-Info</c> header field. The <c>Alert-Info</c> header field 
            specifies an alternative ring tone.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.InReplyTo">
            <summary>
            Gets or sets <c>In-Reply-To</c> header field. The <c>In-Reply-To</c> header field is used 
            to indicate the <c>Call-ID</c> that request references or is returning.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.Priority">
            <summary>
            Gets or sets <c>Priority</c> header field. The <c>Priority</c> header field indicates the urgency 
            of the request as perceived by the client.  The <c>Priority</c> header field describes the priority 
            that the SIP request should have to the receiving human or its agent.  For example, it may be factored 
            into decisions about call routing and acceptance.  For these decisions, a request containing no <c>Priority</c>
            header field should be treated as if it specified a <c>Priority</c> of "normal".  The <c>Priority</c> header field 
            does not influence the use of communications resources such as packet forwarding priority in routers or access 
            to circuits in PSTN gateways.  The header field can have the values "non-urgent", "normal", "urgent", and "emergency", 
            but additional values can be defined elsewhere. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.RecordRoute">
            <summary>
            Gets or sets <c>Record-Route</c> header field. The <c>Record-Route</c> header field is used to force 
            routing through a proxy for all subsequent requests in a session between two clients.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.ReplyTo">
            <summary>
            Gets or sets <c>Reply-To</c> header field. The <c>Reply-To</c> header field is used to indicate a URI, 
            which should be used in replying to this request. Normally, this URI is present in the <c>From</c> header field. 
            However, in some cases, the <c>From</c> cannot be populated with this information, so the URI in 
            this header field should be used instead of the <c>From</c> URI.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.Subject">
            <summary>
            Gets or sets <c>Subject</c> header field. The <c>Subject</c> header field provides a 
            summary or indicates the nature of the call, allowing call filtering without having to parse the session description.  
            The session description does not have to use the same subject indication as the invitation.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.Allow">
            <summary>
            Gets or sets <c>Allow</c> header field. The <c>Allow</c> header field lists the set of methods 
            supported by the client.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.CallInfo">
            <summary>
            Gets or sets <c>Call-Info</c> header field. The <c>Call-Info</c> header field provides additional 
            information about the caller.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.ErrorInfo">
            <summary>
            Gets or sets <c>Error-Info</c> header field. The <c>Error-Info</c> header field provides a pointer 
            to additional information about the error status response.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.Expires">
            <summary>
            Gets or sets <c>Expires</c> header field. The <c>Expires</c> header field indicates the time interval 
            in which the request is valid. The value of this header field is number of seconds between 0 and 4294967295.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.MinExpires">
            <summary>
            Gets or sets <c>Min-Expires</c> header field. The <c>Min-Expires</c> header field contains an integer number of seconds 
            that represents the minimum expiration interval that the registrar will accept.
            The value of this header field is number of seconds between 0 and 4294967295.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.Organization">
            <summary>
            Gets or sets <c>Organization</c> header field. The <c>Organization</c> header field is used to 
            indicate the organization to which the originator of the request belongs.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.ProxyRequire">
            <summary>
            Gets or sets <c>Proxy-Require</c> header field. The <c>Proxy-Require</c> header field is used to list 
            features and extensions that a client requires a proxy to support in order to process the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.Require">
            <summary>
            Gets <c>Require</c> header field. The <c>Require</c> header field is used to tell the client about 
            options that the sender expects the client to support in order to process the request. The <c>Require</c> 
            header field contains a list of option tags. Each option tag defines a SIP extension that 
            must be understood to process the request. Frequently, this is used to indicate that a specific set 
            of extension header fields need to be understood. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.Route">
            <summary>
            Gets <c>Route</c> header field. The <c>Route</c> header field is used to provide routing information for requests.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.Server">
            <summary>
            Gets <c>Server</c> header field. The <c>Server</c> header field contains information about the 
            software used by the server to handle the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.Supported">
            <summary>
             Gets or sets <c>Supported</c> header field. The <c>Supported</c> header field enumerates all the 
             extensions supported by the client or server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.Join">
            <summary>
            Gets or sets <c>Join</c> header field. The <c>Join</c> header field is used in an INVITE to request 
            that the dialog (session) be joined with an existing dialog (session). The parameters of the <c>Join</c> 
            header field identify the dialog by the <c>Call-ID</c>, <c>To</c> tag, and <c>From</c> tag in a similar 
            way to the <c>Replaces</c> header field. If the <c>Join</c> header field references a point-to-point 
            dialog between two clients, the Join header field is effectively a request to turn the call into a 
            conference call. If the dialog is already part of a conference, the <c>Join</c> header field is a request 
            to be added into the conference.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.Timestamp">
            <summary>
             Gets or sets <c>Timestamp</c> header field. The <c>Timestamp</c> header field describes 
             when the client sent the request to the server. The time format is not specified.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.Unsupported">
            <summary>
            Gets <c>Unsupported</c> header field. The <c>Unsupported</c> header field lists the features not supported by the server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.Warning">
            <summary>
            Gets <c>Warning</c> header field. The <c>Warning</c> header field is used to carry additional 
            information about the status of a request or response. The warning text should be in a natural 
            language that is most likely to be intelligible to the human user receiving the response. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.ReferredBy">
            <summary>
            Gets or sets <c>Referred-By</c> header field. The <c>Referred-By</c> header field provides the 
            recipient of a triggered request information that the request was generated as a result of a REFER
            and the originator of the REFER.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Invite.Replaces">
            <summary>
            Gets or sets <c>Replaces</c> header field. The <c>Replaces</c> header field is used in SIP call 
            control applications. A client in an established dialog receiving another INVITE with a <c>Replaces</c> 
            header field that matches the existing dialog must accept the INVITE, terminate the existing dialog 
            with a BYE, and transfer all resources and state from the existing dialog to the newly established dialog.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Methods.Message">
            <summary>
            The Message class represents MESSAGE method. The MESSAGE method is used to transport instant messages. 
            Instant messages usually consists of short message exchanged in near-real time by participants engaged 
            in a "conversation". MESSAGEs may be sent within a dialog or outside a dialog. The actual message content 
            is carried in the body.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Message.#ctor">
            <summary>
            Initializes a new instance of the Message class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Message.#ctor(Independentsoft.Sip.Dialog)">
            <summary>
            Initializes a new instance of the Message class from the specified dialog.
            </summary>
            <param name="dialog">A dialog created with appropriate INVITE request.</param>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Message.#ctor(Independentsoft.Sip.Response)">
            <summary>
            Initializes a new instance of the Message class from the specified response.
            </summary>
            <param name="response">A response from appropriate INVITE request.</param>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.ContentDisposition">
            <summary>
            Gets or sets <c>Content-Disposition</c> header field. The <c>Content-Disposition</c> header field 
            is used to describe the function of a request body. 
             </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.ContentEncoding">
            <summary>
            Gets or sets <c>Content-Encoding</c> header field. The <c>Content-Encoding</c> header field is used as a modifier to the "media-type".
            When present, its value indicates what additional content codings have been applied 
            to the request body, and thus what decoding mechanisms must be applied in order to 
            obtain the media-type referenced by the <c>Content-Type</c> header field.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.ContentLanguage">
            <summary>
            Gets or sets <c>Content-Language</c> header field. The <c>Content-Language</c> header field is used to indicate the language of
            a request body. It contains a language tag, which identifies the language.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.Contact">
            <summary>
            Gets or sets <c>Contact</c> header field. The <c>Contact</c> header field is used to convey a URI 
            that identifies the request originator.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.Accept">
            <summary>
            Gets or sets <c>Accept</c> header field. The <c>Accept</c> header field is used to indicate acceptable message Internet media types in the request body. 
            The header field describes media types using the format <c>type/sub-type</c> commonly used in the Internet. 
            If not present, the assumed acceptable request body format is application/sdp. The wildcard "*" can be used to specify all subtypes.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.AcceptEncoding">
            <summary>
            Gets or sets <c>Accept-Encoding</c> header field. The <c>Accept-Encoding</c> header field, 
            is used to specify acceptable request body encoding schemes. If not included, the assumed 
            encoding will be <c>text/plain</c>.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.AcceptLanguage">
            <summary>
            Gets or sets <c>Accept-Language</c> header field. The <c>Accept-Language</c> header field, is used 
            in requests to indicate the	preferred languages for reason phrases or session descriptions in the 
            request body. The rules for ordering the languages is based on the "q" parameter.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.Allow">
            <summary>
            Gets or sets <c>Allow</c> header field. The <c>Allow</c> header field lists the set of methods 
            supported by the client.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.CallInfo">
            <summary>
            Gets or sets <c>Call-Info</c> header field. The <c>Call-Info</c> header field provides additional 
            information about the caller.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.ErrorInfo">
            <summary>
            Gets or sets <c>Error-Info</c> header field. The <c>Error-Info</c> header field provides a pointer 
            to additional information about the error status response.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.InReplyTo">
            <summary>
            Gets or sets <c>In-Reply-To</c> header field. The <c>In-Reply-To</c> header field is used 
            to indicate the <c>Call-ID</c> that request references or is returning.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.ReplyTo">
            <summary>
            Gets or sets <c>Reply-To</c> header field. The <c>Reply-To</c> header field is used to indicate a URI, 
            which should be used in replying to this request. Normally, this URI is present in the <c>From</c> header field. 
            However, in some cases, the <c>From</c> cannot be populated with this information, so the URI in 
            this header field should be used instead of the <c>From</c> URI.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.Subject">
            <summary>
            Gets or sets <c>Subject</c> header field. The <c>Subject</c> header field provides a 
            summary or indicates the nature of the call, allowing call filtering without having to parse the session description.  
            The session description does not have to use the same subject indication as the invitation.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.Priority">
            <summary>
            Gets or sets <c>Priority</c> header field. The <c>Priority</c> header field indicates the urgency 
            of the request as perceived by the client.  The <c>Priority</c> header field describes the priority 
            that the SIP request should have to the receiving human or its agent.  For example, it may be factored 
            into decisions about call routing and acceptance.  For these decisions, a request containing no <c>Priority</c>
            header field should be treated as if it specified a <c>Priority</c> of "normal".  The <c>Priority</c> header field 
            does not influence the use of communications resources such as packet forwarding priority in routers or access 
            to circuits in PSTN gateways.  The header field can have the values "non-urgent", "normal", "urgent", and "emergency", 
            but additional values can be defined elsewhere. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.Expires">
            <summary>
            Gets or sets <c>Expires</c> header field. The <c>Expires</c> header field indicates the time interval 
            in which the request is valid. The value of this header field is number of seconds between 0 and 4294967295.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.MinExpires">
            <summary>
            Gets or sets <c>Min-Expires</c> header field. The <c>Min-Expires</c> header field contains an integer number of seconds 
            that represents the minimum expiration interval that the registrar will accept.
            The value of this header field is number of seconds between 0 and 4294967295.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.Organization">
            <summary>
            Gets or sets <c>Organization</c> header field. The <c>Organization</c> header field is used to 
            indicate the organization to which the originator of the request belongs.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.ProxyRequire">
            <summary>
            Gets or sets <c>Proxy-Require</c> header field. The <c>Proxy-Require</c> header field is used to list 
            features and extensions that a client requires a proxy to support in order to process the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.Require">
            <summary>
            Gets <c>Require</c> header field. The <c>Require</c> header field is used to tell the client about 
            options that the sender expects the client to support in order to process the request. The <c>Require</c> 
            header field contains a list of option tags. Each option tag defines a SIP extension that 
            must be understood to process the request. Frequently, this is used to indicate that a specific set 
            of extension header fields need to be understood. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.Route">
            <summary>
            Gets <c>Route</c> header field. The <c>Route</c> header field is used to provide routing information for requests.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.Server">
            <summary>
            Gets <c>Server</c> header field. The <c>Server</c> header field contains information about the 
            software used by the server to handle the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.Supported">
            <summary>
             Gets or sets <c>Supported</c> header field. The <c>Supported</c> header field enumerates all the 
             extensions supported by the client or server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.Timestamp">
            <summary>
             Gets or sets <c>Timestamp</c> header field. The <c>Timestamp</c> header field describes 
             when the client sent the request to the server. The time format is not specified.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.Unsupported">
            <summary>
            Gets <c>Unsupported</c> header field. The <c>Unsupported</c> header field lists the features not supported by the server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Message.Warning">
            <summary>
            Gets <c>Warning</c> header field. The <c>Warning</c> header field is used to carry additional 
            information about the status of a request or response. The warning text should be in a natural 
            language that is most likely to be intelligible to the human user receiving the response. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Methods.Notify">
            <summary>
            The Notify class represents NOTIFY method. The NOTIFY method is used by a client to convey information 
            about the occurrence of a particular event. A NOTIFY is always sent within a dialog when a subscription 
            exists between the subscriber and the notifier. However, it is possible for a subscription to be established 
            using non-SIP means (no SUBSCRIBE is sent) and may also be implicit in another SIP request type (for example, 
            a REFER establishes an implicit subscription). NOTIFY requests contain an Event header field indicating the package 
            and a Subscription-State header field indicating the current state of the subscription. A NOTIFY is always 
            sent at the start of a subscription and at the termination of a subscription.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Notify.#ctor">
            <summary>
            Initializes a new instance of the Notify class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Notify.#ctor(Independentsoft.Sip.Dialog)">
            <summary>
            Initializes a new instance of the Notify class from the specified dialog. 
            </summary>
            <param name="dialog">An existing dialog between the two clients.</param>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Notify.#ctor(Independentsoft.Sip.Response)">
            <summary>
            Initializes a new instance of the Notify class from the specified response.
            </summary>
            <param name="response">A response from subscriber.</param>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.ContentDisposition">
            <summary>
            Gets or sets <c>Content-Disposition</c> header field. The <c>Content-Disposition</c> header field 
            is used to describe the function of a request body. 
             </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.ContentEncoding">
            <summary>
            Gets or sets <c>Content-Encoding</c> header field. The <c>Content-Encoding</c> header field is used as a modifier to the "media-type".
            When present, its value indicates what additional content codings have been applied 
            to the request body, and thus what decoding mechanisms must be applied in order to 
            obtain the media-type referenced by the <c>Content-Type</c> header field.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.ContentLanguage">
            <summary>
            Gets or sets <c>Content-Language</c> header field. The <c>Content-Language</c> header field is used to indicate the language of
            a request body. It contains a language tag, which identifies the language.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.AllowEvents">
            <summary>
            Gets or sets <c>Allow-Events</c> header field. The <c>Allow-Events</c> header field,
            includes a list of tokens which indicates the event packages supported by the client. In other words, 
            a client sending an <c>Allow-Events</c> header is advertising that it can process and generate requests
            for all of the event packages listed in that header.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.Contact">
            <summary>
            Gets or sets <c>Contact</c> header field. The <c>Contact</c> header field is used to convey a URI 
            that identifies the request originator.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.Accept">
            <summary>
            Gets or sets <c>Accept</c> header field. The <c>Accept</c> header field is used to indicate acceptable message Internet media types in the request body. 
            The header field describes media types using the format <c>type/sub-type</c> commonly used in the Internet. 
            If not present, the assumed acceptable request body format is application/sdp. The wildcard "*" can be used to specify all subtypes.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.AcceptEncoding">
            <summary>
            Gets or sets <c>Accept-Encoding</c> header field. The <c>Accept-Encoding</c> header field, 
            is used to specify acceptable request body encoding schemes. If not included, the assumed 
            encoding will be <c>text/plain</c>.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.AcceptLanguage">
            <summary>
            Gets or sets <c>Accept-Language</c> header field. The <c>Accept-Language</c> header field, is used 
            in requests to indicate the	preferred languages for reason phrases or session descriptions in the 
            request body. The rules for ordering the languages is based on the "q" parameter.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.Allow">
            <summary>
            Gets or sets <c>Allow</c> header field. The <c>Allow</c> header field lists the set of methods 
            supported by the client.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.CallInfo">
            <summary>
            Gets or sets <c>Call-Info</c> header field. The <c>Call-Info</c> header field provides additional 
            information about the caller.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.Event">
            <summary>
            Gets or sets <c>Event</c> header field. The <c>Event</c> header field lists the event package that the notification contains state information about.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.ErrorInfo">
            <summary>
            Gets or sets <c>Error-Info</c> header field. The <c>Error-Info</c> header field provides a pointer 
            to additional information about the error status response.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.ProxyRequire">
            <summary>
            Gets or sets <c>Proxy-Require</c> header field. The <c>Proxy-Require</c> header field is used to list 
            features and extensions that a client requires a proxy to support in order to process the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.Require">
            <summary>
            Gets <c>Require</c> header field. The <c>Require</c> header field is used to tell the client about 
            options that the sender expects the client to support in order to process the request. The <c>Require</c> 
            header field contains a list of option tags. Each option tag defines a SIP extension that 
            must be understood to process the request. Frequently, this is used to indicate that a specific set 
            of extension header fields need to be understood. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.Route">
            <summary>
            Gets <c>Route</c> header field. The <c>Route</c> header field is used to provide routing information for requests.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.Server">
            <summary>
            Gets <c>Server</c> header field. The <c>Server</c> header field contains information about the 
            software used by the server to handle the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.Supported">
            <summary>
             Gets or sets <c>Supported</c> header field. The <c>Supported</c> header field enumerates all the 
             extensions supported by the client or server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.SubscriptionState">
            <summary>
            Gets or sets <c>Subscription-State</c> header field. The <c>Subscription-State</c> header field is a 
            required header field in a NOTIFY request. It indicates the current state of the subscription. Values
            defined include "active", "pending", or "terminated". Additional parameters include "expires", 
            "reason", and "retry-after". Values defined for the reason parameter include "deactivated", "giveup", 
            "probation", "noresource", "rejected", and "timeout".
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.Timestamp">
            <summary>
             Gets or sets <c>Timestamp</c> header field. The <c>Timestamp</c> header field describes 
             when the client sent the request to the server. The time format is not specified.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.Unsupported">
            <summary>
            Gets <c>Unsupported</c> header field. The <c>Unsupported</c> header field lists the features not supported by the server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Notify.Warning">
            <summary>
            Gets or sets <c>Warning</c> header field. The <c>Warning</c> header field is used to carry additional 
            information about the status of a request or response. The warning text should be in a natural 
            language that is most likely to be intelligible to the human user receiving the response. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Methods.Options">
            <summary>
            The Options class represents OPTIONS method. The OPTIONS method is used to query a client or server about 
            its capabilities and discover its current availability. The response to the request lists the capabilities 
            of the client or server. A success response can contain <c>Allow</c>, <c>Accept</c>, <c>Accept-Encoding</c>, 
            <c>Accept-Language</c>, and <c>Supported</c> headers indicating its capabilities. An OPTIONS request may 
            not contain a body.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Options.#ctor">
            <summary>
            Initializes a new instance of the Options class. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.ContentDisposition">
            <summary>
            Gets or sets <c>Content-Disposition</c> header field. The <c>Content-Disposition</c> header field 
            is used to describe the function of a request body. 
             </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.ContentEncoding">
            <summary>
            Gets or sets <c>Content-Encoding</c> header field. The <c>Content-Encoding</c> header field is used as a modifier to the "media-type".
            When present, its value indicates what additional content codings have been applied 
            to the request body, and thus what decoding mechanisms must be applied in order to 
            obtain the media-type referenced by the <c>Content-Type</c> header field.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.ContentLanguage">
            <summary>
            Gets or sets <c>Content-Language</c> header field. The <c>Content-Language</c> header field is used to indicate the language of
            a request body. It contains a language tag, which identifies the language.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.AllowEvents">
            <summary>
            Gets or sets <c>Allow-Events</c> header field. The <c>Allow-Events</c> header field,
            includes a list of tokens which indicates the event packages supported by the client. In other words, 
            a client sending an <c>Allow-Events</c> header is advertising that it can process and generate requests
            for all of the event packages listed in that header.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.Contact">
            <summary>
            Gets or sets <c>Contact</c> header field. The <c>Contact</c> header field is used to convey a URI 
            that identifies the request originator.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.Accept">
            <summary>
            Gets or sets <c>Accept</c> header field. The <c>Accept</c> header field is used to indicate acceptable message Internet media types in the request body. 
            The header field describes media types using the format <c>type/sub-type</c> commonly used in the Internet. 
            If not present, the assumed acceptable request body format is application/sdp. The wildcard "*" can be used to specify all subtypes.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.AcceptEncoding">
            <summary>
            Gets or sets <c>Accept-Encoding</c> header field. The <c>Accept-Encoding</c> header field, 
            is used to specify acceptable request body encoding schemes. If not included, the assumed 
            encoding will be <c>text/plain</c>.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.AcceptLanguage">
            <summary>
            Gets or sets <c>Accept-Language</c> header field. The <c>Accept-Language</c> header field, is used 
            in requests to indicate the	preferred languages for reason phrases or session descriptions in the 
            request body. The rules for ordering the languages is based on the "q" parameter.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.Allow">
            <summary>
            Gets or sets <c>Allow</c> header field. The <c>Allow</c> header field lists the set of methods 
            supported by the client.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.CallInfo">
            <summary>
            Gets or sets <c>Call-Info</c> header field. The <c>Call-Info</c> header field provides additional 
            information about the caller.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.ErrorInfo">
            <summary>
            Gets or sets <c>Error-Info</c> header field. The <c>Error-Info</c> header field provides a pointer 
            to additional information about the error status response.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.RecordRoute">
            <summary>
            Gets or sets <c>Record-Route</c> header field. The <c>Record-Route</c> header field is used to force 
            routing through a proxy for all subsequent requests in a session between two clients.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.Organization">
            <summary>
            Gets or sets <c>Organization</c> header field. The <c>Organization</c> header field is used to 
            indicate the organization to which the originator of the request belongs.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.ProxyRequire">
            <summary>
            Gets or sets <c>Proxy-Require</c> header field. The <c>Proxy-Require</c> header field is used to list 
            features and extensions that a client requires a proxy to support in order to process the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.Require">
            <summary>
            Gets <c>Require</c> header field. The <c>Require</c> header field is used to tell the client about 
            options that the sender expects the client to support in order to process the request. The <c>Require</c> 
            header field contains a list of option tags. Each option tag defines a SIP extension that 
            must be understood to process the request. Frequently, this is used to indicate that a specific set 
            of extension header fields need to be understood. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.Route">
            <summary>
            Gets <c>Route</c> header field. The <c>Route</c> header field is used to provide routing information for requests.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.Server">
            <summary>
            Gets <c>Server</c> header field. The <c>Server</c> header field contains information about the 
            software used by the server to handle the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.Supported">
            <summary>
             Gets or sets <c>Supported</c> header field. The <c>Supported</c> header field enumerates all the 
             extensions supported by the client or server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.Timestamp">
            <summary>
             Gets or sets <c>Timestamp</c> header field. The <c>Timestamp</c> header field describes 
             when the client sent the request to the server. The time format is not specified.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.ReferredBy">
            <summary>
            Gets or sets <c>Referred-By</c> header field. The <c>Referred-By</c> header field provides the 
            recipient of a triggered request information that the request was generated as a result of a REFER
            and the originator of the REFER.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.Unsupported">
            <summary>
            Gets <c>Unsupported</c> header field. The <c>Unsupported</c> header field lists the features not supported by the server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Options.Warning">
            <summary>
            Gets <c>Warning</c> header field. The <c>Warning</c> header field is used to carry additional 
            information about the status of a request or response. The warning text should be in a natural 
            language that is most likely to be intelligible to the human user receiving the response. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Methods.Prack">
            <summary>
            The Prack class represents PRACK method. The PRACK method is used to acknowledge receipt of reliably 
            transported provisional responses (with status code 1xx). The reliability of 2xx, 3xx, 4xx, 5xx, and 
            6xx responses to INVITEs is achieved using the ACK method. However, in cases where a provisional response, 
            such as 180 Ringing, is critical in determining the call state, it may be necessary for the receipt of a 
            provisional response to be confirmed. The PRACK method applies to all provisional responses except 
            the 100 Trying response, which is never reliably transported.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Prack.#ctor">
            <summary>
            Initializes a new instance of the Prack class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Prack.#ctor(Independentsoft.Sip.Dialog)">
            <summary>
            Initializes a new instance of the Prack class from the specified dialog. 
            </summary>
            <param name="dialog">An early dialog created with appropriate INVITE request.</param>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Prack.#ctor(Independentsoft.Sip.Response)">
            <summary>
            Initializes a new instance of the Prack class from the specified response.
            </summary>
            <param name="response">A response from appropriate INVITE request.</param>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.ContentDisposition">
            <summary>
            Gets or sets <c>Content-Disposition</c> header field. The <c>Content-Disposition</c> header field 
            is used to describe the function of a request body. 
             </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.ContentEncoding">
            <summary>
            Gets or sets <c>Content-Encoding</c> header field. The <c>Content-Encoding</c> header field is used as a modifier to the "media-type".
            When present, its value indicates what additional content codings have been applied 
            to the request body, and thus what decoding mechanisms must be applied in order to 
            obtain the media-type referenced by the <c>Content-Type</c> header field.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.ContentLanguage">
            <summary>
            Gets or sets <c>Content-Language</c> header field. The <c>Content-Language</c> header field is used to indicate the language of
            a request body. It contains a language tag, which identifies the language.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.AllowEvents">
            <summary>
            Gets or sets <c>Allow-Events</c> header field. The <c>Allow-Events</c> header field,
            includes a list of tokens which indicates the event packages supported by the client. In other words, 
            a client sending an <c>Allow-Events</c> header is advertising that it can process and generate requests
            for all of the event packages listed in that header.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.Contact">
            <summary>
            Gets or sets <c>Contact</c> header field. The <c>Contact</c> header field is used to convey a URI 
            that identifies the request originator.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.Accept">
            <summary>
            Gets or sets <c>Accept</c> header field. The <c>Accept</c> header field is used to indicate acceptable message Internet media types in the request body. 
            The header field describes media types using the format <c>type/sub-type</c> commonly used in the Internet. 
            If not present, the assumed acceptable request body format is application/sdp. The wildcard "*" can be used to specify all subtypes.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.AcceptEncoding">
            <summary>
            Gets or sets <c>Accept-Encoding</c> header field. The <c>Accept-Encoding</c> header field, 
            is used to specify acceptable request body encoding schemes. If not included, the assumed 
            encoding will be <c>text/plain</c>.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.AcceptLanguage">
            <summary>
            Gets or sets <c>Accept-Language</c> header field. The <c>Accept-Language</c> header field, is used 
            in requests to indicate the	preferred languages for reason phrases or session descriptions in the 
            request body. The rules for ordering the languages is based on the "q" parameter.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.Allow">
            <summary>
            Gets or sets <c>Allow</c> header field. The <c>Allow</c> header field lists the set of methods 
            supported by the client.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.ErrorInfo">
            <summary>
            Gets or sets <c>Error-Info</c> header field. The <c>Error-Info</c> header field provides a pointer 
            to additional information about the error status response.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.ProxyRequire">
            <summary>
            Gets or sets <c>Proxy-Require</c> header field. The <c>Proxy-Require</c> header field is used to list 
            features and extensions that a client requires a proxy to support in order to process the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.RecordRoute">
            <summary>
            Gets or sets <c>Record-Route</c> header field. The <c>Record-Route</c> header field is used to force 
            routing through a proxy for all subsequent requests in a session between two clients.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.Require">
            <summary>
            Gets <c>Require</c> header field. The <c>Require</c> header field is used to tell the client about 
            options that the sender expects the client to support in order to process the request. The <c>Require</c> 
            header field contains a list of option tags. Each option tag defines a SIP extension that 
            must be understood to process the request. Frequently, this is used to indicate that a specific set 
            of extension header fields need to be understood. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.Route">
            <summary>
            Gets <c>Route</c> header field. The <c>Route</c> header field is used to provide routing information for requests.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.Server">
            <summary>
            Gets <c>Server</c> header field. The <c>Server</c> header field contains information about the 
            software used by the server to handle the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.Supported">
            <summary>
             Gets or sets <c>Supported</c> header field. The <c>Supported</c> header field enumerates all the 
             extensions supported by the client or server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.Timestamp">
            <summary>
             Gets or sets <c>Timestamp</c> header field. The <c>Timestamp</c> header field describes 
             when the client sent the request to the server. The time format is not specified.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.Unsupported">
            <summary>
            Gets <c>Unsupported</c> header field. The <c>Unsupported</c> header field lists the features not supported by the server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.Warning">
            <summary>
            Gets <c>Warning</c> header field. The <c>Warning</c> header field is used to carry additional 
            information about the status of a request or response. The warning text should be in a natural 
            language that is most likely to be intelligible to the human user receiving the response. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Prack.RAck">
            <summary>
            Gets <c>RAck</c> header field. The <c>RAck</c> header field is used within a response to a PRACK 
            request to reliably acknowledge a provisional response that contained a RSeq header field. The <c>RAck</c> 
            header field echoes the <c>CSeq</c> and the <c>RSeq</c> from the provisional response. The reliable 
            sequence number is incremented for each response sent reliably.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Methods.Publish">
            <summary>
            The Publish class represents PUBLISH method. The PUBLISH publishs event	state. The PUBLISH is similar to 
            REGISTER in that it allows a user to create, modify, and remove state in another entity which manages 
            this state on behalf of the user. The body of a PUBLISH request carries the published event state.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Publish.#ctor">
            <summary>
            Initializes a new instance of the Publish class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Publish.#ctor(Independentsoft.Sip.Dialog)">
            <summary>
            Initializes a new instance of the Publish class from the specified dialog. 
            </summary>
            <param name="dialog">An existing dialog between the two clients.</param>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Publish.#ctor(Independentsoft.Sip.Response)">
            <summary>
            Initializes a new instance of the Publish class from the specified response. 
            </summary>
            <param name="response">A response.</param>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.ContentDisposition">
            <summary>
            Gets or sets <c>Content-Disposition</c> header field. The <c>Content-Disposition</c> header field 
            is used to describe the function of a request body. 
             </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.ContentEncoding">
            <summary>
            Gets or sets <c>Content-Encoding</c> header field. The <c>Content-Encoding</c> header field is used as a modifier to the "media-type".
            When present, its value indicates what additional content codings have been applied 
            to the request body, and thus what decoding mechanisms must be applied in order to 
            obtain the media-type referenced by the <c>Content-Type</c> header field.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.ContentLanguage">
            <summary>
            Gets or sets <c>Content-Language</c> header field. The <c>Content-Language</c> header field is used to indicate the language of
            a request body. It contains a language tag, which identifies the language.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.Contact">
            <summary>
            Gets or sets <c>Contact</c> header field. The <c>Contact</c> header field is used to convey a URI 
            that identifies the request originator.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.Accept">
            <summary>
            Gets or sets <c>Accept</c> header field. The <c>Accept</c> header field is used to indicate acceptable message Internet media types in the request body. 
            The header field describes media types using the format <c>type/sub-type</c> commonly used in the Internet. 
            If not present, the assumed acceptable request body format is application/sdp. The wildcard "*" can be used to specify all subtypes.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.AcceptEncoding">
            <summary>
            Gets or sets <c>Accept-Encoding</c> header field. The <c>Accept-Encoding</c> header field, 
            is used to specify acceptable request body encoding schemes. If not included, the assumed 
            encoding will be <c>text/plain</c>.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.AcceptLanguage">
            <summary>
            Gets or sets <c>Accept-Language</c> header field. The <c>Accept-Language</c> header field, is used 
            in requests to indicate the	preferred languages for reason phrases or session descriptions in the 
            request body. The rules for ordering the languages is based on the "q" parameter.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.Allow">
            <summary>
            Gets or sets <c>Allow</c> header field. The <c>Allow</c> header field lists the set of methods 
            supported by the client.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.AllowEvents">
            <summary>
            Gets or sets <c>Allow-Events</c> header field. The <c>Allow-Events</c> header field,
            includes a list of tokens which indicates the event packages supported by the client. In other words, 
            a client sending an <c>Allow-Events</c> header is advertising that it can process and generate requests
            for all of the event packages listed in that header.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.CallInfo">
            <summary>
            Gets or sets <c>Call-Info</c> header field. The <c>Call-Info</c> header field provides additional 
            information about the caller.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.ErrorInfo">
            <summary>
            Gets or sets <c>Error-Info</c> header field. The <c>Error-Info</c> header field provides a pointer 
            to additional information about the error status response.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.Expires">
            <summary>
            Gets or sets <c>Expires</c> header field. The <c>Expires</c> header field indicates the time interval 
            in which the request is valid. The value of this header field is number of seconds between 0 and 4294967295.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.Priority">
            <summary>
            Gets or sets <c>Priority</c> header field. The <c>Priority</c> header field indicates the urgency 
            of the request as perceived by the client.  The <c>Priority</c> header field describes the priority 
            that the SIP request should have to the receiving human or its agent.  For example, it may be factored 
            into decisions about call routing and acceptance.  For these decisions, a request containing no <c>Priority</c>
            header field should be treated as if it specified a <c>Priority</c> of "normal".  The <c>Priority</c> header field 
            does not influence the use of communications resources such as packet forwarding priority in routers or access 
            to circuits in PSTN gateways.  The header field can have the values "non-urgent", "normal", "urgent", and "emergency", 
            but additional values can be defined elsewhere. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.MinExpires">
            <summary>
            Gets or sets <c>Min-Expires</c> header field. The <c>Min-Expires</c> header field contains an integer number of seconds 
            that represents the minimum expiration interval that the registrar will accept.
            The value of this header field is number of seconds between 0 and 4294967295.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.Organization">
            <summary>
            Gets or sets <c>Organization</c> header field. The <c>Organization</c> header field is used to 
            indicate the organization to which the originator of the request belongs.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.ProxyRequire">
            <summary>
            Gets or sets <c>Proxy-Require</c> header field. The <c>Proxy-Require</c> header field is used to list 
            features and extensions that a client requires a proxy to support in order to process the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.Require">
            <summary>
            Gets <c>Require</c> header field. The <c>Require</c> header field is used to tell the client about 
            options that the sender expects the client to support in order to process the request. The <c>Require</c> 
            header field contains a list of option tags. Each option tag defines a SIP extension that 
            must be understood to process the request. Frequently, this is used to indicate that a specific set 
            of extension header fields need to be understood. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.Route">
            <summary>
            Gets <c>Route</c> header field. The <c>Route</c> header field is used to provide routing information for requests.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.Server">
            <summary>
            Gets <c>Server</c> header field. The <c>Server</c> header field contains information about the 
            software used by the server to handle the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.Subject">
            <summary>
            Gets or sets <c>Subject</c> header field. The <c>Subject</c> header field provides a 
            summary or indicates the nature of the call, allowing call filtering without having to parse the session description.  
            The session description does not have to use the same subject indication as the invitation.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.Supported">
            <summary>
             Gets or sets <c>Supported</c> header field. The <c>Supported</c> header field enumerates all the 
             extensions supported by the client or server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.Timestamp">
            <summary>
             Gets or sets <c>Timestamp</c> header field. The <c>Timestamp</c> header field describes 
             when the client sent the request to the server. The time format is not specified.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.Event">
            <summary>
            Gets or sets <c>Event</c> header field. The <c>Event</c> header field lists the event package which the client would like to publish.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.SipIfMatch">
            <summary>
            Gets or sets <c>SIP-If-Match</c> header field. The <c>SIP-If-Match</c> header field identifying 
            the specific event state that the request is refreshing, modifying or removing. This header field 
            must contain a single entity-tag that was returned by the response in the <c>SIP-ETag</c> header field 
            of the response to a previous publication. An initial PUBLISH request must not contain a <c>SIP-If-Match</c> header field.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.Unsupported">
            <summary>
            Gets <c>Unsupported</c> header field. The <c>Unsupported</c> header field lists the features not supported by the server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Publish.Warning">
            <summary>
            Gets <c>Warning</c> header field. The <c>Warning</c> header field is used to carry additional 
            information about the status of a request or response. The warning text should be in a natural 
            language that is most likely to be intelligible to the human user receiving the response. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Methods.Refer">
            <summary>
            The Refer class represents REFER method. The REFER method is used by a client to request another client 
            to access a URI or URL resource. The resource is identified by a URI or URL in the required <c>Refer-To</c> 
            header field. A REFER request can be sent either inside or outside an existing dialog.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Refer.#ctor">
            <summary>
            Initializes a new instance of the Refer class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Refer.#ctor(Independentsoft.Sip.Dialog)">
            <summary>
            Initializes a new instance of the Refer class from the specified dialog.
            </summary>
            <param name="dialog">An existing dialog between the two clients.</param>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Refer.#ctor(Independentsoft.Sip.Response)">
            <summary>
            Initializes a new instance of the Refer class from the specified response. 
            </summary>
            <param name="response">A response from appropriate INVITE request.</param>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.ContentDisposition">
            <summary>
            Gets or sets <c>Content-Disposition</c> header field. The <c>Content-Disposition</c> header field 
            is used to describe the function of a request body. 
             </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.ContentEncoding">
            <summary>
            Gets or sets <c>Content-Encoding</c> header field. The <c>Content-Encoding</c> header field is used as a modifier to the "media-type".
            When present, its value indicates what additional content codings have been applied 
            to the request body, and thus what decoding mechanisms must be applied in order to 
            obtain the media-type referenced by the <c>Content-Type</c> header field.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.ContentLanguage">
            <summary>
            Gets or sets <c>Content-Language</c> header field. The <c>Content-Language</c> header field is used to indicate the language of
            a request body. It contains a language tag, which identifies the language.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.Contact">
            <summary>
            Gets or sets <c>Contact</c> header field. The <c>Contact</c> header field is used to convey a URI 
            that identifies the request originator.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.Accept">
            <summary>
            Gets or sets <c>Accept</c> header field. The <c>Accept</c> header field is used to indicate acceptable message Internet media types in the request body. 
            The header field describes media types using the format <c>type/sub-type</c> commonly used in the Internet. 
            If not present, the assumed acceptable request body format is application/sdp. The wildcard "*" can be used to specify all subtypes.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.AcceptEncoding">
            <summary>
            Gets or sets <c>Accept-Encoding</c> header field. The <c>Accept-Encoding</c> header field, 
            is used to specify acceptable request body encoding schemes. If not included, the assumed 
            encoding will be <c>text/plain</c>.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.AcceptLanguage">
            <summary>
            Gets or sets <c>Accept-Language</c> header field. The <c>Accept-Language</c> header field, is used 
            in requests to indicate the	preferred languages for reason phrases or session descriptions in the 
            request body. The rules for ordering the languages is based on the "q" parameter.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.Allow">
            <summary>
            Gets or sets <c>Allow</c> header field. The <c>Allow</c> header field lists the set of methods 
            supported by the client.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.ErrorInfo">
            <summary>
            Gets or sets <c>Error-Info</c> header field. The <c>Error-Info</c> header field provides a pointer 
            to additional information about the error status response.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.Expires">
            <summary>
            Gets or sets <c>Expires</c> header field. The <c>Expires</c> header field indicates the time interval 
            in which the request is valid. The value of this header field is number of seconds between 0 and 4294967295.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.RecordRoute">
            <summary>
            Gets or sets <c>Record-Route</c> header field. The <c>Record-Route</c> header field is used to force 
            routing through a proxy for all subsequent requests in a session between two clients.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.Organization">
            <summary>
            Gets or sets <c>Organization</c> header field. The <c>Organization</c> header field is used to 
            indicate the organization to which the originator of the request belongs.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.ProxyRequire">
            <summary>
            Gets or sets <c>Proxy-Require</c> header field. The <c>Proxy-Require</c> header field is used to list 
            features and extensions that a client requires a proxy to support in order to process the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.Require">
            <summary>
            Gets <c>Require</c> header field. The <c>Require</c> header field is used to tell the client about 
            options that the sender expects the client to support in order to process the request. The <c>Require</c> 
            header field contains a list of option tags. Each option tag defines a SIP extension that 
            must be understood to process the request. Frequently, this is used to indicate that a specific set 
            of extension header fields need to be understood. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.Route">
            <summary>
            Gets <c>Route</c> header field. The <c>Route</c> header field is used to provide routing information for requests.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.Server">
            <summary>
            Gets <c>Server</c> header field. The <c>Server</c> header field contains information about the 
            software used by the server to handle the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.Supported">
            <summary>
             Gets or sets <c>Supported</c> header field. The <c>Supported</c> header field enumerates all the 
             extensions supported by the client or server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.Timestamp">
            <summary>
             Gets or sets <c>Timestamp</c> header field. The <c>Timestamp</c> header field describes 
             when the client sent the request to the server. The time format is not specified.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.Unsupported">
            <summary>
            Gets <c>Unsupported</c> header field. The <c>Unsupported</c> header field lists the features not supported by the server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.Warning">
            <summary>
            Gets <c>Warning</c> header field. The <c>Warning</c> header field is used to carry additional 
            information about the status of a request or response. The warning text should be in a natural 
            language that is most likely to be intelligible to the human user receiving the response. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.ReferTo">
            <summary>
            Gets or sets <c>Refer-To</c> header field. The <c>Refer-To</c> header contains the URI that is being referenced.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Refer.ReferredBy">
            <summary>
            Gets or sets <c>Referred-By</c> header field. The <c>Referred-By</c> header field provides the 
            recipient of a triggered request information that the request was generated as a result of a REFER
            and the originator of the REFER.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Methods.Register">
            <summary>
            The Register class represents REGISTER method. The REGISTER method is used by a client to notify a SIP 
            network of its current Contact URI (IP address and port) and the URI that should have requests routed to 
            this Contact. Depending on the use of the <c>Contact</c> and <c>Expires</c> headers in the REGISTER request, 
            the registrar server will take different action.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Register.#ctor">
            <summary>
            Initializes a new instance of the Register class.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.ContentDisposition">
            <summary>
            Gets or sets <c>Content-Disposition</c> header field. The <c>Content-Disposition</c> header field 
            is used to describe the function of a request body. 
             </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.ContentEncoding">
            <summary>
            Gets or sets <c>Content-Encoding</c> header field. The <c>Content-Encoding</c> header field is used as a modifier to the "media-type".
            When present, its value indicates what additional content codings have been applied 
            to the request body, and thus what decoding mechanisms must be applied in order to 
            obtain the media-type referenced by the <c>Content-Type</c> header field.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.ContentLanguage">
            <summary>
            Gets or sets <c>Content-Language</c> header field. The <c>Content-Language</c> header field is used to indicate the language of
            a request body. It contains a language tag, which identifies the language.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.AllowEvents">
            <summary>
            Gets or sets <c>Allow-Events</c> header field. The <c>Allow-Events</c> header field,
            includes a list of tokens which indicates the event packages supported by the client. In other words, 
            a client sending an <c>Allow-Events</c> header is advertising that it can process and generate requests
            for all of the event packages listed in that header.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.Contact">
            <summary>
            Gets or sets <c>Contact</c> header field. The <c>Contact</c> header field is used to convey a URI 
            that identifies the request originator.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.Accept">
            <summary>
            Gets or sets <c>Accept</c> header field. The <c>Accept</c> header field is used to indicate acceptable message Internet media types in the request body. 
            The header field describes media types using the format <c>type/sub-type</c> commonly used in the Internet. 
            If not present, the assumed acceptable request body format is application/sdp. The wildcard "*" can be used to specify all subtypes.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.AcceptEncoding">
            <summary>
            Gets or sets <c>Accept-Encoding</c> header field. The <c>Accept-Encoding</c> header field, 
            is used to specify acceptable request body encoding schemes. If not included, the assumed 
            encoding will be <c>text/plain</c>.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.AcceptLanguage">
            <summary>
            Gets or sets <c>Accept-Language</c> header field. The <c>Accept-Language</c> header field, is used 
            in requests to indicate the	preferred languages for reason phrases or session descriptions in the 
            request body. The rules for ordering the languages is based on the "q" parameter.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.Allow">
            <summary>
            Gets or sets <c>Allow</c> header field. The <c>Allow</c> header field lists the set of methods 
            supported by the client.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.CallInfo">
            <summary>
            Gets or sets <c>Call-Info</c> header field. The <c>Call-Info</c> header field provides additional 
            information about the caller.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.ErrorInfo">
            <summary>
            Gets or sets <c>Error-Info</c> header field. The <c>Error-Info</c> header field provides a pointer 
            to additional information about the error status response.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.Expires">
            <summary>
            Gets or sets <c>Expires</c> header field. The <c>Expires</c> header field indicates the time interval 
            in which the request is valid. The value of this header field is number of seconds between 0 and 4294967295.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.MinExpires">
            <summary>
            Gets or sets <c>Min-Expires</c> header field. The <c>Min-Expires</c> header field contains an integer number of seconds 
            that represents the minimum expiration interval that the registrar will accept.
            The value of this header field is number of seconds between 0 and 4294967295.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.Organization">
            <summary>
            Gets or sets <c>Organization</c> header field. The <c>Organization</c> header field is used to 
            indicate the organization to which the originator of the request belongs.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.ProxyRequire">
            <summary>
            Gets or sets <c>Proxy-Require</c> header field. The <c>Proxy-Require</c> header field is used to list 
            features and extensions that a client requires a proxy to support in order to process the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.Require">
            <summary>
            Gets <c>Require</c> header field. The <c>Require</c> header field is used to tell the client about 
            options that the sender expects the client to support in order to process the request. The <c>Require</c> 
            header field contains a list of option tags. Each option tag defines a SIP extension that 
            must be understood to process the request. Frequently, this is used to indicate that a specific set 
            of extension header fields need to be understood. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.Route">
            <summary>
            Gets <c>Route</c> header field. The <c>Route</c> header field is used to provide routing information for requests.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.Server">
            <summary>
            Gets <c>Server</c> header field. The <c>Server</c> header field contains information about the 
            software used by the server to handle the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.Supported">
            <summary>
             Gets or sets <c>Supported</c> header field. The <c>Supported</c> header field enumerates all the 
             extensions supported by the client or server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.Timestamp">
            <summary>
             Gets or sets <c>Timestamp</c> header field. The <c>Timestamp</c> header field describes 
             when the client sent the request to the server. The time format is not specified.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.ReferredBy">
            <summary>
            Gets or sets <c>Referred-By</c> header field. The <c>Referred-By</c> header field provides the 
            recipient of a triggered request information that the request was generated as a result of a REFER
            and the originator of the REFER.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.Unsupported">
            <summary>
            Gets <c>Unsupported</c> header field. The <c>Unsupported</c> header field lists the features not supported by the server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Register.Warning">
            <summary>
            Gets <c>Warning</c> header field. The <c>Warning</c> header field is used to carry additional 
            information about the status of a request or response. The warning text should be in a natural 
            language that is most likely to be intelligible to the human user receiving the response. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Methods.Subscribe">
            <summary>
            The Subscribe class represents SUBSCRIBE method. The SUBSCRIBE method is used by a client to establish a 
            subscription for the purpose of receiving notifications (via the NOTIFY method) about a particular event. 
            A successful subscription establishes a dialog between the  client and the server or another client. 
            The subscription request contains <c>Expires</c> header field, which indicates the desired duration of the 
            existence of the subscription. After this time period passes, the subscription is automatically terminated. 
            The subscription can be refreshed by sending another SUBSCRIBE within the dialog before the expiration time. 
            A server accepting a subscription returns a 200 OK response also containing an <c>Expires</c> header. 
             There is no "UNSUBSCRIBE" method used in SIP—instead a SUBSCRIBE with the <c>Expires</c>=0 requests the termination 
             of a subscription and hence the dialog. A terminated subscription (either due to timeout out or a 
             termination request) will result in a final NOTIFY indicating that the subscription has been terminated.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Subscribe.#ctor">
            <summary>
            Initializes a new instance of the Subscribe class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Subscribe.#ctor(Independentsoft.Sip.Dialog)">
            <summary>
            Initializes a new instance of the Subscribe class from the specified dialog.
            </summary>
            <param name="dialog">An existing dialog between the two clients.</param>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Subscribe.#ctor(Independentsoft.Sip.Response)">
            <summary>
            Initializes a new instance of the Subscribe class from the specified response.
            </summary>
            <param name="response">A response.</param>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.ContentDisposition">
            <summary>
            Gets or sets <c>Content-Disposition</c> header field. The <c>Content-Disposition</c> header field 
            is used to describe the function of a request body. 
             </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.ContentEncoding">
            <summary>
            Gets or sets <c>Content-Encoding</c> header field. The <c>Content-Encoding</c> header field is used as a modifier to the "media-type".
            When present, its value indicates what additional content codings have been applied 
            to the request body, and thus what decoding mechanisms must be applied in order to 
            obtain the media-type referenced by the <c>Content-Type</c> header field.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.ContentLanguage">
            <summary>
            Gets or sets <c>Content-Language</c> header field. The <c>Content-Language</c> header field is used to indicate the language of
            a request body. It contains a language tag, which identifies the language.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.Contact">
            <summary>
            Gets or sets <c>Contact</c> header field. The <c>Contact</c> header field is used to convey a URI 
            that identifies the request originator.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.Accept">
            <summary>
            Gets or sets <c>Accept</c> header field. The <c>Accept</c> header field is used to indicate acceptable message Internet media types in the request body. 
            The header field describes media types using the format <c>type/sub-type</c> commonly used in the Internet. 
            If not present, the assumed acceptable request body format is application/sdp. The wildcard "*" can be used to specify all subtypes.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.AcceptEncoding">
            <summary>
            Gets or sets <c>Accept-Encoding</c> header field. The <c>Accept-Encoding</c> header field, 
            is used to specify acceptable request body encoding schemes. If not included, the assumed 
            encoding will be <c>text/plain</c>.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.AcceptLanguage">
            <summary>
            Gets or sets <c>Accept-Language</c> header field. The <c>Accept-Language</c> header field, is used 
            in requests to indicate the	preferred languages for reason phrases or session descriptions in the 
            request body. The rules for ordering the languages is based on the "q" parameter.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.Allow">
            <summary>
            Gets or sets <c>Allow</c> header field. The <c>Allow</c> header field lists the set of methods 
            supported by the client.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.AllowEvents">
            <summary>
            Gets or sets <c>Allow-Events</c> header field. The <c>Allow-Events</c> header field,
            includes a list of tokens which indicates the event packages supported by the client. In other words, 
            a client sending an <c>Allow-Events</c> header is advertising that it can process and generate requests
            for all of the event packages listed in that header.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.CallInfo">
            <summary>
            Gets or sets <c>Call-Info</c> header field. The <c>Call-Info</c> header field provides additional 
            information about the caller.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.ErrorInfo">
            <summary>
            Gets or sets <c>Error-Info</c> header field. The <c>Error-Info</c> header field provides a pointer 
            to additional information about the error status response.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.Expires">
            <summary>
            Gets or sets <c>Expires</c> header field. The <c>Expires</c> header field indicates the time interval 
            in which the request is valid. The value of this header field is number of seconds between 0 and 4294967295.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.Event">
            <summary>
            Gets or sets <c>Event</c> header field. The <c>Event</c> header field lists the event package to which the client would like to subscribe.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.MinExpires">
            <summary>
            Gets or sets <c>Min-Expires</c> header field. The <c>Min-Expires</c> header field contains an integer number of seconds 
            that represents the minimum expiration interval that the registrar will accept.
            The value of this header field is number of seconds between 0 and 4294967295.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.Organization">
            <summary>
            Gets or sets <c>Organization</c> header field. The <c>Organization</c> header field is used to 
            indicate the organization to which the originator of the request belongs.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.ProxyRequire">
            <summary>
            Gets or sets <c>Proxy-Require</c> header field. The <c>Proxy-Require</c> header field is used to list 
            features and extensions that a client requires a proxy to support in order to process the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.Require">
            <summary>
            Gets <c>Require</c> header field. The <c>Require</c> header field is used to tell the client about 
            options that the sender expects the client to support in order to process the request. The <c>Require</c> 
            header field contains a list of option tags. Each option tag defines a SIP extension that 
            must be understood to process the request. Frequently, this is used to indicate that a specific set 
            of extension header fields need to be understood. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.Route">
            <summary>
            Gets <c>Route</c> header field. The <c>Route</c> header field is used to provide routing information for requests.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.Server">
            <summary>
            Gets <c>Server</c> header field. The <c>Server</c> header field contains information about the 
            software used by the server to handle the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.Supported">
            <summary>
             Gets or sets <c>Supported</c> header field. The <c>Supported</c> header field enumerates all the 
             extensions supported by the client or server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.Timestamp">
            <summary>
             Gets or sets <c>Timestamp</c> header field. The <c>Timestamp</c> header field describes 
             when the client sent the request to the server. The time format is not specified.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.Unsupported">
            <summary>
            Gets <c>Unsupported</c> header field. The <c>Unsupported</c> header field lists the features not supported by the server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Subscribe.Warning">
            <summary>
            Gets <c>Warning</c> header field. The <c>Warning</c> header field is used to carry additional 
            information about the status of a request or response. The warning text should be in a natural 
            language that is most likely to be intelligible to the human user receiving the response. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Methods.Update">
            <summary>
            The Update class represents UPDATE method. The UPDATE method is used to modify the state of a session 
            without changing the state of the dialog. In an established session, a re-INVITE is used to update session 
            parameters. However, neither party in a pending session (INVITE sent but no final response received) 
            may re-INVITE—instead, the UPDATE method is used.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Update.#ctor">
            <summary>
            Initializes a new instance of the Update class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Update.#ctor(Independentsoft.Sip.Dialog)">
            <summary>
            Initializes a new instance of the Update class from the specified dialog.
            </summary>
            <param name="dialog">An existing dialog between the two clients.</param>
        </member>
        <member name="M:Independentsoft.Sip.Methods.Update.#ctor(Independentsoft.Sip.Response)">
            <summary>
            Initializes a new instance of the Update class from the specified response.
            </summary>
            <param name="response">A response from appropriate INVITE request.</param>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.ContentDisposition">
            <summary>
            Gets or sets <c>Content-Disposition</c> header field. The <c>Content-Disposition</c> header field 
            is used to describe the function of a request body. 
             </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.ContentEncoding">
            <summary>
            Gets or sets <c>Content-Encoding</c> header field. The <c>Content-Encoding</c> header field is used as a modifier to the "media-type".
            When present, its value indicates what additional content codings have been applied 
            to the request body, and thus what decoding mechanisms must be applied in order to 
            obtain the media-type referenced by the <c>Content-Type</c> header field.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.ContentLanguage">
            <summary>
            Gets or sets <c>Content-Language</c> header field. The <c>Content-Language</c> header field is used to indicate the language of
            a request body. It contains a language tag, which identifies the language.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.Contact">
            <summary>
            Gets or sets <c>Contact</c> header field. The <c>Contact</c> header field is used to convey a URI 
            that identifies the request originator.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.Accept">
            <summary>
            Gets or sets <c>Accept</c> header field. The <c>Accept</c> header field is used to indicate acceptable message Internet media types in the request body. 
            The header field describes media types using the format <c>type/sub-type</c> commonly used in the Internet. 
            If not present, the assumed acceptable request body format is application/sdp. The wildcard "*" can be used to specify all subtypes.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.AcceptEncoding">
            <summary>
            Gets or sets <c>Accept-Encoding</c> header field. The <c>Accept-Encoding</c> header field, 
            is used to specify acceptable request body encoding schemes. If not included, the assumed 
            encoding will be <c>text/plain</c>.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.AcceptLanguage">
            <summary>
            Gets or sets <c>Accept-Language</c> header field. The <c>Accept-Language</c> header field, is used 
            in requests to indicate the	preferred languages for reason phrases or session descriptions in the 
            request body. The rules for ordering the languages is based on the "q" parameter.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.Allow">
            <summary>
            Gets or sets <c>Allow</c> header field. The <c>Allow</c> header field lists the set of methods 
            supported by the client.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.CallInfo">
            <summary>
            Gets or sets <c>Call-Info</c> header field. The <c>Call-Info</c> header field provides additional 
            information about the caller.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.ErrorInfo">
            <summary>
            Gets or sets <c>Error-Info</c> header field. The <c>Error-Info</c> header field provides a pointer 
            to additional information about the error status response.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.Organization">
            <summary>
            Gets or sets <c>Organization</c> header field. The <c>Organization</c> header field is used to 
            indicate the organization to which the originator of the request belongs.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.RecordRoute">
            <summary>
            Gets or sets <c>Record-Route</c> header field. The <c>Record-Route</c> header field is used to force 
            routing through a proxy for all subsequent requests in a session between two clients.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.ProxyRequire">
            <summary>
            Gets or sets <c>Proxy-Require</c> header field. The <c>Proxy-Require</c> header field is used to list 
            features and extensions that a client requires a proxy to support in order to process the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.Require">
            <summary>
            Gets <c>Require</c> header field. The <c>Require</c> header field is used to tell the client about 
            options that the sender expects the client to support in order to process the request. The <c>Require</c> 
            header field contains a list of option tags. Each option tag defines a SIP extension that 
            must be understood to process the request. Frequently, this is used to indicate that a specific set 
            of extension header fields need to be understood. 
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.Route">
            <summary>
            Gets <c>Route</c> header field. The <c>Route</c> header field is used to provide routing information for requests.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.Server">
            <summary>
            Gets <c>Server</c> header field. The <c>Server</c> header field contains information about the 
            software used by the server to handle the request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.Supported">
            <summary>
             Gets or sets <c>Supported</c> header field. The <c>Supported</c> header field enumerates all the 
             extensions supported by the client or server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.Timestamp">
            <summary>
             Gets or sets <c>Timestamp</c> header field. The <c>Timestamp</c> header field describes 
             when the client sent the request to the server. The time format is not specified.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.Unsupported">
            <summary>
            Gets <c>Unsupported</c> header field. The <c>Unsupported</c> header field lists the features not supported by the server.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Methods.Update.Warning">
            <summary>
            Gets <c>Warning</c> header field. The <c>Warning</c> header field is used to carry additional 
            information about the status of a request or response. The warning text should be in a natural 
            language that is most likely to be intelligible to the human user receiving the response. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Presence.BasicStatus">
            <summary>
            Specifies basic status of <see cref="T:Independentsoft.Sip.Presence.Status" />.  
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.Presence.BasicStatus.Open">
            <summary>
            This value means that client is able to accept instant messages.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.Presence.BasicStatus.Closed">
            <summary>
            This value means that client is unable to accept instant messages.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.Presence.BasicStatus.None">
            <summary>
            Not defined.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Presence.Note">
            <summary>
            This class contains a description text which is usually used for a human readable comment. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Presence.Note.#ctor">
            <summary>
            Initializes a new instance of the Note class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Presence.Note.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Note class with the specified description. 
            </summary>
            <param name="description"></param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.Note.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Note class with the specified description in the specified language. 
            </summary>
            <param name="description"></param>
            <param name="language"></param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.Note.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Presence.Note.Description">
            <summary>
            Gets or sets description text.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Presence.Note.Language">
            <summary>
            Gets or sets language.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Presence.NoteCollection">
            <summary>
            Represents a collection of <see cref="T:Independentsoft.Sip.Presence.Note" /> objects.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Presence.NoteCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Presence.NoteCollection" /> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Presence.NoteCollection.Add(System.String)">
            <summary>
            Adds a <see cref="T:Independentsoft.Sip.Presence.Note" /> with the specified description to the collection.
            </summary>
            <param name="description">The description of the <see cref="T:Independentsoft.Sip.Presence.Note" /> to add.</param>
            <returns>The index of the added <see cref="T:Independentsoft.Sip.Presence.Note" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.NoteCollection.Add(System.String,System.String)">
            <summary>
            Adds a <see cref="T:Independentsoft.Sip.Presence.Note" /> with the specified description and language to the collection.
            </summary>
            <param name="description">The description of the <see cref="T:Independentsoft.Sip.Presence.Note" /> to add.</param>
            <param name="language">The language of the <see cref="T:Independentsoft.Sip.Presence.Note" /> to add.</param>
            <returns>The index of the added <see cref="T:Independentsoft.Sip.Presence.Note" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.NoteCollection.Add(Independentsoft.Sip.Presence.Note)">
            <summary>
            Adds the specified <see cref="T:Independentsoft.Sip.Presence.Note" /> to the collection.
            </summary>
            <param name="note">A <see cref="T:Independentsoft.Sip.Presence.Note" /> to add to the collection.</param>
            <returns>The index of the added <see cref="T:Independentsoft.Sip.Presence.Note" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.NoteCollection.Insert(System.Int32,System.String,System.String)">
            <summary>
            Inserts a <see cref="T:Independentsoft.Sip.Presence.Note" /> with the specified description and langauge at the specified possition.
            </summary>
            <param name="index">The index at which the node is inserted.</param>
            <param name="description">The description of the <see cref="T:Independentsoft.Sip.Presence.Note" /> to insert.</param>
            <param name="language">The language of the <see cref="T:Independentsoft.Sip.Presence.Note" /> to insert.</param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.NoteCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts a <see cref="T:Independentsoft.Sip.Presence.Note" /> with the specified description at the specified possition.
            </summary>
            <param name="index">The index at which the node is inserted.</param>
            <param name="description">The description of the <see cref="T:Independentsoft.Sip.Presence.Note" /> to insert.</param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.NoteCollection.Insert(System.Int32,Independentsoft.Sip.Presence.Note)">
            <summary>
            Inserts the specified <see cref="T:Independentsoft.Sip.Presence.Note" /> at the specified possition.
            </summary>
            <param name="index">The index at which the node is inserted.</param>
            <param name="note">The <see cref="T:Independentsoft.Sip.Presence.Note" /> to insert.</param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.NoteCollection.Remove(System.String)">
            <summary>
            Removes a <see cref="T:Independentsoft.Sip.Presence.Note" /> from the collection, if it is present.
            </summary>
            <param name="description">The description of the <see cref="T:Independentsoft.Sip.Presence.Note" /> to remove.</param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.NoteCollection.Remove(Independentsoft.Sip.Presence.Note)">
            <summary>
            Removes a <see cref="T:Independentsoft.Sip.Presence.Note" /> from the collection, if it is present.
            </summary>
            <param name="note">The <see cref="T:Independentsoft.Sip.Presence.Note" /> to remove.</param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.NoteCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:Independentsoft.Sip.Presence.NoteCollection" /> contains a specific <see cref="T:Independentsoft.Sip.Presence.Note" />.
            </summary>
            <param name="description">The description of the <see cref="T:Independentsoft.Sip.Presence.Note" /> to check for.</param>
            <returns>
                <b>true</b> if the collection contains the specified <see cref="T:Independentsoft.Sip.Presence.Note" />; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.NoteCollection.Contains(Independentsoft.Sip.Presence.Note)">
            <summary>
            Determines whether the <see cref="T:Independentsoft.Sip.Presence.NoteCollection" /> contains a specific <see cref="T:Independentsoft.Sip.Presence.Note" />.
            </summary>
            <param name="note">The <see cref="T:Independentsoft.Sip.Presence.Note" /> to check for.</param>
            <returns>
                <b>true</b> if the collection contains the specified <see cref="T:Independentsoft.Sip.Presence.Note" />; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.NoteCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified <see cref="T:Independentsoft.Sip.Presence.Note" /> in the collection.
            </summary>
            <param name="description">The description of the <see cref="T:Independentsoft.Sip.Presence.Note" /> to locate in the collection.</param>
            <returns>The first index of the <see cref="T:Independentsoft.Sip.Presence.Note" /> in the collection or -1 if the node is not found in the collection.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.NoteCollection.IndexOf(Independentsoft.Sip.Presence.Note)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified note in the collection.
            </summary>
            <param name="note">The <see cref="T:Independentsoft.Sip.Presence.Note" /> to locate in the collection.</param>
            <returns>The first index of the <see cref="T:Independentsoft.Sip.Presence.Note" /> in the collection or -1 if the node is not found in the collection.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.NoteCollection.Add(Independentsoft.Sip.Presence.NoteCollection)">
            <summary>
            Adds a <see cref="T:Independentsoft.Sip.Presence.NoteCollection" /> to the collection.
            </summary>
            <param name="collection">A <see cref="T:Independentsoft.Sip.Presence.NoteCollection" /> to add to the collection.</param>
            <returns>The index of the added item.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.NoteCollection.CopyTo(Independentsoft.Sip.Presence.Note[],System.Int32)">
            <summary>
            Copies an <see cref="T:Independentsoft.Sip.Presence.Note" /> array to the collection, starting at a specified target index.
            </summary>
            <param name="note">The array of <see cref="T:Independentsoft.Sip.Presence.Note" /> objects to copy to the collection.</param>
            <param name="index">The index at which the copied notes begin.</param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.NoteCollection.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Presence.NoteCollection.Item(System.Int32)">
            <summary>
            Gets or sets the value associated with the specified index. 
            In C#, this property is the indexer for the <see cref="T:Independentsoft.Sip.Presence.NoteCollection" /> class.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Presence.PresenceDescription">
            <summary>
            The PresenceDescription class is used to create and parse files with content type "application/pidf+xml" as defined in RFC 3863.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Presence.PresenceDescription.#ctor">
            <summary>
            Initializes a new instance of the PresenceDescription class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Presence.PresenceDescription.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PresenceDescription class with the specified entity. 
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.PresenceDescription.Parse(System.String)">
            <summary>
            Converts the specified string representation of a presence description to its <see cref="T:Independentsoft.Sip.Presence.PresenceDescription" /> equivalent. 
            </summary>
            <param name="presenceDescription">A string containing a presence description to convert.</param>
            <returns>A <see cref="T:Independentsoft.Sip.Presence.PresenceDescription" /> equivalent contained in the presenceDescription parameter.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.PresenceDescription.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Presence.PresenceDescription.Entity">
            <summary>
            Gets or sets entity name.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Presence.PresenceDescription.Tuples">
            <summary>
            Gets collection of tuples.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Presence.PresenceDescription.Notes">
            <summary>
            Gets collection of notes.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Presence.PresenceDescription.Extension">
            <summary>
            Gets collection of extensions.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Presence.Status">
            <summary>
            Represents "status" element as a part of presence description.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Presence.Status.#ctor">
            <summary>
            Initializes a new instance of the Status class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Presence.Status.#ctor(Independentsoft.Sip.Presence.BasicStatus)">
            <summary>
            Initializes a new instance of the Status class with the specified <see cref="P:Independentsoft.Sip.Presence.Status.BasicStatus" /></summary>
            <param name="basic"></param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.Status.#ctor(Independentsoft.Sip.Presence.BasicStatus,Independentsoft.Sip.Presence.XmlNodeCollection)">
            <summary>
            Initializes a new instance of the Status class with the specified <see cref="P:Independentsoft.Sip.Presence.Status.BasicStatus" /> and extension elements.
            </summary>
            <param name="basic"></param>
            <param name="extension"></param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.Status.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Presence.Status.BasicStatus">
            <summary>
            Gets or sets <see cref="P:Independentsoft.Sip.Presence.Status.BasicStatus" />.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Presence.Status.Extension">
            <summary>
            Gets collection of extensions.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Presence.Tuple">
            <summary>
            Represents "tuple" element as a part of presence description.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Presence.Tuple.#ctor">
            <summary>
            Initializes a new instance of the Tuple class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Presence.Tuple.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Tuple class with the specified ID.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.Tuple.#ctor(System.String,Independentsoft.Sip.Presence.Status)">
            <summary>
            Initializes a new instance of the Tuple class with the specified ID and status.
            </summary>
            <param name="id"></param>
            <param name="status"></param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.Tuple.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Presence.Tuple.ID">
            <summary>
            Gets or sets the tuples unique ID. The ID is used to distinguish this tuple from other tuples in the same <see cref="T:Independentsoft.Sip.Presence.PresenceDescription" />.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Presence.Tuple.Status">
            <summary>
            Gets or sets status.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Presence.Tuple.Contact">
            <summary>
            Gets or sets contact address.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Presence.Tuple.Notes">
            <summary>
            Gets tupels notes.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Presence.Tuple.Timestamp">
            <summary>
            Gets or sets date and time of the status change of this tuple.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Presence.Tuple.Extension">
            <summary>
            Gets collection of extensions.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Presence.TupleCollection">
            <summary>
            Represents a collection of <see cref="T:Independentsoft.Sip.Presence.Tuple" /> objects.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Presence.TupleCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Presence.TupleCollection" /> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Presence.TupleCollection.Add(System.String,Independentsoft.Sip.Presence.Status)">
            <summary>
            Adds a <see cref="T:Independentsoft.Sip.Presence.Tuple" /> with the specified ID and status to the collection.
            </summary>
            <param name="id">The ID of the <see cref="T:Independentsoft.Sip.Presence.Tuple" /> to add.</param>
            <param name="status">The status of the <see cref="T:Independentsoft.Sip.Presence.Tuple" /> to add.</param>
            <returns>The index of the added <see cref="T:Independentsoft.Sip.Presence.Tuple" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.TupleCollection.Add(Independentsoft.Sip.Presence.Tuple)">
            <summary>
            Adds a <see cref="T:Independentsoft.Sip.Presence.Tuple" /> to the collection.
            </summary>
            <param name="tuple">A <see cref="T:Independentsoft.Sip.Presence.Tuple" /> to add to the collection.</param>
            <returns>The index of the added <see cref="T:Independentsoft.Sip.Presence.Tuple" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.TupleCollection.Insert(System.Int32,Independentsoft.Sip.Presence.Tuple)">
            <summary>
            Inserts the specified node at the specified possition.
            </summary>
            <param name="index">The index at which the node is inserted.</param>
            <param name="tuple">The <see cref="T:Independentsoft.Sip.Presence.Tuple" /> to insert.</param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.TupleCollection.Remove(Independentsoft.Sip.Presence.Tuple)">
            <summary>
            Removes a <see cref="T:Independentsoft.Sip.Presence.Tuple" /> from the collection, if it is present. 
            </summary>
            <param name="tuple">The <see cref="T:Independentsoft.Sip.Presence.Tuple" /> to remove.</param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.TupleCollection.Contains(Independentsoft.Sip.Presence.Tuple)">
            <summary>
            Determines whether the <see cref="T:Independentsoft.Sip.Presence.TupleCollection" /> contains a specific <see cref="T:Independentsoft.Sip.Presence.Tuple" />.
            </summary>
            <param name="tuple">The <see cref="T:Independentsoft.Sip.Presence.Tuple" /> to check for.</param>
            <returns>
                <b>true</b> if the collection contains the specified <see cref="T:Independentsoft.Sip.Presence.Tuple" />; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.TupleCollection.IndexOf(Independentsoft.Sip.Presence.Tuple)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified node in the collection.
            </summary>
            <param name="tuple">The <see cref="T:Independentsoft.Sip.Presence.Tuple" /> to locate in the collection.</param>
            <returns>The first index of the <see cref="T:Independentsoft.Sip.Presence.Tuple" /> in the collection or -1 if the node is not found in the collection.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.TupleCollection.Add(Independentsoft.Sip.Presence.TupleCollection)">
            <summary>
            Adds a <see cref="T:Independentsoft.Sip.Presence.TupleCollection" /> to the collection.
            </summary>
            <param name="collection">A <see cref="T:Independentsoft.Sip.Presence.TupleCollection" /> to add to the collection.</param>
            <returns>The index of the added item.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.TupleCollection.CopyTo(Independentsoft.Sip.Presence.Tuple[],System.Int32)">
            <summary>
            Copies an <see cref="T:Independentsoft.Sip.Presence.Tuple" /> array to the collection, starting at a specified target index. 
            </summary>
            <param name="tuple">The array of <see cref="T:Independentsoft.Sip.Presence.Tuple" /> objects to copy to the collection.</param>
            <param name="index">The index at which the copied nodes begin.</param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.TupleCollection.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Presence.TupleCollection.Item(System.Int32)">
            <summary>
            Gets or sets the value associated with the specified index. 
            In C#, this property is the indexer for the <see cref="T:Independentsoft.Sip.Presence.TupleCollection" /> class.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Presence.XmlNodeCollection">
            <summary>
            Represents a collection of <see cref="T:System.Xml.XmlNode" /> objects.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Presence.XmlNodeCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Presence.XmlNodeCollection" /> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Presence.XmlNodeCollection.Add(System.Xml.XmlNode)">
            <summary>
            Adds a <see cref="T:System.Xml.XmlNode" /> to the collection.
            </summary>
            <param name="node">A <see cref="T:System.Xml.XmlNode" /> to add to the collection.</param>
            <returns>The index of the added <see cref="T:System.Xml.XmlNode" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.XmlNodeCollection.Insert(System.Int32,System.Xml.XmlNode)">
            <summary>
            Inserts the specified node at the specified possition.
            </summary>
            <param name="index">The index at which the node is inserted.</param>
            <param name="node">The <see cref="T:System.Xml.XmlNode" /> to insert.</param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.XmlNodeCollection.Remove(System.Xml.XmlNode)">
            <summary>
            Removes a <see cref="T:System.Xml.XmlNode" /> from the collection, if it is present. 
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode" /> to remove.</param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.XmlNodeCollection.Contains(System.Xml.XmlNode)">
            <summary>
            Determines whether the <see cref="T:Independentsoft.Sip.Presence.XmlNodeCollection" /> contains a specific <see cref="T:System.Xml.XmlNode" />.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode" /> to check for.</param>
            <returns>
                <b>true</b> if the collection contains the specified <see cref="T:System.Xml.XmlNode" />; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.XmlNodeCollection.IndexOf(System.Xml.XmlNode)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified node in the collection.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode" /> to locate in the collection.</param>
            <returns>The first index of the <see cref="T:System.Xml.XmlNode" /> in the collection or -1 if the node is not found in the collection.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.XmlNodeCollection.Add(Independentsoft.Sip.Presence.XmlNodeCollection)">
            <summary>
            Adds a <see cref="T:Independentsoft.Sip.Presence.XmlNodeCollection" /> to the collection.
            </summary>
            <param name="collection">A <see cref="T:Independentsoft.Sip.Presence.XmlNodeCollection" /> to add to the collection.</param>
            <returns>The index of the added item.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Presence.XmlNodeCollection.CopyTo(System.Xml.XmlNode[],System.Int32)">
            <summary>
            Copies an <see cref="T:System.Xml.XmlNode" /> array to the collection, starting at a specified target index. 
            </summary>
            <param name="node">The array of <see cref="T:System.Xml.XmlNode" /> objects to copy to the collection.</param>
            <param name="index">The index at which the copied nodes begin.</param>
        </member>
        <member name="M:Independentsoft.Sip.Presence.XmlNodeCollection.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Presence.XmlNodeCollection.Item(System.Int32)">
            <summary>
             Gets or sets the value associated with the specified index. 
             In C#, this property is the indexer for the <see cref="T:Independentsoft.Sip.Presence.XmlNodeCollection" /> class.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.ProtocolType">
            <summary>
            Specifies the protocols that the <see cref="T:Independentsoft.Sip.SipClient" /> class supports. 
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.ProtocolType.Tcp">
            <summary>
            Transmission Control Protocol. 
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.ProtocolType.Udp">
            <summary>
            User Datagram Protocol.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.RequestEventArgs">
            <summary>
            Provides data for the <see cref="!:ReceiveRequest" /> event.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.RequestEventArgs.#ctor">
            <summary>
            Initializes a new instance of the RequestEventArgs class.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.RequestEventArgs.Request">
            <summary>
            Gets the current request.
            </summary>
            <value>The request.</value>
        </member>
        <member name="T:Independentsoft.Sip.RequestResponse">
            <summary>
            The RequestResponse class contains <see cref="P:Independentsoft.Sip.RequestResponse.Request" /> and correspondent <see cref="P:Independentsoft.Sip.RequestResponse.Response" /> object.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.RequestResponse.#ctor">
            <summary>
            Initializes a new instance of the RequestResponse class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.RequestResponse.#ctor(Independentsoft.Sip.Request,Independentsoft.Sip.Response)">
            <summary>
            Initializes a new instance of the RequestResponse class with the specified request and response. 
            </summary>
            <param name="request"></param>
            <param name="response"></param>
        </member>
        <member name="P:Independentsoft.Sip.RequestResponse.Request">
            <summary>
            Gets request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.RequestResponse.Response">
            <summary>
            Gets response.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Response">
            <summary>
            The Response class represents SIP response message generated by a client or a SIP server to reply to a 
            request generated by the client. A response may contain additional header fields containing information 
            needed by the client or it may be a simple acknowledgment to prevent retransmissions of the request by the client.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Response.#ctor">
            <summary>
            Initializes a new instance of the Response class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Response.Parse(System.String)">
            <summary>
            Converts the specified string representation of a response to its <see cref="T:Independentsoft.Sip.Response" /> equivalent. 
            </summary>
            <param name="response">A string containing a request to convert.</param>
            <returns>A <see cref="T:Independentsoft.Sip.Response" /> equivalent contained in the request parameter.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Response.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Response.SipVersion">
            <summary>
            Gets SIP protocol version number.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Response.Sent">
            <summary>
            Indicates if response is sent or received.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Response.StatusCode">
            <summary>
            Gets or sets response status code.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Response.Description">
            <summary>
            Gets or sets response description.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Response.Header">
            <summary>
            Gets response header.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Response.Body">
            <summary>
            Gets or sets response body text.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Response.CSeq">
            <summary>
            Gets <c>CSeq</c> header field. The <c>CSeq</c> header field is a required header field in 
            every response. The <c>CSeq</c> header field contains a number that is same as in appropirate request.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Response.CallID">
            <summary>
            Gets or sets <c>Call-ID</c> header field. The <c>Call-ID</c> header field is mandatory in all 
            responses. It is used to uniquely identify a call between two clients.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Response.Via">
            <summary>
            Gets or sets <c>Via</c> header field. The <c>Via</c> header field indicates the path taken by 
            the request so far and indicates the path that should be followed in routing responses. The "branch" 
            parameter in the <c>Via</c> header field values serves as a transaction identifier, and is used by proxies 
            to detect loops. The <c>Via</c> header field value contains the transport protocol used to send the message, 
            the client's host name or network address, and possibly	the port number at which it wishes to receive 
            responses. The <c>Via</c> header field value can also contain parameters such as "maddr", "ttl", "received" and "branch".
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Response.SessionDescription">
            <summary>
            Returns the response body as <see cref="P:Independentsoft.Sip.Response.SessionDescription" /> if <c>Content-Type</c> is "application/sdp", otherwise returns null. Sets response body and sets <c>Content-Type</c> as "application/sdp".
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Response.ContentLength">
            <summary>
            Gets <c>Content-Length</c> header field. The <c>Content-Length</c> header field indicates the size 
            of the response body. If no body is present in a request, then the <c>Content-Length</c> header field value must be zero.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Response.ContentType">
            <summary>
            Gets or sets <c>Content-Type</c> header field. The <c>Content-Type</c> header field is used to specify 
            the Internet media type in the response body. Media types have the familiar form type/sub-type. If this 
            header field is not present, application/sdp is assumed.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Response.Contact">
            <summary>
            Gets or sets <c>Contact</c> header field. The <c>Contact</c> header field is used to convey a URI 
            that identifies the response originator.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Response.From">
            <summary>
            Gets or sets <c>From</c> header field.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Response.To">
            <summary>
            Gets or sets <c>To</c> header field.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.ResponseEventArgs">
            <summary>
            Provides data for the <see cref="!:ReceiveResponse" /> event.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.ResponseEventArgs.#ctor">
            <summary>
            Initializes a new instance of the ResponseEventArgs class.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.ResponseEventArgs.Response">
            <summary>
            Gets the current response.
            </summary>
            <value>The response.</value>
        </member>
        <member name="T:Independentsoft.Sip.Responses.Accepted">
            <summary>
            The Accepted class represents <c>Accepted</c> response with status code 202 and default description text "Accepted". 
            The <c>Accepted</c> response indicates that the client has received and understood the request, but that 
            the request. It is commonly used in responses to SUBSCRIBE, REFER and MESSAGE methods.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.Accepted.#ctor">
            <summary>
            Initializes a new instance of the Accepted class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.BadEvent">
            <summary>
            The BadEvent class represents <c>Bad Event</c> response with status code 489 and default description text "Bad Event". 
            The <c>Bad Event</c> response is used to reject a subscription request or notification containing an Event 
            package that is unknown or not supported.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.BadEvent.#ctor">
            <summary>
            Initializes a new instance of the BadEvent class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.BadExtension">
            <summary>
            The BadExtension class represents <c>Bad Extension</c> response with status code 420 and default description text "Bad Extension". 
            The <c>Bad Extension</c> response indicates that the extension specified in the <c>Require</c> header field is 
            not supported by the client. The response should contain a Supported header field listing the extensions that are supported.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.BadExtension.#ctor">
            <summary>
            Initializes a new instance of the BadExtension class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.BadRequest">
            <summary>
            The BadRequest class represents <c>Bad Request</c> response with status code 400 and default description text "Bad Request". 
            The <c>Bad Request</c> response indicates that the request was not understood by the client.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.BadRequest.#ctor">
            <summary>
            Initializes a new instance of the BadRequest class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.BusyHere">
            <summary>
            The BusyHere class represents <c>Busy Here</c> response with status code 486 and default description text "Busy Here". 
            The <c>Busy Here</c> response is used to indicate that the client cannot accept the call at this location.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.BusyHere.#ctor">
            <summary>
            Initializes a new instance of the BusyHere class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.CallIsBeingForwarded">
            <summary>
            The CallIsBeingForwarded class represents <c>Call Is Being Forwarded</c> response with status code 181 and default description text "Call Is Being Forwarded". 
            The <c>Call Is Being Forwarded</c> response is used to indicate that the call has been handed off to another end-point. 
            This response is sent when this information may be of use to the caller. Also, because a forwarding operation may
            take longer for the call to be answered, this response gives a status for the caller.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.CallIsBeingForwarded.#ctor">
            <summary>
            Initializes a new instance of the CallIsBeingForwarded class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.CallQueued">
            <summary>
            The CallQueued class represents <c>Call Queued</c> response with status code 182 and default description text "Call Queued". 
            The <c>Call Queued</c> response is used to indicate that the INVITE has been received, and will	be processed in a queue.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.CallQueued.#ctor">
            <summary>
            Initializes a new instance of the CallQueued class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.Decline">
            <summary>
            The Decline class represents <c>Decline</c> response with status code 603 and default description text "Decline". 
            The <c>Decline</c> response could indicate the client is busy, or simply does not want to accept the request.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.Decline.#ctor">
            <summary>
            Initializes a new instance of the Decline class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.Forbidden">
            <summary>
            The Forbidden class represents <c>Forbidden</c> response with status code 403 and default description text "Forbidden". 
            The <c>Forbidden</c> response is used to deny a request without giving the caller any recourse. It is sent when 
            the client has understood the request, found the request to be correctly formulated, but will not service the request.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.Forbidden.#ctor">
            <summary>
            Initializes a new instance of the Forbidden class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.MethodNotAllowed">
            <summary>
            The MethodNotAllowed class represents <c>Method Not Allowed</c> response with status code 405 and default 
            description text "Method Not Allowed". The <c>Method Not Allowed</c> response indicates that the client 
            has received and understood a request but is not willing to fulfill the request.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.MethodNotAllowed.#ctor">
            <summary>
            Initializes a new instance of the MethodNotAllowed class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.NotAcceptable">
            <summary>
            The NotAcceptable class represents <c>Not Acceptable</c> response with status code 606 and default description text "Not Acceptable". 
            The <c>Not Acceptable</c> response can be used to implement some session negotiation capability in SIP. 
            This response indicates that some aspect of the desired session is not acceptable to the client, and as a result, 
            the session cannot be established. The response	may contain a <c>Warning</c> header field with a numerical code 
            describing exactly what was not acceptable. The request can be retried with different media session information.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.NotAcceptable.#ctor">
            <summary>
            Initializes a new instance of the NotAcceptable class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.NotAcceptableHere">
            <summary>
            The NotAcceptableHere class represents <c>Not Acceptable Here</c> response with status code 488 and default description 
            text "Not Acceptable Here". The <c>Not Acceptable Here</c> response indicates that some aspect of the 
            proposed session is not acceptable and may contain a <c>Warning</c>c&gt; header field indicating the exact reason.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.NotAcceptableHere.#ctor">
            <summary>
            Initializes a new instance of the NotAcceptableHere class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.OK">
            <summary>
            The OK class represents <c>OK</c> response with status code 200 and default description text "OK". 
            The <c>OK</c> response has two uses in SIP. When used to accept a session invitation, it will contain a 
            message body containing the media properties of the called party. When used in response to other requests, 
            it indicates successful completion or receipt of the request. The response stops further retransmissions of 
            the request. In response to an OPTIONS, the message body may contain the capabilities of the server.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.OK.#ctor">
            <summary>
            Initializes a new instance of the OK class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.RequestPending">
            <summary>
            The RequestPending class represents <c>Request Pending</c> response with status code 491 and default description text "Request Pending". 
            The <c>Request Pending</c> response is used to resolve accidental simultaneous re-INVITEs by both parties in a dialog. 
            Since both INVITEs seek to change the state of the session, they cannot be processed at the same time. While the client 
            is awaiting a final response to a re-INVITE, any re-INVITE request received must be replied to with this response code.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.RequestPending.#ctor">
            <summary>
            Initializes a new instance of the RequestPending class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.RequestTerminated">
            <summary>
            The RequestTerminated class represents <c>Request Terminated</c> response with status code 487 and default description text "Request Terminated". 
            The <c>Request Terminated</c> response can be sent by a client that has received a CANCEL request for a pending INVITE request.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.RequestTerminated.#ctor">
            <summary>
            Initializes a new instance of the RequestTerminated class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.Ringing">
            <summary>
            The Ringing class represents <c>Ringing</c> response with status code 180 and default description text "Ringing". 
            The <c>Ringing</c> response is used to indicate that the INVITE has been received by the client and that alerting is taken place.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.Ringing.#ctor">
            <summary>
            Initializes a new instance of the Ringing class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.SessionProgress">
            <summary>
            The SessionProgress class represents <c>Session Progress</c> response with status code 183 and default description text "Session Progress". 
            The <c>Session Progress</c> response is used to convey information about the progress of the request that is not otherwise classified. 
            The response body may be used to convey	more details about the call progress.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.SessionProgress.#ctor">
            <summary>
            Initializes a new instance of the SessionProgress class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.Trying">
            <summary>
            The Trying class represents <c>Trying</c> response with status code 100 and default description text "Trying". 
            The <c>Trying</c> response indicates that some kind of action is being taken to process	the request.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.Trying.#ctor">
            <summary>
            Initializes a new instance of the Trying class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.Unauthorized">
            <summary>
            The Unauthorized class represents <c>Unauthorized</c> response with status code 401 and default description text "Unauthorized". 
            The <c>Unauthorized</c> response indicates that the request requires the user to perform authentication.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.Unauthorized.#ctor">
            <summary>
            Initializes a new instance of the Unauthorized class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.UnsupportedMediaType">
            <summary>
            The UnsupportedMediaType class represents <c>Unsupported Media Type</c> response with status code 415 and default description text "Unsupported Media Type". 
            The <c>Unsupported Media Type</c> response indicates that the media type contained in the INVITE request is not supported.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.UnsupportedMediaType.#ctor">
            <summary>
            Initializes a new instance of the UnsupportedMediaType class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Responses.UnsupportedURIScheme">
            <summary>
            The UnsupportedURIScheme class represents <c>Unsupported URI Scheme</c> response with status code 416 and default description text "Unsupported URI Scheme". 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Responses.UnsupportedURIScheme.#ctor">
            <summary>
            Initializes a new instance of the UnsupportedURIScheme class. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.AddressType">
            <summary>
            Specifies address type. 
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.Sdp.AddressType.InternetProtocolVersion4">
            <summary>
            The version 4 of the Internet Protocol.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.Sdp.AddressType.InternetProtocolVersion6">
            <summary>
            The version 6 of the Internet Protocol.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.Attribute">
            <summary>
            Represents attribute field as a property of <see cref="T:Independentsoft.Sip.Sdp.SessionDescription" /> or <see cref="T:Independentsoft.Sip.Sdp.Media" />.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Attribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Attribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> class with the specified name.
            </summary>
            <param name="name">A string represents attribute name.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Attribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> class with the specified name and value.
            </summary>
            <param name="name">A string represents attribute name.</param>
            <param name="value">A string represents attribute value.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Attribute.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Attribute.Name">
            <summary>
            Gets or sets name of the <see cref="T:Independentsoft.Sip.Sdp.Attribute" />.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Attribute.Value">
            <summary>
            Gets or sets value of the <see cref="T:Independentsoft.Sip.Sdp.Attribute" />.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.AttributeCollection">
            <summary>
            Represents a collection of <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> objects.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.AttributeCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Sdp.AttributeCollection" /> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.AttributeCollection.Add(System.String)">
            <summary>
            Adds an <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> with the specified name to the collection.
            </summary>
            <param name="name">The name of the <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> to add.</param>
            <returns>The index of the added <see cref="T:Independentsoft.Sip.Sdp.Attribute" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.AttributeCollection.Add(System.String,System.String)">
            <summary>
            Adds an <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> with the specified name and value to the collection.
            </summary>
            <param name="name">The name of the <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> to add.</param>
            <param name="value">The value of the <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> to add.</param>
            <returns>The index of the added <see cref="T:Independentsoft.Sip.Sdp.Attribute" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.AttributeCollection.Add(Independentsoft.Sip.Sdp.Attribute)">
            <summary>
            Adds the specified <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> to the collection.
            </summary>
            <param name="attribute">An <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> to add to the collection.</param>
            <returns>The index of the added <see cref="T:Independentsoft.Sip.Sdp.Attribute" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.AttributeCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts an <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> specified as a string at the specified possition.
            </summary>
            <param name="index">The index at which the attribute is inserted.</param>
            <param name="attribute">An attribute as a string.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.AttributeCollection.Insert(System.Int32,Independentsoft.Sip.Sdp.Attribute)">
            <summary>
            Inserts the specified <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> at the specified possition.
            </summary>
            <param name="index">The index at which the <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> is inserted.</param>
            <param name="attribute">The <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> to insert.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.AttributeCollection.Remove(System.String)">
            <summary>
            Removes an <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> from the collection, if it is present.
            </summary>
            <param name="attribute">The attribute as a string.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.AttributeCollection.Remove(Independentsoft.Sip.Sdp.Attribute)">
            <summary>
            Removes an <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> from the collection, if it is present.
            </summary>
            <param name="attribute">The <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> to remove.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.AttributeCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:Independentsoft.Sip.Sdp.AttributeCollection" /> contains a specific attribute.
            </summary>
            <param name="attribute">The attribute to check for.</param>
            <returns>
                <b>true</b> if the collection contains the specified <see cref="T:Independentsoft.Sip.Sdp.Attribute" />; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.AttributeCollection.Contains(Independentsoft.Sip.Sdp.Attribute)">
            <summary>
            Determines whether the <see cref="T:Independentsoft.Sip.Sdp.AttributeCollection" /> contains a specific <see cref="T:Independentsoft.Sip.Sdp.Attribute" />.
            </summary>
            <param name="attribute">The <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> to check for.</param>
            <returns>
                <b>true</b> if the collection contains the specified <see cref="T:Independentsoft.Sip.Sdp.Attribute" />; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.AttributeCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified attribute in the collection.
            </summary>
            <param name="attribute">The attribute to locate in the collection.</param>
            <returns>The first index of the <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> in the collection or -1 if the node is not found in the collection.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.AttributeCollection.IndexOf(Independentsoft.Sip.Sdp.Attribute)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> in the collection.
            </summary>
            <param name="attribute">The <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> to locate in the collection.</param>
            <returns>The first index of the <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> in the collection or -1 if the node is not found in the collection.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.AttributeCollection.Add(Independentsoft.Sip.Sdp.AttributeCollection)">
            <summary>
            Adds a <see cref="T:Independentsoft.Sip.Sdp.AttributeCollection" /> to the collection.
            </summary>
            <param name="collection">A <see cref="T:Independentsoft.Sip.Sdp.AttributeCollection" /> to add to the collection.</param>
            <returns>The index of the added item.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.AttributeCollection.CopyTo(Independentsoft.Sip.Sdp.Attribute[],System.Int32)">
            <summary>
            Copies an <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> array to the collection, starting at a specified target index.
            </summary>
            <param name="attribute">The array of <see cref="T:Independentsoft.Sip.Sdp.Attribute" /> objects to copy to the collection.</param>
            <param name="index">The index at which the copied notes begin.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.AttributeCollection.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.AttributeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the value associated with the specified index. 
            In C#, this property is the indexer for the <see cref="T:Independentsoft.Sip.Sdp.AttributeCollection" /> class.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.Bandwidth">
            <summary>
            Specifies the proposed bandwidth to be used by the session or media.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Bandwidth.#ctor">
            <summary>
            Initializes a new instance of the Bandwidth class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Bandwidth.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the Bandwidth class with the specified type and value.
            </summary>
            <param name="type">A string represents bandwidth type.</param>
            <param name="value">A value in kilobits per second.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Bandwidth.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Bandwidth.Type">
            <summary>
            Gets or sets bandwidth type.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Bandwidth.Value">
            <summary>
            Gets or sets bandwidth value. The bandwidth value is in kilobits per second
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.BandwidthCollection">
            <summary>
            Represents a collection of <see cref="T:Independentsoft.Sip.Sdp.Bandwidth" /> objects.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.BandwidthCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Sdp.BandwidthCollection" /> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.BandwidthCollection.Add(Independentsoft.Sip.Sdp.Bandwidth)">
            <summary>
            Adds a <see cref="T:Independentsoft.Sip.Sdp.Bandwidth" /> to the collection.
            </summary>
            <param name="bandwidth">A <see cref="T:Independentsoft.Sip.Sdp.Bandwidth" /> to add to the collection.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.BandwidthCollection.Add(System.String,System.Int32)">
            <summary>
            Adds a <see cref="T:Independentsoft.Sip.Sdp.Bandwidth" /> specified with the type and value to the collection.
            </summary>
            <param name="type">The type of the <see cref="T:Independentsoft.Sip.Sdp.Bandwidth" />.</param>
            <param name="value">The value of the <see cref="T:Independentsoft.Sip.Sdp.Bandwidth" />.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.BandwidthCollection.Remove(System.String)">
            <summary>
            Removes a <see cref="T:Independentsoft.Sip.Sdp.Bandwidth" /> specified with the type from the collection.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.BandwidthCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:Independentsoft.Sip.Sdp.BandwidthCollection" />.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.BandwidthCollection.Get(System.Int32)">
            <summary>
            Gets value of item at the specified position.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.BandwidthCollection.Get(System.String)">
            <summary>
            Gets value of the specified type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.BandwidthCollection.Set(System.String,System.Int32)">
            <summary>
            Sets value of the specified type.
            </summary>
            <param name="type">A string represents type.</param>
            <param name="value">A string represents value.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.BandwidthCollection.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.BandwidthCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the <see cref="T:Independentsoft.Sip.Sdp.BandwidthCollection" /> elements to a one-dimensional Array instance at the specified index.
            </summary>
            <param name="array">The array of <see cref="T:Independentsoft.Sip.Sdp.Bandwidth" /> objects to copy to the collection.</param>
            <param name="index">The index at which the copied notes begin.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.BandwidthCollection.GetEnumerator">
            <summary>
            Returns an IEnumerator that can iterate through the <see cref="T:Independentsoft.Sip.Sdp.BandwidthCollection" />.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.BandwidthCollection.Types">
            <summary>
            Returns an array of all types.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.BandwidthCollection.Item(System.Int32)">
            <summary>
            Gets the value associated with the specified index. In C#, this property is the indexer for the <see cref="T:Independentsoft.Sip.Sdp.BandwidthCollection" /> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.BandwidthCollection.Item(System.String)">
            <summary>
            Gets the value associated with the specified type. In C#, this property is the indexer for the <see cref="T:Independentsoft.Sip.Sdp.BandwidthCollection" /> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.BandwidthCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Independentsoft.Sip.Sdp.BandwidthCollection" /> is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.BandwidthCollection.Count">
            <summary>
            Gets the number of elements in the <see cref="T:Independentsoft.Sip.Sdp.BandwidthCollection" />.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.BandwidthCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:Independentsoft.Sip.Sdp.BandwidthCollection" />.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.Connection">
            <summary>
            The Connection class provides information about connection used in a media session.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Connection.#ctor">
            <summary>
            Initializes a new instance of the Connection class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Connection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Connection class.
            </summary>
            <param name="address">The connection address.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Connection.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the Connection class.
            </summary>
            <param name="address">The connection address.</param>
            <param name="timeToLive">The time to live value.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Connection.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Connection class.
            </summary>
            <param name="address">The connection address.</param>
            <param name="timeToLive">The time to live value.</param>
            <param name="numberOfAddresses">Number of address.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Connection.#ctor(Independentsoft.Sip.Sdp.AddressType,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Connection class.
            </summary>
            <param name="addressType">Type of address.</param>
            <param name="address">The connection address.</param>
            <param name="timeToLive">The time to live value.</param>
            <param name="numberOfAddresses">Number of address.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Connection.#ctor(Independentsoft.Sip.Sdp.NetworkType,Independentsoft.Sip.Sdp.AddressType,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Connection class.
            </summary>
            <param name="networkType">Type of network.</param>
            <param name="addressType">Type of address.</param>
            <param name="address">The connection address.</param>
            <param name="timeToLive">The time to live value.</param>
            <param name="numberOfAddresses">Number of address.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Connection.Parse(System.String)">
            <summary>
            Converts the specified string representation of a connection to its <see cref="T:Independentsoft.Sip.Sdp.Connection" /> equivalent. 
            </summary>
            <param name="connection">A string containing a connection to convert.</param>
            <returns>A <see cref="T:Independentsoft.Sip.Sdp.Connection" /> equivalent contained in the connection parameter.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Connection.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Connection.NetworkType">
            <summary>
            Gets or sets type of network.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Connection.AddressType">
            <summary>
            Gets or sets type of address.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Connection.Address">
            <summary>
            Gets or sets connection address. Typically the connection address will be a class-D IP multicast group address. 
            If the session is not multicast, then the connection address contains the fully-qualified domain name or the 
            unicast IP address.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Connection.TimeToLive">
            <summary>
            Gets or sets time to live (TTL) value. Sessions using an IP multicast connection address must also have
            a TTL value present in addition to the multicast address. The TTL and the <see cref="P:Independentsoft.Sip.Sdp.Connection.Address" /> together define the scope 
            with which multicast packets sent in this conference will be sent. TTL values must be in the range 0-255.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Connection.NumberOfAddresses">
            <summary>
            Gets or sets number of addresses.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.EmailAddressCollection">
            <summary>
            Represents a collection of email addresses.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.EmailAddressCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Sdp.EmailAddressCollection" /> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.EmailAddressCollection.Add(System.String)">
            <summary>
            Adds an email address to the collection.
            </summary>
            <param name="emailAddress">The email address to add.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.EmailAddressCollection.Remove(System.String)">
            <summary>
            Removes the specified phone number from the collection, if it is present.
            </summary>
            <param name="emailAddress"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.EmailAddressCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:Independentsoft.Sip.Sdp.EmailAddressCollection" />.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.EmailAddressCollection.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.EmailAddressCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies an <see cref="T:Independentsoft.Sip.Sdp.EmailAddressCollection" /> array to the collection, starting at a specified target index.
            </summary>
            <param name="array">The array of phone numbers to copy to the collection.</param>
            <param name="index">The index at which the copied notes begin.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.EmailAddressCollection.GetEnumerator">
            <summary>
            Returns an IEnumerator that can iterate through the <see cref="T:Independentsoft.Sip.Sdp.EmailAddressCollection" />.
            </summary>
            <returns>An IEnumerator for the <see cref="T:Independentsoft.Sip.Sdp.EmailAddressCollection" />.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.EmailAddressCollection.EmailAddresses">
            <summary>
            Gets array of email addresses.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.EmailAddressCollection.Item(System.Int32)">
            <summary>
            Gets phone number associated with the specified position. In C#, this property is the indexer for the <see cref="T:Independentsoft.Sip.Sdp.EmailAddressCollection" /> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.EmailAddressCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Independentsoft.Sip.Sdp.EmailAddressCollection" /> is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.EmailAddressCollection.Count">
            <summary>
            Gets the number of elements in the <see cref="T:Independentsoft.Sip.Sdp.EmailAddressCollection" />.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.EmailAddressCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:Independentsoft.Sip.Sdp.EmailAddressCollection" />.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.EncryptionKey">
            <summary>
            Represents encryption key.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.EncryptionKey.#ctor">
            <summary>
             Initializes a new instance of the EncryptionKey.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.EncryptionKey.#ctor(Independentsoft.Sip.Sdp.EncryptionMethod)">
            <summary>
             Initializes a new instance of the EncryptionKey class with the specified method. 
            </summary>
            <param name="method"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.EncryptionKey.#ctor(Independentsoft.Sip.Sdp.EncryptionMethod,System.String)">
            <summary>
             Initializes a new instance of the EncryptionKey class with the specified method and key. 
            </summary>
            <param name="method"></param>
            <param name="key"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.EncryptionKey.Parse(System.String)">
            <summary>
            Converts the specified string representation of a encryption key to its <see cref="T:Independentsoft.Sip.Sdp.EncryptionKey" /> equivalent.
            </summary>
            <param name="encryptionKey">A string containing a encryption key to convert.</param>
            <returns>A <see cref="T:Independentsoft.Sip.Sdp.EncryptionKey" /> equivalent contained in the encryptionKey parameter.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.EncryptionKey.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.EncryptionKey.Method">
            <summary>
            Gets or sets encryption method.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.EncryptionKey.Key">
            <summary>
            Gets or sets encryption key.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.EncryptionMethod">
            <summary>
            Specifies methods to be used to obtain a usable encryption key.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.Sdp.EncryptionMethod.Clear">
            <summary>
            The encryption key is untransformed.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.Sdp.EncryptionMethod.Base64">
            <summary>
            The encryption key is base64 encoded.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.Sdp.EncryptionMethod.Uri">
            <summary>
            The URI refers to the data containing the key.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.Sdp.EncryptionMethod.Prompt">
            <summary>
            The encryption key is not included. The user should be prompted for the key when attempting to join the session.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.Media">
            <summary>
            Represents media description as a part of <see cref="T:Independentsoft.Sip.Sdp.SessionDescription" />.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Media.#ctor">
            <summary>
            Initializes a new instance of the Media class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Media.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the Media class with the specified media type, port and protocol type.
            </summary>
            <param name="type"></param>
            <param name="port"></param>
            <param name="transportProtocol"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Media.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the Media class with the specified media type, port, protocol type and name.
            </summary>
            <param name="type"></param>
            <param name="port"></param>
            <param name="transportProtocol"></param>
            <param name="name"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Media.Parse(System.String)">
            <summary>
            Converts the specified string representation of a media string to its <see cref="T:Independentsoft.Sip.Sdp.Media" /> equivalent. 
            </summary>
            <param name="media">A string containing a media to convert.</param>
            <returns>A <see cref="T:Independentsoft.Sip.Sdp.Media" /> equivalent contained in the media parameter.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Media.ToString">
            <summary>
             Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Media.Type">
            <summary>
            Gets or sets media type. Values can be "audio", "video", "application", ...
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Media.Port">
            <summary>
            Gets or sets transport port to which the media stream will be sent.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Media.NumberOfPorts">
            <summary>
            Gets or sets number of ports.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Media.TransportProtocol">
            <summary>
            Gets or sets transport protocol. Most used value is "RTP/AVP".
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Media.Name">
            <summary>
            Gets ot sets name.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Media.MediaFormats">
            <summary>
            Gets collection of media formats.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Media.Connection">
            <summary>
            Gets or sets the media connection data.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Media.Bandwidths">
            <summary>
            Gets collection of <see cref="T:Independentsoft.Sip.Sdp.Bandwidth" />.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Media.EncryptionKey">
            <summary>
            Gets encryption key.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Media.Attributes">
            <summary>
            Gets collection of media attributes.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.MediaCollection">
            <summary>
            Represents a collection of <see cref="T:Independentsoft.Sip.Sdp.Media" /> objects.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.MediaCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Sdp.MediaCollection" /> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.MediaCollection.CopyTo(Independentsoft.Sip.Sdp.Media[],System.Int32)">
            <summary>
            Copies an <see cref="T:Independentsoft.Sip.Sdp.Media" /> array to the collection, starting at a specified target index.
            </summary>
            <param name="media">The array of <see cref="T:Independentsoft.Sip.Sdp.Media" /> objects to copy to the collection.</param>
            <param name="index">The index at which the copied nodes begin.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.MediaCollection.Insert(System.Int32,Independentsoft.Sip.Sdp.Media)">
            <summary>
            Inserts the specified <see cref="T:Independentsoft.Sip.Sdp.Media" /> at the specified possition.
            </summary>
            <param name="index">The index at which the <see cref="T:Independentsoft.Sip.Sdp.Media" /> is inserted.</param>
            <param name="media">The <see cref="T:Independentsoft.Sip.Sdp.Media" /> to insert.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.MediaCollection.Remove(Independentsoft.Sip.Sdp.Media)">
            <summary>
            Removes a <see cref="T:Independentsoft.Sip.Sdp.Media" /> from the collection, if it is present. 
            </summary>
            <param name="media">The <see cref="T:Independentsoft.Sip.Sdp.Media" /> to remove.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.MediaCollection.Contains(Independentsoft.Sip.Sdp.Media)">
            <summary>
            Determines whether the <see cref="T:Independentsoft.Sip.Sdp.MediaCollection" /> contains a specific <see cref="T:Independentsoft.Sip.Sdp.Time" />.
            </summary>
            <param name="media">The <see cref="T:Independentsoft.Sip.Sdp.Media" /> to check for.</param>
            <returns>
                <b>true</b> if the collection contains the specified <see cref="T:Independentsoft.Sip.Sdp.Media" />; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.MediaCollection.IndexOf(Independentsoft.Sip.Sdp.Media)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified node in the collection.
            </summary>
            <param name="media">The <see cref="T:Independentsoft.Sip.Sdp.Media" /> to locate in the collection.</param>
            <returns>The first index of the <see cref="T:Independentsoft.Sip.Sdp.Media" /> in the collection or -1 if the node is not found in the collection.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.MediaCollection.Add(Independentsoft.Sip.Sdp.MediaCollection)">
            <summary>
            Adds a <see cref="T:Independentsoft.Sip.Sdp.MediaCollection" /> to the collection.
            </summary>
            <param name="collection">A <see cref="T:Independentsoft.Sip.Sdp.MediaCollection" /> to add to the collection.</param>
            <returns>The index of the added item.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.MediaCollection.Add(Independentsoft.Sip.Sdp.Media)">
            <summary>
            Adds a <see cref="T:Independentsoft.Sip.Sdp.Media" /> to the collection.
            </summary>
            <param name="media">A <see cref="T:Independentsoft.Sip.Sdp.Media" /> to add to the collection.</param>
            <returns>The index of the added item.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.MediaCollection.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.MediaCollection.Item(System.Int32)">
            <summary>
            Gets or sets the value associated with the specified index. 
            In C#, this property is the indexer for the <see cref="T:Independentsoft.Sip.Sdp.MediaCollection" /> class.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.MediaFormatCollection">
            <summary>
            Represents a collection of media formats.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.MediaFormatCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Sdp.MediaFormatCollection" /> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.MediaFormatCollection.Add(System.String)">
            <summary>
            Adds media format to the collection.
            </summary>
            <param name="mediaFormat">The media format to add.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.MediaFormatCollection.Remove(System.String)">
            <summary>
            Removes the specified media format from the collection, if it is present.
            </summary>
            <param name="mediaFormat">The media format to remove.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.MediaFormatCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:Independentsoft.Sip.Sdp.MediaFormatCollection" />.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.MediaFormatCollection.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.MediaFormatCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies an <see cref="T:Independentsoft.Sip.Sdp.MediaFormatCollection" /> array to the collection, starting at a specified target index.
            </summary>
            <param name="array">The array of phone numbers to copy to the collection.</param>
            <param name="index">The index at which the copied notes begin.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.MediaFormatCollection.GetEnumerator">
            <summary>
            Returns an IEnumerator that can iterate through the <see cref="T:Independentsoft.Sip.Sdp.MediaFormatCollection" />.
            </summary>
            <returns>An IEnumerator for the <see cref="T:Independentsoft.Sip.Sdp.MediaFormatCollection" />.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.MediaFormatCollection.Formats">
            <summary>
            Gets array of media formats.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.MediaFormatCollection.Item(System.Int32)">
            <summary>
            Gets phone number associated with the specified position. In C#, this property is the indexer for the <see cref="T:Independentsoft.Sip.Sdp.MediaFormatCollection" /> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.MediaFormatCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Independentsoft.Sip.Sdp.MediaFormatCollection" /> is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.MediaFormatCollection.Count">
            <summary>
            Gets the number of elements in the <see cref="T:Independentsoft.Sip.Sdp.MediaFormatCollection" />.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.MediaFormatCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:Independentsoft.Sip.Sdp.MediaFormatCollection" />.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.NetworkType">
            <summary>
            Specifies types of network.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.Sdp.NetworkType.Internet">
            <summary>
            The Internet.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.Owner">
            <summary>
            The Owner class represents originator of the session.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Owner.#ctor">
            <summary>
            Initializes a new instance of the Owner class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Owner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Owner class.
            </summary>
            <param name="address">The address of the machine from which the session was created.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Owner.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Owner class.
            </summary>
            <param name="username">The user’s login on the originating host.</param>
            <param name="address">The address of the machine from which the session was created.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Owner.#ctor(System.String,System.Int64,System.Int64,System.String)">
            <summary>
            Initializes a new instance of the Owner class.
            </summary>
            <param name="username">The user’s login on the originating host.</param>
            <param name="sessionID">The session unique identifier.</param>
            <param name="version">The session version number.</param>
            <param name="address">The address of the machine from which the session was created.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Owner.#ctor(System.String,System.Int64,System.Int64,Independentsoft.Sip.Sdp.AddressType,System.String)">
            <summary>
            Initializes a new instance of the Owner class.
            </summary>
            <param name="username">The user’s login on the originating host.</param>
            <param name="sessionID">The session unique identifier.</param>
            <param name="version">The session version number.</param>
            <param name="addressType">The address type.</param>
            <param name="address">The address of the machine from which the session was created.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Owner.#ctor(System.String,System.Int64,System.Int64,Independentsoft.Sip.Sdp.NetworkType,Independentsoft.Sip.Sdp.AddressType,System.String)">
            <summary>
            Initializes a new instance of the Owner class.
            </summary>
            <param name="username">The user’s login name on the originating host.</param>
            <param name="sessionID">The session unique identifier.</param>
            <param name="version">The session version number.</param>
            <param name="networkType">The network type.</param>
            <param name="addressType">The address type.</param>
            <param name="address">The address of the machine from which the session was created.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Owner.Parse(System.String)">
            <summary>
            Converts the specified string representation of a presence description to its <see cref="T:Independentsoft.Sip.Sdp.Owner" /> equivalent.
            </summary>
            <param name="owner">A string containing a owner to convert.</param>
            <returns>A <see cref="T:Independentsoft.Sip.Sdp.Owner" /> equivalent contained in the owner parameter.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Owner.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Owner.Username">
            <summary>
            Gets or sets username. The username is the user’s login name on the originating host, or it is "-" if the 
            originating host does not support the concept of user ids. The username must not contain spaces.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Owner.SessionID">
            <summary>
            Gets or sets globally unique identifier for the session.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Owner.SessionIDString">
            <summary>
            Gets globally unique identifier for the session.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Owner.Version">
            <summary>
            Gets or sets version number.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Owner.VersionString">
            <summary>
            Gets or sets version number.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Owner.NetworkType">
            <summary>
            Gets or sets network type.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Owner.AddressType">
            <summary>
            Gets or sets address type.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Owner.Address">
            <summary>
            Gets or sets address. The address is the globally unique address of the machine from which the session was created.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.PhoneNumberCollection">
            <summary>
            Represents a collection of phone numbers.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.PhoneNumberCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Sdp.PhoneNumberCollection" /> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.PhoneNumberCollection.Add(System.String)">
            <summary>
            Adds phone number to the collection.
            </summary>
            <param name="phoneNumber">The phone number to add.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.PhoneNumberCollection.Remove(System.String)">
            <summary>
            Removes the specified phone number from the collection, if it is present.
            </summary>
            <param name="phoneNumber">The phone number to remove.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.PhoneNumberCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:Independentsoft.Sip.Sdp.PhoneNumberCollection" />.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.PhoneNumberCollection.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.PhoneNumberCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies an <see cref="T:Independentsoft.Sip.Sdp.PhoneNumberCollection" /> array to the collection, starting at a specified target index.
            </summary>
            <param name="array">The array of phone numbers to copy to the collection.</param>
            <param name="index">The index at which the copied notes begin.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.PhoneNumberCollection.GetEnumerator">
            <summary>
            Returns an IEnumerator that can iterate through the <see cref="T:Independentsoft.Sip.Sdp.PhoneNumberCollection" />.
            </summary>
            <returns>An IEnumerator for the <see cref="T:Independentsoft.Sip.Sdp.PhoneNumberCollection" />.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.PhoneNumberCollection.PhoneNumbers">
            <summary>
            Gets array of phone numbers.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.PhoneNumberCollection.Item(System.Int32)">
            <summary>
            Gets phone number associated with the specified position. In C#, this property is the indexer for the <see cref="T:Independentsoft.Sip.Sdp.PhoneNumberCollection" /> class.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.PhoneNumberCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Independentsoft.Sip.Sdp.PhoneNumberCollection" /> is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.PhoneNumberCollection.Count">
            <summary>
            Gets the number of elements in the <see cref="T:Independentsoft.Sip.Sdp.PhoneNumberCollection" />.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.PhoneNumberCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:Independentsoft.Sip.Sdp.PhoneNumberCollection" />.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.RepeatTime">
            <summary>
            The RepeatTime class represents repeat time for a session.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.RepeatTime.#ctor">
            <summary>
            Initializes a new instance of the RepeatTime class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.RepeatTime.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the RepeatTime class with the specified repeat interval and duration.
            </summary>
            <param name="repeatInterval"></param>
            <param name="duration"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.RepeatTime.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the RepeatTime class with the specified repeat interval, duration and offset.
            </summary>
            <param name="repeatInterval"></param>
            <param name="duration"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.RepeatTime.#ctor(System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the RepeatTime class with the specified repeat interval and duration.
            </summary>
            <param name="repeatInterval"></param>
            <param name="duration"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.RepeatTime.#ctor(System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the RepeatTime class with the specified repeat interval, duration and offset.
            </summary>
            <param name="repeatInterval"></param>
            <param name="duration"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.RepeatTime.Parse(System.String)">
            <summary>
            Converts the specified string representation of a presence description to its <see cref="T:Independentsoft.Sip.Sdp.RepeatTime" /> equivalent.
            </summary>
            <param name="repeatTime">A string containing a repeat time to convert.</param>
            <returns>A <see cref="T:Independentsoft.Sip.Sdp.RepeatTime" /> equivalent contained in the repeatTime parameter.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.RepeatTime.Add(System.TimeSpan)">
            <summary>
            Adds offset.
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.RepeatTime.Add(System.Int32)">
            <summary>
            Adds offset as number of seconds.
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.RepeatTime.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.RepeatTime.RepeatInterval">
            <summary>
            Gets or sets repeat time interval.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.RepeatTime.Duration">
            <summary>
            Gets or sets active duration of the session.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.RepeatTime.Offset">
            <summary>
            Gets offsets.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.SessionDescription">
            <summary>
            The SessionDescription class is used to create and parse session description as defined in Session Description Protocol (RFC 2327). 
            The Session Description Protocol intended for describing multimedia sessions for the purposes of session announcement, 
            session invitation, and other forms of multimedia session initiation.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.SessionDescription.#ctor">
            <summary>
            Initializes a new instance of the SessionDescription class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.SessionDescription.Parse(System.String)">
            <summary>
            Converts the specified string representation of a session description to its <see cref="T:Independentsoft.Sip.Sdp.SessionDescription" /> equivalent. 
            </summary>
            <param name="sessionDescription">A string containing a session description to convert.</param>
            <returns>A <see cref="T:Independentsoft.Sip.Sdp.SessionDescription" /> equivalent contained in the sessionDescription parameter.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.SessionDescription.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.SessionDescription.Version">
            <summary>
            Gets or sets session version number.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.SessionDescription.Owner">
            <summary>
            Gets or sets owner of the session.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.SessionDescription.Name">
            <summary>
            Gets or sets the session name.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.SessionDescription.Description">
            <summary>
            Gets or sets the session description.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.SessionDescription.Uri">
            <summary>
            Gets or sets the session URI.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.SessionDescription.EmailAddresses">
            <summary>
            Gets email addresses of the person responsible for the session.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.SessionDescription.PhoneNumbers">
            <summary>
            Gets phone numbers of the person responsible for the session.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.SessionDescription.Connection">
            <summary>
            Gets or sets the session connection data.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.SessionDescription.Bandwidths">
            <summary>
            Gets bandwidth of the session.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.SessionDescription.Time">
            <summary>
            Gets time collection of the session.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.SessionDescription.EncryptionKey">
            <summary>
            Gets encryption key of the session.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.SessionDescription.Attributes">
            <summary>
            Gets collection of the media attributes.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.SessionDescription.Media">
            <summary>
            Gets collection of the media.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.Time">
            <summary>
            Represents start and end time of a media session.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Time.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Sdp.Time" /> class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Time.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Sdp.Time" /> class with the specified start and end time. 
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Time.#ctor(System.DateTime,System.DateTime,Independentsoft.Sip.Sdp.RepeatTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Sdp.Time" /> class with the specified start, end and repeat time. 
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="repeatTime"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Time.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Sdp.Time" /> class with the specified start and end time. 
            </summary>
            <param name="start">The start time as number of seconds after January 1, 1900.</param>
            <param name="end">The end time as number of seconds after January 1, 1900.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Time.Parse(System.String)">
            <summary>
            Converts the specified string representation of a time to its <see cref="T:Independentsoft.Sip.Sdp.Time" /> equivalent. 
            </summary>
            <param name="time">A string containing a time to convert.</param>
            <returns>A <see cref="T:Independentsoft.Sip.Sdp.Time" /> equivalent contained in the time parameter.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Time.Add(Independentsoft.Sip.Sdp.RepeatTime)">
            <summary>
            Add a <see cref="P:Independentsoft.Sip.Sdp.Time.RepeatTime" />.
            </summary>
            <param name="repeatTime">The <see cref="P:Independentsoft.Sip.Sdp.Time.RepeatTime" /> to add.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.Time.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Time.Start">
            <summary>
            Gets or sets start time.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Time.End">
            <summary>
            Gets or sets end time.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Time.TimeZone">
            <summary>
            Gets or sets time zone.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.Time.RepeatTime">
            <summary>
            Gets array of repeat times. 
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.TimeCollection">
            <summary>
            Represents a collection of <see cref="T:Independentsoft.Sip.Sdp.Time" /> objects.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Independentsoft.Sip.Sdp.TimeCollection" /> class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeCollection.Add(System.DateTime,System.DateTime)">
            <summary>
            Adds a <see cref="T:Independentsoft.Sip.Sdp.Time" /> specified with start and end time to the collection.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns>The index of the added item.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeCollection.Add(System.DateTime,System.DateTime,Independentsoft.Sip.Sdp.RepeatTime)">
            <summary>
            Adds a <see cref="T:Independentsoft.Sip.Sdp.Time" /> specified with start, end and repeat time to the collection.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="repeatTime"></param>
            <returns>The index of the added item.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeCollection.Add(Independentsoft.Sip.Sdp.Time)">
            <summary>
            Adds a <see cref="T:Independentsoft.Sip.Sdp.Time" /> to the collection.
            </summary>
            <param name="time">A <see cref="T:Independentsoft.Sip.Sdp.Time" /> to add to the collection.</param>
            <returns>The index of the added item.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeCollection.Add(Independentsoft.Sip.Sdp.TimeCollection)">
            <summary>
            Adds a <see cref="T:Independentsoft.Sip.Sdp.TimeCollection" /> to the collection.
            </summary>
            <param name="collection">A <see cref="T:Independentsoft.Sip.Sdp.TimeCollection" /> to add to the collection.</param>
            <returns>The index of the added item.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeCollection.Remove(Independentsoft.Sip.Sdp.Time)">
            <summary>
            Removes a <see cref="T:Independentsoft.Sip.Sdp.Time" /> from the collection, if it is present. 
            </summary>
            <param name="time">The <see cref="T:Independentsoft.Sip.Sdp.Time" /> to remove.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeCollection.Insert(System.Int32,Independentsoft.Sip.Sdp.Time)">
            <summary>
            Inserts the specified <see cref="T:Independentsoft.Sip.Sdp.Time" /> at the specified possition.
            </summary>
            <param name="index">The index at which the <see cref="T:Independentsoft.Sip.Sdp.Time" /> is inserted.</param>
            <param name="time">The <see cref="T:Independentsoft.Sip.Sdp.Time" /> to insert.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeCollection.Contains(Independentsoft.Sip.Sdp.Time)">
            <summary>
            Determines whether the <see cref="T:Independentsoft.Sip.Sdp.TimeCollection" /> contains a specific <see cref="T:Independentsoft.Sip.Sdp.Time" />.
            </summary>
            <param name="time">The <see cref="T:Independentsoft.Sip.Sdp.Time" /> to check for.</param>
            <returns>
                <b>true</b> if the collection contains the specified <see cref="T:Independentsoft.Sip.Sdp.Time" />; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeCollection.IndexOf(Independentsoft.Sip.Sdp.Time)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified node in the collection.
            </summary>
            <param name="time">The <see cref="T:Independentsoft.Sip.Sdp.Time" /> to locate in the collection.</param>
            <returns>The first index of the <see cref="T:Independentsoft.Sip.Sdp.Time" /> in the collection or -1 if the node is not found in the collection.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeCollection.CopyTo(Independentsoft.Sip.Sdp.Time[],System.Int32)">
            <summary>
            Copies an <see cref="T:Independentsoft.Sip.Sdp.Time" /> array to the collection, starting at a specified target index.
            </summary>
            <param name="time">The array of <see cref="T:Independentsoft.Sip.Sdp.Time" /> objects to copy to the collection.</param>
            <param name="index">The index at which the copied nodes begin.</param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeCollection.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="P:Independentsoft.Sip.Sdp.TimeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the value associated with the specified index. 
            In C#, this property is the indexer for the <see cref="T:Independentsoft.Sip.Sdp.TimeCollection" /> class.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.Sdp.TimeZone">
            <summary>
            Specifies time zone entry.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeZone.#ctor">
            <summary>
            Initializes a new instance of the TimeZone class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeZone.#ctor(System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of the TimeZone class with the specified adjustment time and offset.
            </summary>
            <param name="adjustmentTime"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeZone.#ctor(System.Int64,System.Int32)">
            <summary>
            Initializes a new instance of the TimeZone class with the specified adjustment time and offset.
            </summary>
            <param name="adjustmentTime"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeZone.Add(System.DateTime,System.TimeSpan)">
            <summary>
            Adds adjustment time with the specified adjustment time and offset. 
            </summary>
            <param name="adjustmentTime"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeZone.Add(System.Int64,System.Int32)">
            <summary>
            Adds adjustment time with the specified adjustment time and offset. 
            </summary>
            <param name="adjustmentTime"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeZone.Parse(System.String)">
            <summary>
            Converts the specified string representation of a time zone to its <see cref="T:Independentsoft.Sip.Sdp.TimeZone" /> equivalent. 
            </summary>
            <param name="timeZone">A string containing a time zone to convert.</param>
            <returns>A <see cref="T:Independentsoft.Sip.Sdp.TimeZone" /> equivalent contained in the timeZone parameter.</returns>
        </member>
        <member name="M:Independentsoft.Sip.Sdp.TimeZone.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="T:Independentsoft.Sip.SipClient">
            <summary>
            SipClient is master class responsible for sending and receiving SIP messages.
            </summary>
            <example>
            The following code example use SipClient class to connect and register to a SIP server.
              <code>
            using System;
            using Independentsoft.Sip;
            namespace ConsoleApplication1
            {
            class Class1
            {
            private static Logger logger;
            private static SipClient client;
            public static void Main(string[] args)
            {
            client = new SipClient("sipdomain.com","Bob","password");
            logger = new Logger();
            logger.WriteLog += new WriteLogEventHandler(OnWriteLog);
            client.Logger = logger;
            client.ReceiveRequest += new ReceiveRequestEventHandler(OnReceiveRequest);
            client.ReceiveResponse += new ReceiveResponseEventHandler(OnReceiveResponse);
            client.Connect();
            client.Register("sip:sipdomain.com","sip:Bob@mydomain.com", "sip:Bob@mydomain.com");
            Console.WriteLine("Press ENTER to exit.");
            Console.Read();
            client.Disconnect();
            }
            private static void OnReceiveRequest(object sender, RequestEventArgs e)
            {
            //accept any request from server or another sip user agent
            client.AcceptRequest(e.Request);
            }
            private static void OnReceiveResponse(object sender,ResponseEventArgs e)
            {
            }
            private static void OnWriteLog(object sender, WriteLogEventArgs e)
            {
            Console.Write(e.Log);
            }
            }
            }
              </code><b>[Visual Basic]</b><code>
            Imports System
            Imports Independentsoft.Sip
            Namespace ConsoleApplication1
            Class Class1
            Private Shared logger As Logger
            Private Shared client As SipClient
            Public Shared Sub Main(ByVal args() As String)
            client = New SipClient("sipdomain.com", "Bob", "password")
            logger = New Logger
            AddHandler logger.WriteLog, AddressOf OnWriteLog
            client.Logger = logger
            AddHandler client.ReceiveRequest, AddressOf OnReceiveRequest
            AddHandler client.ReceiveResponse, AddressOf OnReceiveResponse
            client.Connect()
            client.Register("sip:sipdomain.com", "sip:Bob@mydomain.com", "sip:Bob@mydomain.com")
            Console.WriteLine("Press ENTER to exit.")
            Console.Read()
            client.Disconnect()
            End Sub
            Private Shared Sub OnReceiveRequest(ByVal sender As Object, ByVal e As RequestEventArgs)
            'accept any request from server or another sip user agent
            client.AcceptRequest(e.Request)
            End Sub
            Private Shared Sub OnReceiveResponse(ByVal sender As Object, ByVal e As ResponseEventArgs)
            End Sub
            Private Shared Sub OnWriteLog(ByVal sender As Object, ByVal e As WriteLogEventArgs)
            Console.Write(e.Log)
            End Sub
            End Class
            End Namespace
              </code></example>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.#ctor">
            <summary>
            Initializes a new instance of the SipClient class.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SipClient class using the specified domain.
            </summary>
            <param name="domain">A string represents domain name, name or IP address of SIP server.</param>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the SipClient class using the specified domain and port number of SIP server.
            </summary>
            <param name="domain">A string represents domain name, name or IP address of SIP server.</param>
            <param name="port">The port number of the SIP server.</param>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.#ctor(System.String,Independentsoft.Sip.ProtocolType)">
            <summary>
            Initializes a new instance of the SipClient class using the specified domain and protocol type.
            </summary>
            <param name="domain">A string represents domain name, name or IP address of SIP server.</param>
            <param name="protocol">One of the <see cref="T:Independentsoft.Sip.ProtocolType" /> values.</param>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.#ctor(System.String,Independentsoft.Sip.ProtocolType,System.String,System.String)">
            <summary>
            Initializes a new instance of the SipClient class using the specified domain, protocol type, username and password.
            </summary>
            <param name="domain">A string represents domain name, name or IP address of SIP server.</param>
            <param name="protocol">One of the <see cref="T:Independentsoft.Sip.ProtocolType" /> values.</param>
            <param name="username">The user name on the SIP server.</param>
            <param name="password">The password on the SIP server.</param>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the SipClient class using the specified domain, username and password.
            </summary>
            <param name="domain">A string represents domain name, name or IP address of SIP server.</param>
            <param name="username">The user name on the SIP server.</param>
            <param name="password">The password on the SIP server.</param>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the SipClient class using the specified domain, port number, username and password.
            </summary>
            <param name="domain">A string represents domain name, name or IP address of SIP server.</param>
            <param name="port">The port number of the SIP server.</param>
            <param name="username">The user name on the SIP server.</param>
            <param name="password">The password on the SIP server.</param>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.#ctor(System.String,System.Int32,Independentsoft.Sip.ProtocolType)">
            <summary>
            Initializes a new instance of the SipClient class using the specified domain, port number and protocol type.
            </summary>
            <param name="domain">A string represents domain name, name or IP address of SIP server.</param>
            <param name="port">The port number of the SIP server.</param>
            <param name="protocol">One of the <see cref="T:Independentsoft.Sip.ProtocolType" /> values.</param>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.#ctor(System.String,System.Int32,Independentsoft.Sip.ProtocolType,System.String,System.String)">
            <summary>
            Initializes a new instance of the SipClient class using the specified domain, port number, protocol type, username and password.
            </summary>
            <param name="domain">A string represents domain name, name or IP address of SIP server.</param>
            <param name="port">The port number of the SIP server.</param>
            <param name="protocol">One of the <see cref="T:Independentsoft.Sip.ProtocolType" /> values.</param>
            <param name="username">The user name on the SIP server.</param>
            <param name="password">The password on the SIP server.</param>
            <exception cref="T:System.ArgumentException">Port value must be an integer between 1 and 65535.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Connect">
            <summary>
            Establishes a connection to a remote host.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Bind">
            <summary>
            Associates a client with a local endpoint.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Bind(System.Net.IPEndPoint)">
            <summary>
            Associates a client with a local endpoint.
            </summary>
            <param name="localIPEndPoint">A local end point.</param>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.GetRegisteredContacts(System.String,System.String)">
            <summary>
            Returns array of all existing registered contacts.
            </summary>
            <param name="uri">A string represents domain name, name or IP address of SIP server.</param>
            <param name="from">A string contains the address of the registered user.</param>
            <returns>An array of registered contacts.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Register(System.String,System.String)">
            <summary>
            Registers user to a SIP server. The user informs server of his current contact addresss.
            </summary>
            <param name="uri">A string represents domain name, name or IP address of SIP server.</param>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains the address of the user responsible for the registration.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Register(System.String,System.String,System.String)">
            <summary>
            Registers user to a SIP server. The user informs server of his current contact addresss.
            </summary>
            <param name="uri">A string represents domain name, name or IP address of SIP server.</param>
            <param name="from">A string contains the address of the user responsible for the registration.</param>
            <param name="contact">A string contains user's contact address. Usually the address contains user's IP address and port.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Register(System.String,Independentsoft.Sip.ContactInfo)">
            <summary>
            Registers user to a SIP server. The user informs server of his current contact addresss.
            </summary>
            <param name="uri">A string represents domain name, name or IP address of SIP server.</param>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains the address of the user responsible for the registration.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Register(System.String,Independentsoft.Sip.ContactInfo,Independentsoft.Sip.Contact)">
            <summary>
            Registers user to a SIP server. The user informs server of his current contact addresss.
            </summary>
            <param name="uri">A string represents domain name, name or IP address of SIP server.</param>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains the address of the user responsible for the registration.</param>
            <param name="contact">A <see cref="P:Independentsoft.Sip.SipClient.Contact" /> contains user's contact address and name. Usually the address contains user's IP address and port.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Unregister(System.String,System.String)">
            <summary>
            Cancels user's registration from the server.
            </summary>
            <param name="uri">A string represents domain name, name or IP address of SIP server.</param>
            <param name="from">A string contains the address of the user responsible for the registration.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Unregister(System.String,System.String,System.String)">
            <summary>
            Cancels user's registration from the server.
            </summary>
            <param name="uri">A string represents domain name, name or IP address of SIP server.</param>
            <param name="from">A string contains the address of the user responsible for the registration.</param>
            <param name="contact">A string contains user's contact address. Usually the address contains user's IP address and port.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Unregister(System.String,Independentsoft.Sip.ContactInfo)">
            <summary>
            Cancels user's registration from the server.
            </summary>
            <param name="uri">A string represents domain name, name or IP address of SIP server.</param>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains the address of the user responsible for the registration.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Unregister(System.String,Independentsoft.Sip.ContactInfo,Independentsoft.Sip.Contact)">
            <summary>
            Cancels user's registration from the server.
            </summary>
            <param name="uri">A string represents domain name, name or IP address of SIP server.</param>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains the address of the user responsible for the registration.</param>
            <param name="contact">A <see cref="P:Independentsoft.Sip.SipClient.Contact" /> contains user's contact address and name. Usually the address contains user's IP address and port.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.PublishEventState(System.String,System.String,System.Int32,Independentsoft.Sip.Presence.PresenceDescription)">
            <summary>
            Publishes initial event state.
            </summary>
            <param name="from">A string contains address of the publisher of the event.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <param name="presence">A presence description to publish.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">presence;PresenceDescription is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.PublishEventState(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Publishes initial event state.
            </summary>
            <param name="from">A string contains address of the publisher of the event.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <param name="body">A string contains event state information.</param>
            <param name="contentType">Content type of the body.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.PublishEventState(Independentsoft.Sip.ContactInfo,System.String,System.Int32,Independentsoft.Sip.Presence.PresenceDescription)">
            <summary>
            Publishes initial event state.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and name of the publisher of the event.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <param name="presence">A presence description to publish.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">presence;PresenceDescription is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.PublishEventState(Independentsoft.Sip.ContactInfo,System.String,System.Int32,System.String,System.String)">
            <summary>
            Publishes initial event state.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and name of the publisher of the event.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <param name="body">A string contains event state information.</param>
            <param name="contentType">Content type of the body.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.RefreshEventState(System.String,System.String,System.String,System.Int32)">
            <summary>
            Refreshes previously established publications.
            </summary>
            <param name="from">A string contains address of the sender of the request.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="entityTag">An entity tag of an existing event to refresh.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.RefreshEventState(Independentsoft.Sip.ContactInfo,System.String,System.String,System.Int32)">
            <summary>
            Refreshes previously established publications.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address of the sender of the request.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="entityTag">An entity tag of an existing event to refresh.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.ModifyEventState(System.String,System.String,System.String,System.Int32,Independentsoft.Sip.Presence.PresenceDescription)">
            <summary>
            Updates existing event state.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address of the sender of the request.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="entityTag">An entity tag of an existing event to modify.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <param name="presence">A presence description to publish.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">presence;PresenceDescription is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.ModifyEventState(System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Updates existing event state.
            </summary>
            <param name="from">A string contains address of the sender of the request.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="entityTag">An entity tag of an existing event to modify.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <param name="body">A string contains event state information.</param>
            <param name="contentType">Content type of the body.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.ModifyEventState(Independentsoft.Sip.ContactInfo,System.String,System.String,System.Int32,Independentsoft.Sip.Presence.PresenceDescription)">
            <summary>
            Updates existing event state.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address of the sender of the request.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="entityTag">An entity tag of an existing event to modify.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <param name="presence">A presence description to publish.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">presence;PresenceDescription is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.ModifyEventState(Independentsoft.Sip.ContactInfo,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Updates existing event state.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address of the sender of the request.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="entityTag">An entity tag of an existing event to modify.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <param name="body">A string contains event state information.</param>
            <param name="contentType">Content type of the body.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.RemoveEventState(System.String,System.String,System.String)">
            <summary>
            Removes event state established by a prior publication.
            </summary>
            <param name="from">A string contains address of the sender of the request.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="entityTag">An entity tag of an existing event to remove.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.RemoveEventState(Independentsoft.Sip.ContactInfo,System.String,System.String)">
            <summary>
            Removes event state established by a prior publication.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address of the sender of the request.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="entityTag">An entity tag of an existing event to remove.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Subscribe(System.String,System.String,System.String,System.Int32)">
            <summary>
            Subscribes in order to receiving notifications about a particular event specified with the event name.
            </summary>
            <param name="from">A string contains address of the subscriber.</param>
            <param name="to">A string contains address of the recipient.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Subscribe(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Subscribes in order to receiving notifications about a particular event specified with the event name.
            </summary>
            <param name="from">A string contains address and display name of the subscriber.</param>
            <param name="to">A string contains address of the recipient.</param>
            <param name="contact">A string contains user's contact address. Usually the address contains user's IP address and port.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Subscribe(System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Subscribes in order to receiving notifications about a particular event specified with the event name.
            </summary>
            <param name="from">A string contains address and display name of the subscriber.</param>
            <param name="to">A string contains address of the recipient.</param>
            <param name="contact">A string contains user's contact address. Usually the address contains user's IP address and port.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="allowEvents">A string contains names of allowed events.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Subscribe(Independentsoft.Sip.ContactInfo,Independentsoft.Sip.ContactInfo,System.String,System.Int32)">
            <summary>
            Subscribes in order to receiving notifications about a particular event specified with the event name.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and display name of the subscriber.</param>
            <param name="to">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and name of the recipient.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Subscribe(Independentsoft.Sip.ContactInfo,Independentsoft.Sip.ContactInfo,Independentsoft.Sip.Contact,System.String,System.Int32)">
            <summary>
            Subscribes in order to receiving notifications about a particular event specified with the event name.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and display name of the subscriber.</param>
            <param name="to">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and name of the recipient.</param>
            <param name="contact">A <see cref="P:Independentsoft.Sip.SipClient.Contact" /> contains user's contact address and name. Usually the address contains user's IP address and port.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Subscribe(Independentsoft.Sip.ContactInfo,Independentsoft.Sip.ContactInfo,Independentsoft.Sip.Contact,System.String,System.String,System.Int32)">
            <summary>
            Subscribes in order to receiving notifications about a particular event specified with the event name.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and display name of the subscriber.</param>
            <param name="to">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and name of the recipient.</param>
            <param name="contact">A <see cref="P:Independentsoft.Sip.SipClient.Contact" /> contains user's contact address and name. Usually the address contains user's IP address and port.</param>
            <param name="eventName">A string contains name of the event.</param>
            <param name="allowEvents">A string contains names of allowed events.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Unsubscribe(Independentsoft.Sip.RequestResponse)">
            <summary>
            Terminates existing subscription.
            </summary>
            <param name="requestResponse">A <see cref="T:Independentsoft.Sip.RequestResponse" /> from appropriate SUBSCRIBE request.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">requestResponse;RequestResponse is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Unsubscribe(Independentsoft.Sip.Response)">
            <summary>
            Terminates existing subscription specified with the response.
            </summary>
            <param name="response">A <see cref="T:Independentsoft.Sip.Response" /> from appropriate SUBSCRIBE request.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">response;Response is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Unsubscribe(Independentsoft.Sip.Dialog)">
            <summary>
            Terminates existing subscription specified with the dialog.
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents subscription.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">dialog;Dialog is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.RefreshSubscription(Independentsoft.Sip.Dialog,System.Int32)">
            <summary>
            Refreshes existing subscription with new expiration time.
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents subscription.</param>
            <param name="expires">A number of seconds indicates duration of the subscription.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">dialog;Dialog is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Refer(System.String,System.String,System.String,System.String)">
            <summary>
            Transfers call to resource specified with the <c>referTo</c> parameter.
            </summary>
            <param name="from">A string contains address and display name of the sender of the request.</param>
            <param name="to">A string contains address of the recipient.</param>
            <param name="contact">A string contains user's contact address. Usually the address contains user's IP address and port.</param>
            <param name="referTo">A string contains address of the user to refer to.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Refer(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Transfers call to resource specified with the <c>referTo</c> parameter.
            </summary>
            <param name="from">A string contains address and display name of the sender of the request.</param>
            <param name="to">A string contains address of the recipient.</param>
            <param name="contact">A string contains user's contact address. Usually the address contains user's IP address and port.</param>
            <param name="referTo">A string contains address of the user to refer to.</param>
            <param name="refferedBy">A string contains address of the user reffered by.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Refer(Independentsoft.Sip.ContactInfo,Independentsoft.Sip.ContactInfo,Independentsoft.Sip.Contact,System.String)">
            <summary>
            Transfers call to resource specified with the <c>referTo</c> parameter.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and display name of the sender of the request.</param>
            <param name="to">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and name of the recipient.</param>
            <param name="contact">A <see cref="P:Independentsoft.Sip.SipClient.Contact" /> contains user's contact address and name. Usually the address contains user's IP address and port.</param>
            <param name="referTo">A string contains address of the user to refer to.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Refer(Independentsoft.Sip.ContactInfo,Independentsoft.Sip.ContactInfo,Independentsoft.Sip.Contact,System.String,System.String)">
            <summary>
            Transfers call to resource specified with the <c>referTo</c> parameter.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and display name of the sender of the request.</param>
            <param name="to">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and name of the recipient.</param>
            <param name="contact">A <see cref="P:Independentsoft.Sip.SipClient.Contact" /> contains user's contact address and name. Usually the address contains user's IP address and port.</param>
            <param name="referTo">A string contains address of the user to refer to.</param>
            <param name="refferedBy">A string contains address of the user reffered by.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Refer(Independentsoft.Sip.Dialog,System.String)">
            <summary>
            Transfers call to resource specified with the <c>referTo</c> parameter.
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents media session.</param>
            <param name="referTo">A string contains address of the user to refer to.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Refer(Independentsoft.Sip.Dialog,System.String,System.String)">
            <summary>
            Transfers call to resource specified with the <c>referTo</c> parameter.
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents media session.</param>
            <param name="referTo">A string contains address of the user to refer to.</param>
            <param name="refferedBy">A string contains address of the user reffered by.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">dialog;Dialog is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Notify(Independentsoft.Sip.Dialog,System.String)">
            <summary>
            Sends notification when particular event occurs.
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents subscription.</param>
            <param name="subscriptionState">A string represents state of the subscription.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Notify(Independentsoft.Sip.Dialog,System.String,System.String,System.String)">
            <summary>
            Sends notification when particular event occurs.
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents subscription.</param>
            <param name="subscriptionState">A string represents state of the subscription.</param>
            <param name="body">A string contains notification body.</param>
            <param name="contentType">Content type of the body.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Invite(System.String,System.String,System.String,Independentsoft.Sip.Sdp.SessionDescription)">
            <summary>
            Invites another client to media session.
            </summary>
            <param name="from">A string contains address of the initiator of the session.</param>
            <param name="to">A string contains address of the recipient.</param>
            <param name="contact">A string contains user's contact address. Usually the address contains user's IP address and port.</param>
            <param name="session">A <see cref="T:Independentsoft.Sip.Sdp.SessionDescription" /> contains description of the session.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">session;SessionDescription is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Invite(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Invites another client to media session.
            </summary>
            <param name="from">A string contains address of the initiator of the session.</param>
            <param name="to">A string contains address of the recipient.</param>
            <param name="contact">A string contains user's contact address. Usually the address contains user's IP address and port.</param>
            <param name="body">A string contains session description.</param>
            <param name="contentType">Content type of the body.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Invite(Independentsoft.Sip.ContactInfo,Independentsoft.Sip.ContactInfo,Independentsoft.Sip.Contact,Independentsoft.Sip.Sdp.SessionDescription)">
            <summary>
            Invites another client to media session.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and name of the initiator of the session.</param>
            <param name="to">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and name of the recipient.</param>
            <param name="contact">A string contains user's contact address. Usually the address contains user's IP address and port.</param>
            <param name="session">A <see cref="T:Independentsoft.Sip.Sdp.SessionDescription" /> contains description of the session.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">session;SessionDescription is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Invite(Independentsoft.Sip.ContactInfo,Independentsoft.Sip.ContactInfo,Independentsoft.Sip.Contact,System.String,System.String)">
            <summary>
            Invites another client to media session.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and name of the initiator of the session.</param>
            <param name="to">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and name of the recipient.</param>
            <param name="contact">A string contains user's contact address. Usually the address contains user's IP address and port.</param>
            <param name="body">A string contains session description.</param>
            <param name="contentType">Content type of the body.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Reinvite(Independentsoft.Sip.Dialog,Independentsoft.Sip.Sdp.SessionDescription)">
            <summary>
            Changes characteristics of the existing session.
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents media session.</param>
            <param name="session">A <see cref="T:Independentsoft.Sip.Sdp.SessionDescription" /> contains description of the session.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Reinvite(Independentsoft.Sip.Dialog,System.String,System.String)">
            <summary>
            Changes characteristics of the existing session.
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents media session.</param>
            <param name="body">A string contains session description.</param>
            <param name="contentType">Content type of the body.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Invite(Independentsoft.Sip.Dialog,Independentsoft.Sip.Sdp.SessionDescription)">
            <summary>
            Changes characteristics of the existing session.
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents media session.</param>
            <param name="session">A <see cref="T:Independentsoft.Sip.Sdp.SessionDescription" /> contains description of the session.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">session;SessionDescription is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Invite(Independentsoft.Sip.Dialog,System.String,System.String)">
            <summary>
            Changes characteristics of the existing session.
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents media session.</param>
            <param name="body">A string contains session description.</param>
            <param name="contentType">Content type of the body.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.GetOptions(System.String,System.String)">
            <summary>
            Gets capabilities of a client or server.
            </summary>
            <param name="from">A string contains address of the sender of the request.</param>
            <param name="to">A string contains address of the recipient.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.GetOptions(System.String,System.String,System.String)">
            <summary>
            Gets capabilities of a client or server.
            </summary>
            <param name="from">A string contains address of the sender of the request.</param>
            <param name="to">A string contains address of the recipient.</param>
            <param name="contact">A string contains user's contact address. Usually the address contains user's IP address and port.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.GetOptions(Independentsoft.Sip.ContactInfo,Independentsoft.Sip.ContactInfo)">
            <summary>
            Gets capabilities of a client or server.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and display name of the sender of the request.</param>
            <param name="to">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and name of the recipient.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.GetOptions(Independentsoft.Sip.ContactInfo,Independentsoft.Sip.ContactInfo,Independentsoft.Sip.Contact)">
            <summary>
            Gets capabilities of a client or server.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and display name of the sender of the request.</param>
            <param name="to">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and name of the recipient.</param>
            <param name="contact">A string contains user's contact address. Usually the address contains user's IP address and port.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendRequest(Independentsoft.Sip.Request)">
            <summary>
            Sends request to a client or server.
            </summary>
            <param name="request">A request to send.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendAsynchRequest(Independentsoft.Sip.Request)">
            <summary>
            Sends request to a client or server and does not wait for the response.
            </summary>
            <param name="request">A request to send.</param>
            <returns>The <see cref="T:Independentsoft.Sip.Request" /> sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponse(Independentsoft.Sip.Response)">
            <summary>
            Sends response to a client or server.
            </summary>
            <param name="response">A <see cref="T:Independentsoft.Sip.Response" /> to send.</param>
            <returns>The <see cref="T:Independentsoft.Sip.Response" /> sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponse(Independentsoft.Sip.Response,Independentsoft.Sip.Request)">
            <summary>
            Sends response to a client or server.
            </summary>
            <param name="response">A <see cref="T:Independentsoft.Sip.Response" /> to send.</param>
            <param name="request">The received <see cref="T:Independentsoft.Sip.Request" />.</param>
            <returns>The <see cref="T:Independentsoft.Sip.Response" /> sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Ack(Independentsoft.Sip.RequestResponse)">
            <summary>
            Acknowledges final response of INVITE request.
            </summary>
            <param name="requestResponse">A <see cref="T:Independentsoft.Sip.RequestResponse" /> from appropriate INVITE request.</param>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Ack(Independentsoft.Sip.RequestResponse,Independentsoft.Sip.Sdp.SessionDescription)">
            <summary>
            Acknowledges final response of INVITE request.
            </summary>
            <param name="requestResponse">A <see cref="T:Independentsoft.Sip.RequestResponse" /> from appropriate INVITE request.</param>
            <param name="description">A <see cref="T:Independentsoft.Sip.Sdp.SessionDescription" /> containing session description.</param>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Ack(Independentsoft.Sip.Response)">
            <summary>
            Acknowledges final response of INVITE request.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Ack(Independentsoft.Sip.Response,Independentsoft.Sip.Sdp.SessionDescription)">
            <summary>
            Acknowledges final response of INVITE request.
            </summary>
            <param name="response">The response.</param>
            <param name="description">A <see cref="T:Independentsoft.Sip.Sdp.SessionDescription" /> containing session description.</param>
            <exception cref="T:System.ArgumentNullException">response;Response is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Ack(Independentsoft.Sip.Dialog)">
            <summary>
            Acknowledges final response of INVITE request.
            </summary>
            <param name="dialog">The dialog.</param>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Ack(Independentsoft.Sip.Dialog,Independentsoft.Sip.Sdp.SessionDescription)">
            <summary>
            Acknowledges final response of INVITE request.
            </summary>
            <param name="dialog">The dialog.</param>
            <param name="description">A <see cref="T:Independentsoft.Sip.Sdp.SessionDescription" /> containing session description.</param>
            <exception cref="T:System.ArgumentNullException">dialog;Dialog is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.AcceptRequest(Independentsoft.Sip.Request)">
            <summary>
            Sends "OK" response with status code 200.
            </summary>
            <param name="request">The received request to accept.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.AcceptRequest(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "OK" response with status code 200 and the specified description text.
            </summary>
            <param name="request">The received request to accept.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseUnauthorized(Independentsoft.Sip.Request)">
            <summary>
            Sends "Unauthorized" response with status code 401.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseUnauthorized(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Unauthorized" response with status code 401 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseRinging(Independentsoft.Sip.Request)">
            <summary>
            Sends "Ringing" response with status code 180.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseRinging(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Ringing" response with status code 180 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseSessionProgress(Independentsoft.Sip.Request)">
            <summary>
            Sends "Session Progress" response with status code 183.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseSessionProgress(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Session Progress" response with status code 183 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseCallIsBeingForwarded(Independentsoft.Sip.Request)">
            <summary>
            Sends "Call Is Being Forwarded" response with status code 181.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseCallIsBeingForwarded(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Call Is Being Forwarded" response with status code 181 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseCallQueued(Independentsoft.Sip.Request)">
            <summary>
            Sends "Call Queued" response with status code 182.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseCallQueued(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Call Queued" response with status code 182 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseBadRequest(Independentsoft.Sip.Request)">
            <summary>
            Sends "Bad Request" response with status code 400.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseBadRequest(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Bad Request" response with status code 400 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseTrying(Independentsoft.Sip.Request)">
            <summary>
            Sends "Trying" response with status code 100.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseTrying(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Trying" response with status code 100 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseBadExtension(Independentsoft.Sip.Request)">
            <summary>
            Sends "Bad Extension" response with status code 420.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseBadExtension(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Bad Extension" response with status code 420 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseRequestPending(Independentsoft.Sip.Request)">
            <summary>
            Sends "Request Pending" response with status code 491.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseRequestPending(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Request Pending" response with status code 491 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseOK(Independentsoft.Sip.Request)">
            <summary>
            Sends "OK" response with status code 200. It is same method as <see cref="M:Independentsoft.Sip.SipClient.AcceptRequest(Independentsoft.Sip.Request)" />.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseOK(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "OK" response with status code 200 and the specified description text. It is same method as <see cref="M:Independentsoft.Sip.SipClient.AcceptRequest(Independentsoft.Sip.Request)" />.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseDecline(Independentsoft.Sip.Request)">
            <summary>
            Sends "Decline" response with status code 603. It is same method as <see cref="M:Independentsoft.Sip.SipClient.RejectRequest(Independentsoft.Sip.Request)" />.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseDecline(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Decline" response with status code 603 and the specified description text. It is same method as <see cref="M:Independentsoft.Sip.SipClient.RejectRequest(Independentsoft.Sip.Request)" />.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseAccepted(Independentsoft.Sip.Request)">
            <summary>
            Sends "Accepted" response with status code 202.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseAccepted(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Accepted" response with status code 202 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseForbidden(Independentsoft.Sip.Request)">
            <summary>
            Sends "Forbidden" response with status code 403.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseForbidden(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Forbidden" response with status code 403 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseMethodNotAllowed(Independentsoft.Sip.Request)">
            <summary>
            Sends "Method Not Allowed" response with status code 405.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseMethodNotAllowed(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Method Not Allowed" response with status code 405 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseNotAcceptable(Independentsoft.Sip.Request)">
            <summary>
            Sends "Not Acceptable" response with status code 606.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseNotAcceptable(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Not Acceptable" response with status code 606 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseBadEvent(Independentsoft.Sip.Request)">
            <summary>
            Sends "Bad Event" response with status code 489.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseBadEvent(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Bad Event" response with status code 489 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseNotAcceptableHere(Independentsoft.Sip.Request)">
            <summary>
            Sends "Not Acceptable Here" response with status code 488.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseNotAcceptableHere(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Not Acceptable Here" response with status code 488 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseRequestTerminated(Independentsoft.Sip.Request)">
            <summary>
            Sends "Request Terminated" response with status code 487.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseRequestTerminated(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Request Terminated" response with status code 487 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseBusyHere(Independentsoft.Sip.Request)">
            <summary>
            Sends "Busy Here" response with status code 486.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseBusyHere(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Busy Here" response with status code 486 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseUnsupportedMediaType(Independentsoft.Sip.Request)">
            <summary>
            Sends "Unsupported Media Type" response with status code 415.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseUnsupportedMediaType(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Unsupported Media Type" response with status code 415 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseUnsupportedURIScheme(Independentsoft.Sip.Request)">
            <summary>
            Sends "Unsupported URI Scheme" response with status code 416.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendResponseUnsupportedURIScheme(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Unsupported URI Scheme" response with status code 416 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.RejectRequest(Independentsoft.Sip.Request)">
            <summary>
            Sends "Decline" response with status code 603.
            </summary>
            <param name="request">The received request.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.RejectRequest(Independentsoft.Sip.Request,System.String)">
            <summary>
            Sends "Decline" response with status code 603 and the specified description text.
            </summary>
            <param name="request">The received request.</param>
            <param name="description">A string containing response description text.</param>
            <returns>The response sent.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Cancel">
            <summary>
            Cancels last pending INVITE attempt.
            </summary>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Cancel(Independentsoft.Sip.Dialog)">
            <summary>
            Cancels pending INVITE attempt specified with the early dialog.
            </summary>
            <param name="earlyDialog">An early dialog represents invitation to session.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">earlyDialog;Can not send CANCEL request. Dialog is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendMessage(System.String,System.String,System.String)">
            <summary>
            Sends instant message. The content type of the message is "text/plain".
            </summary>
            <param name="from">A string contains address of the sender of the message.</param>
            <param name="to">A string contains address of the recipient.</param>
            <param name="message">A string contains message to send.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendMessage(System.String,System.String,System.String,System.String)">
            <summary>
            Sends instant message with the specified content type.
            </summary>
            <param name="from">A string contains address of the sender of the message.</param>
            <param name="to">A string contains address of the recipient.</param>
            <param name="message">A string contains message to send.</param>
            <param name="contentType">Content type of the body.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendMessage(Independentsoft.Sip.ContactInfo,Independentsoft.Sip.ContactInfo,System.String)">
            <summary>
            Sends plain text instant message. The content type of the message is "text/plain".
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and display name of the sender of the message.</param>
            <param name="to">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and name of the recipient.</param>
            <param name="message">A string contains message to send.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendMessage(Independentsoft.Sip.ContactInfo,Independentsoft.Sip.ContactInfo,System.String,System.String)">
            <summary>
            Sends instant message with the specified content type.
            </summary>
            <param name="from">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and display name of the sender of the message.</param>
            <param name="to">A <see cref="T:Independentsoft.Sip.ContactInfo" /> contains address and name of the recipient.</param>
            <param name="message">A string contains message to send.</param>
            <param name="contentType">Content type of the body.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendMessage(Independentsoft.Sip.Dialog,System.String)">
            <summary>
            Sends instant message. The content type of the message is "text/plain".
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents media session.</param>
            <param name="message">A string contains message to send.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendMessage(Independentsoft.Sip.Dialog,System.String,System.String)">
            <summary>
            Sends instant message with the specified content type.
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents media session.</param>
            <param name="message">A string contains message to send.</param>
            <param name="contentType">Content type of the body.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.SendInfo(Independentsoft.Sip.Dialog,System.String,System.String)">
            <summary>
            Sends call signaling information to another client with which it has an established media session.
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents media session.</param>
            <param name="info">A string contains signaling information.</param>
            <param name="contentType">Content type of the body.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Update(Independentsoft.Sip.Dialog,Independentsoft.Sip.Sdp.SessionDescription)">
            <summary>
            Modifies the state of a session without changing the state of the dialog.
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents media session.</param>
            <param name="description">An updated session description.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentException">SessionDescription is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Update(Independentsoft.Sip.Dialog,System.String,System.String)">
            <summary>
            Modifies the state of a session without changing the state of the dialog.
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents media session.</param>
            <param name="body">A string contains session description.</param>
            <param name="contentType">Content type of the body.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Prack(Independentsoft.Sip.Dialog)">
            <summary>
            Acknowledges receipt of reliably transported provisional response. Provisional responses is response
            with status code 1xx.
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents media session.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">dialog;Dialog is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Bye(Independentsoft.Sip.Dialog)">
            <summary>
            Terminates established media session specified with the dialog.
            </summary>
            <param name="dialog">A <see cref="T:Independentsoft.Sip.Dialog" /> represents media session.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">dialog;Dialog is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Bye(Independentsoft.Sip.RequestResponse)">
            <summary>
            Terminates established media session specified with the requestResponse parameter.
            </summary>
            <param name="requestResponse">A <see cref="T:Independentsoft.Sip.RequestResponse" /> from appropriate INVITE request.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">requestResponse;RequestResponse is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Bye(Independentsoft.Sip.Response)">
            <summary>
            Terminates established media session specified with the response parameter.
            </summary>
            <param name="response">A response from appropriate INVITE request.</param>
            <returns>A <see cref="T:Independentsoft.Sip.RequestResponse" /> containing sent <see cref="T:Independentsoft.Sip.Request" /> and received appropriate <see cref="T:Independentsoft.Sip.Response" />.</returns>
            <exception cref="T:System.ArgumentNullException">response;Response is null.</exception>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.GetDialog(Independentsoft.Sip.RequestResponse)">
            <summary>
            Gets existing dialog based on the specified <see cref="T:Independentsoft.Sip.RequestResponse" />.
            </summary>
            <param name="requestResponse">A <see cref="T:Independentsoft.Sip.RequestResponse" /> from appropriate request.</param>
            <returns>A dialog based on the <see cref="T:Independentsoft.Sip.RequestResponse" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.GetDialog(Independentsoft.Sip.Response)">
            <summary>
            Gets existing dialog based on the specified response.
            </summary>
            <param name="response">A response from appropriate request.</param>
            <returns>A dialog based on the <see cref="T:Independentsoft.Sip.Response" />.</returns>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Disconnect">
            <summary>
            Closes the connection and clean up any resources being used.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.ClearOldResponses">
            <summary>
            Clears the old responses.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.ClearDialog(System.String)">
            <summary>
            Clears the dialog.
            </summary>
            <param name="dialogID">The dialog identifier.</param>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.ClearDialogs">
            <summary>
            Clears the dialogs.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.SipClient.Authentication(Independentsoft.Sip.Request,Independentsoft.Sip.Response)">
            <summary>
            Authentications the specified request.
            </summary>
            <param name="request">The request.</param>
            <param name="response">The response.</param>
            <returns>System.String.</returns>
            <exception cref="T:Independentsoft.Sip.AuthenticationException">Do not support authentication:  + wwwAuthenticate</exception>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.Timeout">
            <summary>
            The number of milliseconds to wait before the request times out. The default is 60000 milliseconds (60 seconds).
            </summary>
            <value>The timeout.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.Rport">
            <summary>
            Gets or sets remote port parameter in the Via header value for all requests. Default value is -1.
            </summary>
            <value>The rport.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.MaxForwards">
            <summary>
            Gets or sets <c>Max-Forwards</c> default header value for all requests.
            </summary>
            <value>The maximum forwards.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.MaxRetryCount">
            <summary>
            Gets or sets number of attempts during wrong authentication.
            </summary>
            <value>The maximum retry count.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.UserAgent">
            <summary>
            Gets or sets user agent.
            </summary>
            <value>The user agent.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.Username">
            <summary>
            Gets or sets user name.
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.Password">
            <summary>
            Gets or sets password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.AuthenticationUsername">
            <summary>
            Gets or sets authentication user name. If is set then value of this property will be used instead of <c>Username</c> during authentication.
            </summary>
            <value>The authentication username.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.Domain">
            <summary>
            Gets or sets domain, name of IP address of the remote SIP server.
            </summary>
            <value>The domain.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.Port">
            <summary>
            Gets or sets port number of remote SIP server.
            </summary>
            <value>The port.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.Contact">
            <summary>
            Gets or sets <c>Contact</c> header field. The <c>Contact</c> header field is used to convey a URI
            that identifies the request/response originator.
            </summary>
            <value>The contact.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.Protocol">
            <summary>
            Gets or sets the protocol type of the client.
            </summary>
            <value>The protocol.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.LocalIPEndPoint">
            <summary>
            Gets or sets local IP address and the port number.
            </summary>
            <value>The local ip end point.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.RemoteIPEndPoint">
            <summary>
            Gets or sets remote IP address and the port number.
            </summary>
            <value>The remote ip end point.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.NatAddress">
            <summary>
            Gets or sets name or IP address of NAT device (for example router).
            </summary>
            <value>The nat address.</value>
            <example>
            The following code example set NatAddress property.
              <code>
            client.NatAddress = "84.101.102.103"; //set only IP address
            or
            client.NatAddress = "84.101.102.103:4567"; //set IP address and port (if different then local port)
              </code></example>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.Logger">
            <summary>
            Gets or sets logger.
            </summary>
            <value>The logger.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.Accept">
            <summary>
            Gets or sets <c>Accept</c> header field. The <c>Accept</c> header field is used to indicate acceptable message Internet media types in the request body.
            The header field describes media types using the format <c>type/sub-type</c> commonly used in the Internet.
            If not present, the assumed acceptable request body format is application/sdp. The wildcard "*" can be used to specify all subtypes.
            </summary>
            <value>The accept.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.Allow">
            <summary>
            Gets or sets <c>Allow</c> header field. The <c>Allow</c> header field lists the set of methods
            supported by the client.
            </summary>
            <value>The allow.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.Dialogs">
            <summary>
            Gets array of existing dialogs.
            </summary>
            <value>The dialogs.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.UsePermanentTcpConnection">
            <summary>
            Gets or sets tcp connnection as permanent.
            </summary>
            <value>
                <c>true</c> if [use permanent TCP connection]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.TcpListenerSocket">
            <summary>
            Gets or sets tcp listener socket.
            </summary>
            <value>The TCP listener socket.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.TcpPermanentSocket">
            <summary>
            Gets or sets tcp permanent socket.
            </summary>
            <value>The TCP permanent socket.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.TcpRequestSocket">
            <summary>
            Gets or sets tcp request socket.
            </summary>
            <value>The TCP request socket.</value>
        </member>
        <member name="P:Independentsoft.Sip.SipClient.UdpSocket">
            <summary>
            Gets or sets udp socket.
            </summary>
            <value>The UDP socket.</value>
        </member>
        <member name="E:Independentsoft.Sip.SipClient.ReceiveRequest">
            <summary>
            Occurs when the client receives a <see cref="T:Independentsoft.Sip.Request" />.
            </summary>
        </member>
        <member name="E:Independentsoft.Sip.SipClient.ReceiveResponse">
            <summary>
            Occurs when the client receives a <see cref="T:Independentsoft.Sip.Response" />.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.ReceiveRequestEventHandler">
            <summary>
            Represents the method that will handle the <see cref="!:ReceiveRequest" /> event
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Independentsoft.Sip.RequestEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Independentsoft.Sip.ReceiveResponseEventHandler">
            <summary>
            Represents the method that will handle the <see cref="!:ReceiveResponse" /> event
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Independentsoft.Sip.ResponseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Independentsoft.Sip.SipMethod">
            <summary>
            The SipMethod enumeration defines the set of standard SIP methods.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.SipMethod.Register">
            <summary>
            The method is a REGISTER method.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.SipMethod.Invite">
            <summary>
            The method is an INVITE method.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.SipMethod.Bye">
            <summary>
            The method is a BYE method.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.SipMethod.Options">
            <summary>
            The method is an OPTIONS method.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.SipMethod.Ack">
            <summary>
            The method is an ACK method.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.SipMethod.Info">
            <summary>
            The method is an INFO method.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.SipMethod.Notify">
            <summary>
            The method is a NOTIFY method.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.SipMethod.Update">
            <summary>
            The method is an UPDATE method.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.SipMethod.Cancel">
            <summary>
            The method is a CANCEL method.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.SipMethod.Refer">
            <summary>
            The method is a REFER method.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.SipMethod.Message">
            <summary>
            The method is a MESSAGE method.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.SipMethod.Subscribe">
            <summary>
            The method is a SUBSCRIBE method.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.SipMethod.Prack">
            <summary>
            The method is a PRACK method.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.SipMethod.Publish">
            <summary>
            The method is a PUBLISH method.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.StandardHeader">
            <summary>
            The StandardHeader enumeration values identify the standard SIP headers.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Accept">
            <summary>
            SIP Accept header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.AcceptEncoding">
            <summary>
            SIP Accept-Encoding header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.AcceptLanguage">
            <summary>
            SIP Accept-Language header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.AlertInfo">
            <summary>
            SIP Alert-Info header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Allow">
            <summary>
            SIP Allow header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.AllowEvents">
            <summary>
            SIP Allow-Events header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.AuthenticationInfo">
            <summary>
            SIP Authentication-Info header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Authorization">
            <summary>
            SIP Authorization header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.CallID">
            <summary>
            SIP Call-ID header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.CallInfo">
            <summary>
            SIP Call-Info header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Contact">
            <summary>
            SIP Contact header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.ContentDisposition">
            <summary>
            SIP Content-Disposition header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.ContentEncoding">
            <summary>
            SIP Content-Encoding header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.ContentLanguage">
            <summary>
            SIP Content-Language header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.ContentLength">
            <summary>
            SIP Content-Length header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.ContentType">
            <summary>
            SIP Content-Type header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.CSeq">
            <summary>
            SIP CSeq header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Date">
            <summary>
            SIP Date header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.ErrorInfo">
            <summary>
            SIP Error-Info header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Expires">
            <summary>
            SIP Expires header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Event">
            <summary>
            SIP Event header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.From">
            <summary>
            SIP From header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.InReplyTo">
            <summary>
            SIP In-Reply-To header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Join">
            <summary>
            SIP Join header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.MaxForwards">
            <summary>
            SIP Max-Forwards header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.MinExpires">
            <summary>
            SIP Min-Expires header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.MimeVersion">
            <summary>
            SIP MIME-Version header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Organization">
            <summary>
            SIP Organization header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Priority">
            <summary>
            SIP Priority header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.ProxyAuthenticate">
            <summary>
            SIP Proxy-Authenticate header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.ProxyAuthorization">
            <summary>
            SIP Proxy-Authorization header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.ProxyRequire">
            <summary>
            SIP Proxy-Require header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.RAck">
            <summary>
            SIP RAck header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.RSeq">
            <summary>
            SIP RSeq header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.RecordRoute">
            <summary>
            SIP Record-Route header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.ReferredBy">
            <summary>
            SIP Referred-By header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.ReferTo">
            <summary>
            SIP Refer-To header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Replaces">
            <summary>
            SIP Replaces header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.ReplyTo">
            <summary>
            SIP Reply-To header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Require">
            <summary>
            SIP Require header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.RetryAfter">
            <summary>
            SIP Retry-After header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Route">
            <summary>
            SIP Route header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Server">
            <summary>
            SIP Server header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.SipETag">
            <summary>
            SIP Sip-ETag header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.SipIfMatch">
            <summary>
            SIP Sip-If-Match header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Subject">
            <summary>
            SIP Subject header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.SubscriptionState">
            <summary>
            SIP Subscription-State header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Supported">
            <summary>
            SIP Supported header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.To">
            <summary>
            SIP To header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Timestamp">
            <summary>
            SIP Time-Stamp header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Unsupported">
            <summary>
            SIP Unsupported header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.UserAgent">
            <summary>
            SIP User-Agent header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Via">
            <summary>
            SIP Via header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.Warning">
            <summary>
            SIP Warning header.
            </summary>
        </member>
        <member name="F:Independentsoft.Sip.StandardHeader.WwwAuthenticate">
            <summary>
            SIP WWW-Authenticate header.
            </summary>
        </member>
        <member name="T:Independentsoft.Sip.TimeoutException">
            <summary>
            The exception that is thrown when a specified timeout has expired.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.TimeoutException.#ctor">
            <summary>
            Initializes a new instance of the TimeoutException class. 
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.TimeoutException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TimeoutException class with the specified error message. 
            </summary>
            <param name="message">The message that describes the error</param>
        </member>
        <member name="M:Independentsoft.Sip.TimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the TimeoutException class with the specified error message and inner exception. 
            </summary>
            <param name="message">The message that describes the error</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:Independentsoft.Sip.WriteLogEventArgs">
            <summary>
            Provides data for the WriteLog event.
            </summary>
        </member>
        <member name="M:Independentsoft.Sip.WriteLogEventArgs.#ctor">
            <summary>
            Initializes a new instance of the WriteLogEventArgs class.
            </summary>
        </member>
        <member name="P:Independentsoft.Sip.WriteLogEventArgs.Log">
            <summary>
            Gets the current log data.
            </summary>
        </member>
    </members>
</doc>